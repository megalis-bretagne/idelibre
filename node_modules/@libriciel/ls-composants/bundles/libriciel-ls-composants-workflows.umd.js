(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/platform-browser/animations'), require('@angular/forms'), require('@angular/common'), require('@ng-bootstrap/ng-bootstrap'), require('@angular/platform-browser'), require('@angular/cdk/drag-drop')) :
    typeof define === 'function' && define.amd ? define('@libriciel/ls-composants/workflows', ['exports', '@angular/core', '@angular/platform-browser/animations', '@angular/forms', '@angular/common', '@ng-bootstrap/ng-bootstrap', '@angular/platform-browser', '@angular/cdk/drag-drop'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.libriciel = global.libriciel || {}, global.libriciel['ls-composants'] = global.libriciel['ls-composants'] || {}, global.libriciel['ls-composants'].workflows = {}), global.ng.core, global.ng.platformBrowser.animations, global.ng.forms, global.ng.common, global['ng-bootstrap'], global.ng.platformBrowser, global.ng.cdk.dragDrop));
}(this, (function (exports, core, animations, forms, common, ngBootstrap, platformBrowser, dragDrop) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * Generated from: shared/model/workflows/workflow-model.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var WorkflowModel = /** @class */ (function () {
        function WorkflowModel() {
            this.steps = [];
        }
        return WorkflowModel;
    }());
    if (false) {
        /** @type {?} */
        WorkflowModel.prototype.id;
        /** @type {?} */
        WorkflowModel.prototype.name;
        /** @type {?} */
        WorkflowModel.prototype.description;
        /** @type {?} */
        WorkflowModel.prototype.active;
        /** @type {?} */
        WorkflowModel.prototype.steps;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: shared/model/workflows/step-state.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @enum {string} */
    var StepState = {
        PENDING: "pending",
        CURRENT: "current",
        VALIDATED: "approve",
        SKIPPED: "skipped",
        REJECTED: "rejected",
    };

    /**
     * @fileoverview added by tsickle
     * Generated from: workflows/ls-workflow-model-viewer/ls-workflow-model-viewer.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var LsWorkflowModelViewerComponent = /** @class */ (function () {
        // messages = CircuitDisplayMessages;
        function LsWorkflowModelViewerComponent() {
            this.isInstance = false;
            this.isOver = false;
            this.isRejected = false;
        }
        /**
         * @return {?}
         */
        LsWorkflowModelViewerComponent.prototype.ngOnInit = function () {
            if (!this.circuit) {
                console.error('Missing input circuit data');
                this.circuit = new WorkflowModel();
            }
            if (!this.messages) {
                throw new Error('Missing localised messages for LsWorkflowViewerComponent!');
            }
            if (!this.getStepIconClassFct) {
                throw new Error('Missing getStepIconClassFct for LsWorkflowViewerComponent!');
            }
            if (!this.getStepTooltipFct) {
                throw new Error('Missing getStepTooltipFct for LsWorkflowViewerComponent!');
            }
        };
        /**
         * @return {?}
         */
        LsWorkflowModelViewerComponent.prototype.ngOnChanges = function () {
            console.debug('LsWorkflowViewerComponent::ngOnChanges, ', this);
            if (this.isInstance) {
                console.debug('LsWorkflowViewerComponent::ngOnChanges - circuit is an instance ');
                /** @type {?} */
                var workflow = ( /** @type {?} */(this.circuit));
                this.activeStep = workflow.currentStepIdx;
                this.isOver = workflow.isOver;
                this.isRejected = workflow.rejected;
            }
        };
        /**
         * @param {?} step
         * @return {?}
         */
        LsWorkflowModelViewerComponent.prototype.getStepIconClass = function (step) {
            return this.getStepIconClassFct(step);
        };
        /**
         * @param {?} step
         * @return {?}
         */
        LsWorkflowModelViewerComponent.prototype.getStepTooltip = function (step) {
            return this.getStepTooltipFct(step);
        };
        /**
         * @param {?} stepIdx
         * @return {?}
         */
        LsWorkflowModelViewerComponent.prototype.isActiveStep = function (stepIdx) {
            return !this.isRejected && !this.isOver && stepIdx === this.activeStep;
        };
        /**
         * @param {?} step
         * @return {?}
         */
        LsWorkflowModelViewerComponent.prototype.isPassed = function (step) {
            return this.isInstance && ((step.state === StepState.VALIDATED) || (step.state === StepState.REJECTED));
        };
        /**
         * @param {?} step
         * @param {?} validator
         * @return {?}
         */
        LsWorkflowModelViewerComponent.prototype.isActualValidator = function (step, validator) {
            return this.isInstance && (step.validatedBy.some(( /**
             * @param {?} elem
             * @return {?}
             */function (elem) { return elem.id === validator.id; })));
        };
        /**
         * @return {?}
         */
        LsWorkflowModelViewerComponent.prototype.isCircuitOver = function () {
            return this.isOver && !this.isRejected;
        };
        /**
         * @return {?}
         */
        LsWorkflowModelViewerComponent.prototype.getCircuitEndAdditionalClasses = function () {
            if (this.getCircuitEndAdditionalClassesFct) {
                return this.getCircuitEndAdditionalClassesFct();
            }
            return '';
        };
        /**
         * @param {?} step
         * @param {?} validator
         * @return {?}
         */
        LsWorkflowModelViewerComponent.prototype.getValidatorClasses = function (step, validator) {
            if (this.isActualValidator(step, validator)) {
                if (step.state === StepState.REJECTED) {
                    return this.messages.REJECTED_BY_ICON_CLASS;
                }
                else {
                    return this.messages.VALIDATED_BY_ICON_CLASS;
                }
            }
            return '';
        };
        return LsWorkflowModelViewerComponent;
    }());
    LsWorkflowModelViewerComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'ls-workflow-model-viewer',
                    template: "<div class=\"ls-workflow-display\">\n  <div class=\"ls-workflow-canevas\">\n    <div class=\"circuit-start\">\n      <div class=\"ls-workflow-endpoint-content\">\n        <span class=\"ls-workflow-endpoint-icn fa fa fa-2x\" [ngClass]=\"messages.CIRCUIT_START_ICON\"></span>\n        <span class=\"ls-step-bounds-txt\" [innerText]=\"messages.FIRST_STEP_TXT\"></span>\n      </div>\n    </div>\n    <div class=\"steps-container\">\n      <div *ngFor=\"let step of circuit.steps; index as i\" >\n        <div class=\"ls-workflow-display-step-container\">\n          <div  class=\"ls-workflow-step\" [ngClass]=\"isActiveStep(i) ? 'wa-active-step wa-white-icn' : ''\">\n            <div class=\"ls-step-top-line\">\n              <div class=\"step-number\">{{i + 1}}.</div>\n              <div class=\"step-name\">{{step.name}}</div>\n              <div [ngClass]=\"getStepIconClass(step)\" class=\"step-icn fa\" ngbTooltip=\"{{getStepTooltip(step)}}\"></div>\n            </div>\n            <div class=\"ls-display-step-separator\"></div>\n            <div class=\"ls-step-validator-list\" [ngClass]=\"isInstance ? 'wa-circuit-instance' : ''\">\n              <ng-container *ngIf=\"isPassed(step)\">\n                <div *ngFor=\"let validator of step.validators\">\n                  <ng-template\n                    [ngTemplateOutlet]=\"passedStepTemplateRef\"\n                    [ngTemplateOutletContext]=\"{step: step, validator: validator}\">\n                  </ng-template>\n                </div>\n              </ng-container>\n              <ng-container *ngIf=\" ! isPassed(step)\">\n                <div *ngFor=\"let validator of step.validators\">\n                  <ng-template\n                    [ngTemplateOutlet]=\"pendingStepTemplateRef\"\n                    [ngTemplateOutletContext]=\"{step: step, validator: validator}\">\n                  </ng-template>\n                </div>\n              </ng-container>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"ls-workflow-end\">\n      <div class=\"ls-workflow-endpoint-content\" [ngClass]=\"getCircuitEndAdditionalClasses()\">\n        <span class=\"ls-workflow-endpoint-icn fa fa-2x\" [ngClass]=\"messages.CIRCUIT_END_ICON\"></span>\n        <span class=\"ls-step-bounds-txt\" [innerText]=\"messages.LAST_STEP_TXT\"></span>\n      </div>\n    </div>\n  </div>\n</div>\n",
                    styles: ["@charset \"UTF-8\";body{background-color:var(--ls-grey-50)}.active-btn{color:#42a1e8}.ls-workflow-canevas{-ms-flex-align:center;-ms-flex-direction:column;-ms-flex-pack:start;-ms-grid-column:1;-webkit-box-align:center;-webkit-box-direction:normal;-webkit-box-orient:vertical;-webkit-box-pack:start;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;flex-direction:column;grid-column:1;height:100%;justify-content:flex-start}.ls-workflow-step{-webkit-box-shadow:0 0 .25rem rgba(0,0,0,.15);background-color:#fff;border:none;box-shadow:0 0 .25rem rgba(0,0,0,.15);min-height:6rem;width:var(--ls-workflow-step-width,20rem)}.ls-workflow-step .ls-step-top-line{-ms-flex-align:center;-ms-flex-direction:row;-ms-flex-pack:justify;-webkit-box-align:center;-webkit-box-direction:normal;-webkit-box-orient:horizontal;-webkit-box-pack:justify;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;flex-direction:row;font-weight:700;justify-content:space-between;padding:.5rem}.ls-workflow-step .ls-display-step-separator{border-bottom:1px solid #d3d3d3;width:100%}.ls-workflow-step .ls-step-validator-list{color:#5b5b5b;padding:.5rem .5rem .5rem 1.5rem}.ls-workflow-step.selected{-webkit-box-shadow:0 .5rem .25rem rgba(0,0,0,.3);box-shadow:0 .5rem .25rem rgba(0,0,0,.3)}.ls-workflow-step .step-icn{height:1.7rem;width:1.7rem}.ls-workflow-endpoint-content{margin:auto;text-align:center}.ls-workflow-endpoint-content .ls-step-bounds-txt{color:var(--primary);font-weight:700}.ls-workflow-endpoint-content .ls-workflow-endpoint-icn{color:var(--primary)}.ls-workflow-endpoint-content.not-active .ls-step-bounds-txt,.ls-workflow-endpoint-content.not-active .ls-workflow-endpoint-icn{color:#5b5b5b}.ls-workflow-endpoint-content .ls-step-validator-list{text-align:left}.ls-actual-validator{font-weight:700}.ls-actual-validator:before{color:var(--primary);content:\"\uF00C\";font-family:FontAwesome;font-size:1em;left:.5em;position:absolute}.ls-rejector{font-weight:700}.ls-rejector:before{color:var(--danger);content:\"\uF00D\";font-family:FontAwesome;font-size:1em;left:.5em;position:absolute}.wa-comment-icon{color:var(--primary);font-size:1em;margin-right:.5em}.ls-workflow-display .ls-workflow-step{margin:1rem auto;padding-left:0;padding-right:0}.ls-workflow-display .ls-workflow-step .ls-step-validator-list{padding:1rem 1rem 1rem .5rem}.ls-workflow-display .ls-workflow-step .ls-step-validator-list.ls-workflow-instance{padding-left:2rem}.ls-workflow-display .ls-workflow-endpoint-content{-ms-flex-direction:row;-webkit-box-direction:normal;-webkit-box-orient:horizontal;display:-webkit-box;display:-ms-flexbox;display:flex;flex-direction:row}.ls-workflow-display .ls-workflow-endpoint-content .ls-step-bounds-txt{margin-left:.5rem}.ls-workflow-display .ls-step-top-line{-ms-flex-pack:start;-webkit-box-pack:start;justify-content:flex-start;padding-left:.5rem}.ls-workflow-display .ls-step-top-line .step-name{-ms-flex:1;-webkit-box-flex:1;flex:1;margin-left:.7rem}.ls-workflow-display .ls-display-step-separator{border-bottom:1px solid #d3d3d3;width:100%}.ls-workflow-display .ls-workflow-display-step-container{position:relative}.ls-workflow-display .ls-active-step .ls-step-top-line{background-color:var(--primary);color:#fff;margin:0}.ls-workflow-display .ls-active-step .ls-step-top-line .step-icn{color:#fff}.ls-workflow-display .ls-active-step:before{color:var(--primary);content:\"\uF061\";font-family:FontAwesome;font-size:2em;left:-1em;position:absolute}.ls-workflow-display .ls-active-step.end-step:before{font-size:1.2em}.ls-workflow-end{position:relative}"]
                }] }
    ];
    /** @nocollapse */
    LsWorkflowModelViewerComponent.ctorParameters = function () { return []; };
    LsWorkflowModelViewerComponent.propDecorators = {
        passedStepTemplateRef: [{ type: core.ContentChild, args: ['passedStepContent',] }],
        pendingStepTemplateRef: [{ type: core.ContentChild, args: ['pendingStepContent',] }],
        circuit: [{ type: core.Input }],
        activeStep: [{ type: core.Input }],
        messages: [{ type: core.Input }],
        getStepIconClassFct: [{ type: core.Input }],
        getStepTooltipFct: [{ type: core.Input }],
        getCircuitEndAdditionalClassesFct: [{ type: core.Input }],
        isInstance: [{ type: core.Input }]
    };
    if (false) {
        /** @type {?} */
        LsWorkflowModelViewerComponent.prototype.passedStepTemplateRef;
        /** @type {?} */
        LsWorkflowModelViewerComponent.prototype.pendingStepTemplateRef;
        /** @type {?} */
        LsWorkflowModelViewerComponent.prototype.circuit;
        /** @type {?} */
        LsWorkflowModelViewerComponent.prototype.activeStep;
        /** @type {?} */
        LsWorkflowModelViewerComponent.prototype.messages;
        /** @type {?} */
        LsWorkflowModelViewerComponent.prototype.getStepIconClassFct;
        /** @type {?} */
        LsWorkflowModelViewerComponent.prototype.getStepTooltipFct;
        /** @type {?} */
        LsWorkflowModelViewerComponent.prototype.getCircuitEndAdditionalClassesFct;
        /** @type {?} */
        LsWorkflowModelViewerComponent.prototype.isInstance;
        /** @type {?} */
        LsWorkflowModelViewerComponent.prototype.isOver;
        /** @type {?} */
        LsWorkflowModelViewerComponent.prototype.isRejected;
    }

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    ;
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }
    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: shared/model/workflows/step-model.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var StepModel = /** @class */ (function () {
        function StepModel() {
            this.validators = [];
        }
        /**
         * @return {?}
         */
        StepModel.prototype.clone = function () {
            console.log('StepModel::clone');
            /** @type {?} */
            var clone = new StepModel();
            clone.name = this.name;
            clone.type = this.type;
            clone.validators = __spread(this.validators);
            return clone;
        };
        return StepModel;
    }());
    if (false) {
        /** @type {?} */
        StepModel.prototype.name;
        /** @type {?} */
        StepModel.prototype.type;
        /** @type {?} */
        StepModel.prototype.validators;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: workflows/ls-workflow-editor/ls-workflow-editor.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var LsWorkflowEditorComponent = /** @class */ (function () {
        function LsWorkflowEditorComponent() {
            this.messages = {
                CREATE_STEP_TITLE: 'Ajouter une étape',
                EDIT_STEP_TITLE: 'Modification de l\'étape',
                ADD_STEP_BTN_TXT: 'Ajouter une étape',
                FIRST_STEP_TXT: 'Début',
                LAST_STEP_TXT: 'Fin',
            };
            this.activeOptions = {
                startIconClass: 'far fa-flag',
                endIconClass: 'fas fa-flag-checkered',
                editorGlobalLayoutClass: 'ls-workflow-editor-default-layout',
                additionalFinalEndpointClasses: ''
            };
            this.endpointIsEditable = false;
            this.workflowChange = new core.EventEmitter();
        }
        Object.defineProperty(LsWorkflowEditorComponent.prototype, "localizedMessages", {
            /**
             * @return {?}
             */
            get: function () {
                return this.messages;
            },
            /**
             * @param {?} value
             * @return {?}
             */
            set: function (value) {
                this.messages = Object.assign(this.messages, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LsWorkflowEditorComponent.prototype, "options", {
            /**
             * @return {?}
             */
            get: function () {
                return this.activeOptions;
            },
            /**
             * @param {?} value
             * @return {?}
             */
            set: function (value) {
                this.activeOptions = Object.assign(this.activeOptions, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LsWorkflowEditorComponent.prototype, "workflow", {
            /**
             * @return {?}
             */
            get: function () {
                return this.workflowData;
            },
            /**
             * @param {?} newValue
             * @return {?}
             */
            set: function (newValue) {
                this.workflowData = newValue;
                this.workflowChange.emit(newValue);
            },
            enumerable: false,
            configurable: true
        });
        /**
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.ngOnInit = function () {
            if (!this.workflowData) {
                console.error('Missing input workflow data');
                this.workflowData = new WorkflowModel();
            }
            if (!this.messages) {
                throw new Error('Missing localised messages for LsWorkflowViewerComponent!');
            }
        };
        /**
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.workflowDataChanged = function () {
            this.workflowChange.emit(this.workflowData);
        };
        /**
         * @param {?} stepIdx
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.askForStepDeletion = function (stepIdx) {
            var _this = this;
            console.debug('delete step');
            if (this.confirmStepDeletionFct) {
                this.confirmStepDeletionFct(this.workflowData.steps[stepIdx]).then(( /**
                 * @param {?} result
                 * @return {?}
                 */function (/**
                 * @param {?} result
                 * @return {?}
                 */ result) {
                    if (result) {
                        _this.deleteStep(stepIdx);
                    }
                }));
            }
            else {
                this.deleteStep(stepIdx);
            }
        };
        /**
         * @param {?} stepData
         * @param {?} idx
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.confirmStepCreation = function (stepData, idx) {
            this.addStep(stepData, idx);
            this.closeCurrentPopover();
        };
        /**
         * @param {?} stepData
         * @param {?} idx
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.confirmStepEdition = function (stepData, idx) {
            this.replaceStep(stepData, idx);
            this.closeCurrentPopover();
        };
        /**
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.confirmFinalStepEdition = function () {
            this.closeCurrentPopover();
        };
        /**
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.cancelStepEdition = function () {
            this.closeCurrentPopover();
        };
        /**
         * @param {?} idx
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.cancelStepCreation = function (idx) {
            this.closeCurrentPopover();
        };
        /**
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.isFirstStep = function () {
            return (!this.workflowData || this.workflowData.steps.length === 0);
        };
        /**
         * @param {?} idx
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.getAdditionalStepClass = function (idx) {
            if (this.currentEditedStepIdx !== null && this.currentEditedStepIdx === idx) {
                return 'selected';
            }
            return '';
        };
        /**
         * @param {?} step
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.getStepIconClass = function (step) {
            if (this.getStepIconClassFct) {
                return this.getStepIconClassFct(step);
            }
            return '';
        };
        /**
         * @param {?} step
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.getStepTooltip = function (step) {
            if (this.getStepTooltipFct) {
                return this.getStepTooltipFct(step);
            }
            return '';
        };
        /**
         * @param {?} src
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.cloneStep = function (src) {
            return src.clone();
        };
        /**
         * @param {?} stepIdx
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.createStep = function (stepIdx) {
            var _this = this;
            /** @type {?} */
            var newStep = new StepModel();
            this.currentPopover = this.getCreationPopoverForIdx(stepIdx);
            this.currentPopover.hidden.subscribe(( /**
             * @return {?}
             */function () { return _this.cancelStepCreation(stepIdx); }));
            this.currentPopover.open({
                stepData: newStep,
                idx: stepIdx,
                cancelStepCreation: this.cancelStepCreation.bind(this),
                confirmStepCreation: this.confirmStepCreation.bind(this)
            });
        };
        /**
         * @param {?} stepIdx
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.editStep = function (stepIdx) {
            var _this = this;
            this.currentEditedStepIdx = stepIdx;
            /** @type {?} */
            var editingStep = this.cloneStep(this.workflowData.steps[stepIdx]);
            this.currentPopover = this.getEditionPopoverForIdx(stepIdx);
            this.currentPopover.hidden.subscribe(( /**
             * @return {?}
             */function () { return _this.cancelStepEdition(); }));
            this.currentPopover.open({
                stepData: editingStep,
                idx: stepIdx,
                cancelStepEdition: this.cancelStepEdition.bind(this),
                confirmStepEdition: this.confirmStepEdition.bind(this)
            });
        };
        /**
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.editFinalStep = function () {
            var _this = this;
            /** @type {?} */
            var editingStep = this.cloneStep(this.lastStepData);
            this.currentPopover = this.endpointPopoverElementRef;
            this.currentPopover.hidden.subscribe(( /**
             * @return {?}
             */function () { return _this.cancelStepEdition(); }));
            this.currentPopover.open({
                stepData: editingStep,
                cancelStepEdition: this.cancelStepEdition.bind(this),
                confirmStepEdition: this.confirmFinalStepEdition.bind(this)
            });
        };
        /**
         * @param {?} event
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.drop = function (event) {
            dragDrop.moveItemInArray(this.workflowData.steps, event.previousIndex, event.currentIndex);
            this.workflowDataChanged();
        };
        /**
         * @param {?} idx
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.dragDisabledForIdx = function (idx) {
            return (this.currentEditedStepIdx !== null && this.currentEditedStepIdx === idx);
        };
        /**
         * @private
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.closeCurrentPopover = function () {
            if (this.currentPopover && this.currentPopover.isOpen()) {
                this.currentPopover.close();
            }
            this.currentPopover = null;
            this.currentEditedStepIdx = null;
        };
        /**
         * @private
         * @param {?} step
         * @param {?} pos
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.addStep = function (step, pos) {
            this.workflowData.steps.splice(pos, 0, step);
            this.workflowDataChanged();
        };
        /**
         * @private
         * @param {?} newStep
         * @param {?} stepIdx
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.replaceStep = function (newStep, stepIdx) {
            this.workflowData.steps.splice(stepIdx, 1, newStep);
            this.workflowDataChanged();
        };
        /**
         * @private
         * @param {?} stepIdx
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.deleteStep = function (stepIdx) {
            this.workflowData.steps.splice(stepIdx, 1);
            this.workflowDataChanged();
        };
        /**
         * @private
         * @param {?} idx
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.getCreationPopoverForIdx = function (idx) {
            /** @type {?} */
            var filteredList = this.allCircuitEditionPopover.filter(( /**
             * @param {?} item
             * @return {?}
             */function (item) {
                /** @type {?} */
                var elem = (( /** @type {?} */(item)))._elementRef;
                if (elem && elem.nativeElement) {
                    return elem.nativeElement.hasAttribute('create-btn');
                }
                return true;
            }));
            return filteredList[idx];
        };
        /**
         * @private
         * @param {?} idx
         * @return {?}
         */
        LsWorkflowEditorComponent.prototype.getEditionPopoverForIdx = function (idx) {
            /** @type {?} */
            var filteredList = this.allCircuitEditionPopover.filter(( /**
             * @param {?} item
             * @return {?}
             */function (item) {
                /** @type {?} */
                var elem = (( /** @type {?} */(item)))._elementRef;
                if (elem && elem.nativeElement) {
                    return !(elem.nativeElement.hasAttribute('create-btn'));
                }
                return true;
            }));
            return filteredList[idx];
        };
        return LsWorkflowEditorComponent;
    }());
    LsWorkflowEditorComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'ls-workflow-editor',
                    template: "<div class=\"ls-workflow-editor\" [ngClass]=\"options.editorGlobalLayoutClass\">\n  <div class=\"ls-workflow-canevas\">\n    <div class=\"ls-workflow-start ls-workflow-endpoint\">\n      <div class=\"ls-workflow-endpoint-content\">\n        <div class=\"ls-workflow-endpoint-icn fa fa-2x\" [ngClass]=\"options.startIconClass\"></div>\n        <div class=\"ls-step-bounds-txt\">{{messages.FIRST_STEP_TXT}}</div>\n      </div>\n    </div>\n    <div class=\"ls-workflow-stepList-container\" cdkDropList (cdkDropListDropped)=\"drop($event)\">\n      <div class=\"ls-workflow-link-container\">\n        <div class=\"ls-workflow-link\"></div>\n        <div [ngClass]=\"isFirstStep() ? 'firstStep' : ''\" class=\"ls-link-button-container\">\n          <div (click)=\"createStep(0)\" [autoClose]=\"'outside'\" [ngbPopover]=\"popCreateContent\"\n               [popoverTitle]=\"messages.popCreateTitle\" class=\"add-step-btn\" create-btn\n               placement=\"right\" popoverClass=\"ls-step-edition-popover\"\n               triggers=\"manual\"\n               autoClose=\"false\">\n            <span class=\"fa fa-plus-circle\"></span>\n            <span class=\"add-step-btn-txt\">{{messages.ADD_STEP_BTN_TXT}}</span>\n          </div>\n        </div>\n      </div>\n\n      <div *ngFor=\"let step of workflowData.steps; index as i\">\n        <div class=\"ls-workflow-step-container\" cdkDrag [cdkDragDisabled]=\"dragDisabledForIdx(i)\">\n          <div [ngClass]=\"getAdditionalStepClass(i)\" class=\"ls-workflow-step\">\n            <div class=\"ls-step-top-line\">\n              <div class=\"step-number\">{{i + 1}}.</div>\n              <div class=\"step-name\">{{step.name}}</div>\n              <div [ngClass]=\"getStepIconClass(step)\" class=\"step-icn fa\" ngbTooltip=\"{{getStepTooltip(step)}}\"></div>\n            </div>\n            <div class=\"ls-step-validator-list\">\n              <ng-template\n                [ngTemplateOutlet]=\"stepDisplayContentRef\"\n                [ngTemplateOutletContext]=\"{step: step}\">\n              </ng-template>\n            </div>\n          </div>\n          <div class=\"ls-workflow-step-external-buttons\">\n            <div (click)=\"editStep(i)\" [autoClose]=\"'outside'\" [ngbPopover]=\"popEditContent\"\n                 [popoverTitle]=\"messages.popEditTitle\" class=\"fa fa-pencil-alt fa-pencil edit-step-btn\"\n                 placement=\"right-top\"\n                 popoverClass=\"ls-step-edition-popover\"\n                 triggers=\"manual\"></div>\n            <div (click)=\"askForStepDeletion(i)\" class=\"fa fa-trash delete-step-btn\"></div>\n          </div>\n        </div>\n\n        <div class=\"ls-workflow-link-container\">\n          <div class=\"ls-workflow-link\"></div>\n          <div class=\"ls-link-button-container\">\n            <div (click)=\"createStep(i + 1)\" [autoClose]=\"'outside'\" [ngbPopover]=\"popCreateContent\"\n                 [popoverTitle]=\"messages.popCreateTitle\" class=\"add-step-btn\" create-btn\n                 placement=\"right\" popoverClass=\"ls-step-edition-popover\"\n                 triggers=\"manual\"\n                 autoClose=\"false\">\n              <span class=\"fa fa-plus-circle\"></span>\n              <span class=\"add-step-btn-txt\">{{messages.ADD_STEP_BTN_TXT}}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n    <div class=\"ls-workflow-end ls-workflow-endpoint\" [ngClass]=\"options.additionalFinalEndpointClasses\">\n      <ng-container *ngIf=\"endpointIsEditable\">\n        <div\n          #endpointPopoverHandle\n          (click)=\"editFinalStep()\"\n          [autoClose]=\"'outside'\"\n          [ngbPopover]=\"popEditFinalStepContent\"\n          [popoverTitle]=\"messages.popEditTitle\"\n          class=\"ls-workflow-endpoint-overlay\"\n          placement=\"right\"\n          popoverClass=\"ls-step-edition-popover\"\n          triggers=\"manual\">\n\n        </div>\n      </ng-container>\n      <div class=\"ls-workflow-endpoint-content\">\n        <div class=\"ls-workflow-endpoint-icn-group\">\n          <div class=\"ls-workflow-endpoint-icn fa fa-2x\" [ngClass]=\"options.endIconClass\"></div>\n          <div class=\"ls-step-bounds-txt\">{{messages.LAST_STEP_TXT}}</div>\n        </div>\n        <div *ngIf=\"endpointIsEditable\" class=\"ls-step-validator-list\">\n          <ng-template [ngTemplateOutlet]=\"lastStepDisplayContentRef\">\n          </ng-template>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</div>\n\n<ng-template\n  #popEditContent\n  let-idx=\"idx\"\n  let-stepData=\"stepData\"\n  let-cancelStepEdition=\"cancelStepEdition\"\n  let-confirmStepEdition=\"confirmStepEdition\">\n  <ng-template\n    [ngTemplateOutlet]=\"popEditContentTemplateRef\"\n    [ngTemplateOutletContext]=\"{idx:idx, stepData:stepData, cancelStepEdition:cancelStepEdition, confirmStepEdition:confirmStepEdition}\">\n  </ng-template>\n</ng-template>\n\n<ng-template\n  #popCreateContent\n  let-idx=\"idx\"\n  let-stepData=\"stepData\"\n  let-cancelStepCreation=\"cancelStepCreation\"\n  let-confirmStepCreation=\"confirmStepCreation\">\n  <ng-template\n    [ngTemplateOutlet]=\"popCreateContentTemplateRef\"\n    [ngTemplateOutletContext]=\"{idx:idx, stepData:stepData, cancelStepCreation:cancelStepCreation, confirmStepCreation:confirmStepCreation}\">\n  </ng-template>\n</ng-template>\n\n\n<ng-template\n  #popEditFinalStepContent\n  let-stepData=\"stepData\"\n  let-cancelStepEdition=\"cancelStepEdition\"\n  let-confirmStepEdition=\"confirmStepEdition\">\n  <ng-template\n    [ngTemplateOutlet]=\"endpointPopoverEditContentRef\"\n    [ngTemplateOutletContext]=\"{stepData:stepData, cancelStepEdition:cancelStepEdition, confirmStepEdition:confirmStepEdition, isLastStep:true}\">\n  </ng-template>\n</ng-template>\n",
                    styles: ["body{background-color:var(--ls-grey-50)}.active-btn{color:#42a1e8}.ls-workflow-canevas{-ms-flex-align:center;-ms-flex-direction:column;-ms-flex-pack:start;-ms-grid-column:1;-webkit-box-align:center;-webkit-box-direction:normal;-webkit-box-orient:vertical;-webkit-box-pack:start;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;flex-direction:column;grid-column:1;height:100%;justify-content:flex-start}.ls-workflow-endpoint.with-content,.ls-workflow-step{-webkit-box-shadow:0 0 .25rem rgba(0,0,0,.15);background-color:#fff;border:none;box-shadow:0 0 .25rem rgba(0,0,0,.15);min-height:6rem;width:var(--ls-workflow-step-width,20rem)}.ls-workflow-endpoint.with-content .ls-step-top-line,.ls-workflow-step .ls-step-top-line{-ms-flex-align:center;-ms-flex-direction:row;-ms-flex-pack:justify;-webkit-box-align:center;-webkit-box-direction:normal;-webkit-box-orient:horizontal;-webkit-box-pack:justify;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;flex-direction:row;font-weight:700;justify-content:space-between;padding:.5rem}.ls-workflow-endpoint.with-content .ls-display-step-separator,.ls-workflow-step .ls-display-step-separator{border-bottom:1px solid #d3d3d3;width:100%}.ls-workflow-endpoint.with-content .ls-step-validator-list,.ls-workflow-step .ls-step-validator-list{color:#5b5b5b;padding:.5rem .5rem .5rem 1.5rem}.ls-workflow-step.selected,.selected.ls-workflow-endpoint.with-content{-webkit-box-shadow:0 .5rem .25rem rgba(0,0,0,.3);box-shadow:0 .5rem .25rem rgba(0,0,0,.3)}.ls-workflow-endpoint.with-content .step-icn,.ls-workflow-step .step-icn{height:1.7rem;width:1.7rem}.ls-workflow-endpoint-content{margin:auto;text-align:center}.ls-workflow-endpoint-content .ls-step-bounds-txt{color:var(--primary);font-weight:700}.ls-workflow-endpoint-content .ls-workflow-endpoint-icn{color:var(--primary)}.ls-workflow-endpoint-content.not-active .ls-step-bounds-txt,.ls-workflow-endpoint-content.not-active .ls-workflow-endpoint-icn{color:#5b5b5b}.ls-workflow-endpoint-content .ls-step-validator-list{text-align:left}.ls-horizontal-separation-line{border-bottom:1px solid #5b5b5b;margin-top:2rem}.ls-workflow-endpoint{-webkit-box-shadow:0 0 .25rem rgba(0,0,0,.15);background-color:#fff;border:none;border-radius:50%;box-shadow:0 0 .25rem rgba(0,0,0,.15);display:-ms-grid;display:grid;height:6rem;position:relative;width:6rem}.ls-workflow-endpoint.with-content{border-radius:0;display:block;width:var(--ls-workflow-step-width,20rem)}.ls-workflow-endpoint.with-content .ls-workflow-endpoint-content{height:100%;padding:.5em;width:100%}.ls-workflow-endpoint.with-content .ls-workflow-endpoint-content .ls-workflow-endpoint-icn-group{-ms-flex-align:baseline;-ms-flex-direction:row-reverse;-ms-flex-pack:justify;-webkit-box-align:baseline;-webkit-box-direction:reverse;-webkit-box-orient:horizontal;-webkit-box-pack:justify;align-items:baseline;display:-webkit-box;display:-ms-flexbox;display:flex;flex-direction:row-reverse;justify-content:space-between;padding:0 .5em;width:100%}.ls-workflow-endpoint.with-content .ls-workflow-endpoint-content .ls-workflow-endpoint-icn-group:after{content:\"\";display:block;width:2em}.ls-workflow-endpoint .ls-workflow-endpoint-overlay{bottom:0;cursor:pointer;height:100%;left:0;position:absolute;width:100%;z-index:2}.ls-workflow-link{border:1px solid #222;width:0}.cdk-drag-preview .ls-workflow-endpoint.with-content,.cdk-drag-preview .ls-workflow-step{-webkit-box-shadow:0 .5rem .25rem rgba(0,0,0,.3);box-shadow:0 .5rem .25rem rgba(0,0,0,.3)}.cdk-drag-placeholder{min-height:6rem}.cdk-drag-placeholder .ls-workflow-endpoint.with-content,.cdk-drag-placeholder .ls-workflow-step,.cdk-drag-placeholder .ls-workflow-step-external-buttons{display:none}.cdk-drop-list-dragging .cdk-drag{-webkit-transition:-webkit-transform .25s cubic-bezier(0,0,.2,1);transition:-webkit-transform .25s cubic-bezier(0,0,.2,1);transition:transform .25s cubic-bezier(0,0,.2,1);transition:transform .25s cubic-bezier(0,0,.2,1),-webkit-transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-animating{-webkit-transition:-webkit-transform .3s cubic-bezier(0,0,.2,1);transition:-webkit-transform .3s cubic-bezier(0,0,.2,1);transition:transform .3s cubic-bezier(0,0,.2,1);transition:transform .3s cubic-bezier(0,0,.2,1),-webkit-transform .3s cubic-bezier(0,0,.2,1)}.ls-workflow-link-container{-ms-flex-direction:row;-webkit-box-direction:normal;-webkit-box-orient:horizontal;display:-webkit-box;display:-ms-flexbox;display:flex;flex-direction:row;min-height:4rem;min-width:20rem}.ls-workflow-link-container:before{-ms-flex:0 0 calc(50% - 2px);-webkit-box-flex:0;content:\"\";flex:0 0 calc(50% - 2px)}.ls-workflow-link-container .ls-link-button-container{-ms-flex:0 0 calc(50% - 2px);-ms-flex-item-align:center;-ms-grid-row-align:center;-webkit-box-flex:0;align-self:center;flex:0 0 calc(50% - 2px);height:-webkit-min-content;height:-moz-min-content;height:min-content;padding-left:1rem;width:-webkit-min-content;width:-moz-min-content;width:min-content}.ls-workflow-stepList-container{width:100%}.ls-workflow-step-container{-ms-flex-direction:row;-ms-flex-item-align:center;-ms-flex-pack:center;-ms-grid-row-align:center;-webkit-box-direction:normal;-webkit-box-orient:horizontal;-webkit-box-pack:center;align-self:center;display:-webkit-box;display:-ms-flexbox;display:flex;flex-direction:row;justify-content:center;margin-left:auto;margin-right:auto}.ls-workflow-step-container:before{-ms-flex:0 0 5rem;-webkit-box-flex:0;content:\"\";flex:0 0 5rem}.ls-workflow-step-container .ls-workflow-endpoint.with-content,.ls-workflow-step-container .ls-workflow-step{-ms-flex-item-align:center;-ms-grid-row-align:center;align-self:center}.ls-workflow-step-container .ls-workflow-step-external-buttons{-ms-flex:0 0 5rem;-webkit-box-flex:0;flex:0 0 5rem;height:-webkit-min-content;height:-moz-min-content;height:min-content;padding-left:1rem}.ls-workflow-step-external-buttons{-ms-flex-direction:row;-ms-flex-pack:start;-webkit-box-direction:normal;-webkit-box-orient:horizontal;-webkit-box-pack:start;display:-webkit-box;display:-ms-flexbox;display:flex;flex-direction:row;justify-content:flex-start}.ls-workflow-step-external-buttons .edit-step-btn{cursor:pointer;margin-right:1rem}.ls-workflow-step-external-buttons .edit-step-btn:hover{color:var(--primary)}.ls-workflow-step-external-buttons .delete-step-btn{cursor:pointer}.ls-workflow-step-external-buttons .delete-step-btn:hover{color:var(--danger)}.ls-workflow-editor{display:-ms-grid;display:grid;height:100%}.ls-workflow-editor .ls-link-button-container .add-step-btn{cursor:pointer;width:-webkit-max-content;width:-moz-max-content;width:max-content}.ls-workflow-editor .ls-link-button-container .add-step-btn .add-step-btn-txt{-webkit-transition:opacity .2s ease-in-out;margin-left:.5em;opacity:0;transition:opacity .2s ease-in-out}.ls-workflow-editor .ls-link-button-container.firstStep .add-step-btn .add-step-btn-txt,.ls-workflow-editor .ls-link-button-container:hover .add-step-btn .add-step-btn-txt{opacity:1}.ls-workflow-editor-default-layout{-ms-grid-columns:66% auto;-ms-grid-rows:100%;grid-template-columns:66% auto;grid-template-rows:100%}@media (min-width:1400px){.container{max-width:1340px}}@media (min-width:1600px){.container{max-width:1540px}}"]
                }] }
    ];
    /** @nocollapse */
    LsWorkflowEditorComponent.ctorParameters = function () { return []; };
    LsWorkflowEditorComponent.propDecorators = {
        endpointPopoverElementRef: [{ type: core.ViewChild, args: ['endpointPopoverHandle', { read: ngBootstrap.NgbPopover },] }],
        allCircuitEditionPopover: [{ type: core.ViewChildren, args: [ngBootstrap.NgbPopover,] }],
        popEditContentTemplateRef: [{ type: core.ContentChild, args: ['popEditContent',] }],
        popCreateContentTemplateRef: [{ type: core.ContentChild, args: ['popCreateContent',] }],
        endpointPopoverEditContentRef: [{ type: core.ContentChild, args: ['endpointPopoverEditContent',] }],
        stepDisplayContentRef: [{ type: core.ContentChild, args: ['stepDisplayContent',] }],
        lastStepDisplayContentRef: [{ type: core.ContentChild, args: ['lastStepDisplayContent',] }],
        endpointIsEditable: [{ type: core.Input }],
        getStepIconClassFct: [{ type: core.Input }],
        getStepTooltipFct: [{ type: core.Input }],
        confirmStepDeletionFct: [{ type: core.Input }],
        lastStepData: [{ type: core.Input }],
        workflowChange: [{ type: core.Output }],
        localizedMessages: [{ type: core.Input }],
        options: [{ type: core.Input }],
        workflow: [{ type: core.Input }]
    };
    if (false) {
        /** @type {?} */
        LsWorkflowEditorComponent.prototype.currentEditedStepIdx;
        /** @type {?} */
        LsWorkflowEditorComponent.prototype.endpointPopoverElementRef;
        /** @type {?} */
        LsWorkflowEditorComponent.prototype.allCircuitEditionPopover;
        /** @type {?} */
        LsWorkflowEditorComponent.prototype.currentPopover;
        /** @type {?} */
        LsWorkflowEditorComponent.prototype.popEditContentTemplateRef;
        /** @type {?} */
        LsWorkflowEditorComponent.prototype.popCreateContentTemplateRef;
        /** @type {?} */
        LsWorkflowEditorComponent.prototype.endpointPopoverEditContentRef;
        /** @type {?} */
        LsWorkflowEditorComponent.prototype.stepDisplayContentRef;
        /** @type {?} */
        LsWorkflowEditorComponent.prototype.lastStepDisplayContentRef;
        /** @type {?} */
        LsWorkflowEditorComponent.prototype.messages;
        /** @type {?} */
        LsWorkflowEditorComponent.prototype.activeOptions;
        /** @type {?} */
        LsWorkflowEditorComponent.prototype.endpointIsEditable;
        /** @type {?} */
        LsWorkflowEditorComponent.prototype.getStepIconClassFct;
        /** @type {?} */
        LsWorkflowEditorComponent.prototype.getStepTooltipFct;
        /** @type {?} */
        LsWorkflowEditorComponent.prototype.confirmStepDeletionFct;
        /** @type {?} */
        LsWorkflowEditorComponent.prototype.lastStepData;
        /** @type {?} */
        LsWorkflowEditorComponent.prototype.workflowData;
        /** @type {?} */
        LsWorkflowEditorComponent.prototype.workflowChange;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: shared/model/workflows/workflow-instance.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var WorkflowInstance = /** @class */ (function () {
        // This constructor is only valid while we use stub services,
        // It should be replace with a constructor from "circuitRaw"
        // constructor(circuitModel: Circuit, stepInstances?: StepInstance[]) {
        /**
         * @param {?=} instData
         */
        function WorkflowInstance(instData) {
            this.currentStepIdx = 0;
            this.rejected = false;
            this.isOver = false;
            this.id = instData.id;
            this.name = instData.name;
            this.description = instData.description;
            this.rejected = instData.isRejected;
            this.isOver = instData.isOver;
            if (instData.steps) {
                this.steps = instData.steps;
                this.currentStepIdx = instData.steps.findIndex(( /**
                 * @param {?} step
                 * @return {?}
                 */function (/**
                 * @param {?} step
                 * @return {?}
                 */ step) { return step.state === StepState.CURRENT; }));
                if (this.currentStepIdx === -1) {
                    this.currentStepIdx = 0;
                }
            }
        }
        return WorkflowInstance;
    }());
    if (false) {
        /** @type {?} */
        WorkflowInstance.prototype.id;
        /** @type {?} */
        WorkflowInstance.prototype.name;
        /** @type {?} */
        WorkflowInstance.prototype.description;
        /** @type {?} */
        WorkflowInstance.prototype.currentStepIdx;
        /** @type {?} */
        WorkflowInstance.prototype.steps;
        /** @type {?} */
        WorkflowInstance.prototype.rejected;
        /** @type {?} */
        WorkflowInstance.prototype.isOver;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: workflows/ls-workflow-instance-viewer/ls-workflow-instance-viewer.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var LsWorkflowInstanceViewerComponent = /** @class */ (function () {
        function LsWorkflowInstanceViewerComponent() {
            this.messages = {
                FIRST_STEP_TXT: 'Start',
                LAST_STEP_TXT: 'End'
            };
            this.reducedMode = true;
            this.isOver = false;
            this.isRejected = false;
            this._options = {
                startIconClass: 'far fa-flag',
                endIconClass: 'fas fa-flag-checkered',
                validatedIconClass: 'fas fa-check',
                rejectedIconClass: 'fas fa-times',
                hideStart: false
            };
        }
        Object.defineProperty(LsWorkflowInstanceViewerComponent.prototype, "options", {
            /**
             * @return {?}
             */
            get: function () {
                return this._options;
            },
            /**
             * @param {?} value
             * @return {?}
             */
            set: function (value) {
                this._options = Object.assign(this._options, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LsWorkflowInstanceViewerComponent.prototype, "localizedMessages", {
            /**
             * @return {?}
             */
            get: function () {
                return this.messages;
            },
            /**
             * @param {?} value
             * @return {?}
             */
            set: function (value) {
                this.messages = Object.assign(this.messages, value);
            },
            enumerable: false,
            configurable: true
        });
        /**
         * @return {?}
         */
        LsWorkflowInstanceViewerComponent.prototype.ngOnInit = function () {
            console.warn('instanciating ls workflow instance viewer!');
            if (!this.workflowData) {
                console.error('Missing input circuit data');
                this.workflowData = new WorkflowInstance();
            }
            if (!this.messages) {
                throw new Error('Missing localised messages for LsWorkflowViewerComponent!');
            }
            if (!this.getStepIconClassFct) {
                throw new Error('Missing getStepIconClassFct for LsWorkflowViewerComponent!');
            }
            if (!this.getStepTooltipFct) {
                throw new Error('Missing getStepTooltipFct for LsWorkflowViewerComponent!');
            }
        };
        /**
         * @return {?}
         */
        LsWorkflowInstanceViewerComponent.prototype.ngOnChanges = function () {
            console.debug('LsWorkflowViewerComponent::ngOnChanges, ', this);
            this.activeStep = this.workflowData.currentStepIdx;
            this.isOver = this.workflowData.isOver;
            this.isRejected = this.workflowData.rejected;
        };
        /**
         * @param {?} step
         * @return {?}
         */
        LsWorkflowInstanceViewerComponent.prototype.getStepIconClass = function (step) {
            return this.getStepIconClassFct(step);
        };
        /**
         * @param {?} step
         * @return {?}
         */
        LsWorkflowInstanceViewerComponent.prototype.getStepTooltip = function (step) {
            return this.getStepTooltipFct(step);
        };
        /**
         * @param {?} stepIdx
         * @return {?}
         */
        LsWorkflowInstanceViewerComponent.prototype.isActiveStep = function (stepIdx) {
            return !this.isRejected && !this.isOver && stepIdx === this.activeStep;
        };
        /**
         * @param {?} step
         * @return {?}
         */
        LsWorkflowInstanceViewerComponent.prototype.isPassed = function (step) {
            return (step.state === StepState.VALIDATED) || (step.state === StepState.REJECTED);
        };
        /**
         * @param {?} step
         * @param {?} validator
         * @return {?}
         */
        LsWorkflowInstanceViewerComponent.prototype.isActualValidator = function (step, validator) {
            return step.validatedBy.some(( /**
             * @param {?} elem
             * @return {?}
             */function (elem) { return elem.id === validator.id; }));
        };
        /**
         * @return {?}
         */
        LsWorkflowInstanceViewerComponent.prototype.isCircuitOver = function () {
            return this.isOver && !this.isRejected;
        };
        /**
         * @return {?}
         */
        LsWorkflowInstanceViewerComponent.prototype.getCircuitEndAdditionalClasses = function () {
            /** @type {?} */
            var classes = [];
            if (this.getCircuitEndAdditionalClassesFct) {
                classes.push(this.getCircuitEndAdditionalClassesFct());
            }
            else {
                classes.push(this._options.additionalFinalEndpointClasses || '');
            }
            if (this.reducedMode) {
                classes.push('reduced-end-step');
            }
            return classes;
        };
        /**
         * @return {?}
         */
        LsWorkflowInstanceViewerComponent.prototype.getAdditionalValidatorListClasses = function () {
            //wa-circuit-instance
        };
        /**
         * @param {?} step
         * @param {?} stepIdx
         * @return {?}
         */
        LsWorkflowInstanceViewerComponent.prototype.getStepAdditionalClasses = function (step, stepIdx) {
            // this.isActiveStep(stepIdx) ? 'wa-active-step wa-white-icn' : ''
            /** @type {?} */
            var classes = [];
            if (this.isActiveStep(stepIdx)) {
                classes.push('ls-active-step ls-white-icn');
            }
            if (this.reducedMode) {
                classes.push('ls-reduced-step');
            }
            if (!this.reducedMode) {
                if (step.state === StepState.SKIPPED) {
                    classes.push('wa-circuit-skipped-step');
                }
            }
            if (step.state === StepState.VALIDATED) {
                classes.push('ls-validated-step');
            }
            return classes;
        };
        /**
         * @param {?} step
         * @param {?} validator
         * @return {?}
         */
        LsWorkflowInstanceViewerComponent.prototype.getValidatorClasses = function (step, validator) {
            if (this.isActualValidator(step, validator)) {
                if (step.state === StepState.REJECTED) {
                    return this.options.rejectedIconClass;
                }
                else {
                    return this.options.validatedIconClass;
                }
            }
            return '';
        };
        return LsWorkflowInstanceViewerComponent;
    }());
    LsWorkflowInstanceViewerComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'ls-workflow-instance-viewer',
                    template: "<div class=\"ls-workflow-display\">\n  <div class=\"ls-workflow-canevas\">\n    <div class=\"circuit-start\">\n      <div *ngIf=\"!options.hideStart\" class=\"ls-workflow-endpoint-content\">\n        <span class=\"ls-workflow-endpoint-icn fa fa fa-2x\" [ngClass]=\"options.startIconClass\"></span>\n        <span class=\"ls-step-bounds-txt\" [innerText]=\"messages.FIRST_STEP_TXT\"></span>\n      </div>\n    </div>\n    <div class=\"steps-container\">\n      <div *ngFor=\"let step of workflowData.steps; index as i\">\n        <div class=\"ls-workflow-display-step-container\">\n          <div class=\"ls-workflow-step\" [ngClass]=\"getStepAdditionalClasses(step, i)\">\n            <div class=\"ls-step-top-line\">\n              <div class=\"step-number\">{{i + 1}}.</div>\n              <div class=\"step-name\">{{step.name}}</div>\n              <div [ngClass]=\"getStepIconClass(step)\" class=\"step-icn fa\" ngbTooltip=\"{{getStepTooltip(step)}}\"></div>\n            </div>\n            <div class=\"ls-display-step-separator\"></div>\n            <div class=\"ls-step-validator-list\" [ngClass]=\"getAdditionalValidatorListClasses\">\n              <ng-container *ngIf=\"isPassed(step)\">\n                <div *ngFor=\"let validator of step.validators\">\n                  <ng-template\n                    [ngTemplateOutlet]=\"passedStepTemplateRef\"\n                    [ngTemplateOutletContext]=\"{step: step, validator: validator}\">\n                  </ng-template>\n                </div>\n              </ng-container>\n              <ng-container *ngIf=\" ! isPassed(step)\">\n                <div *ngFor=\"let validator of step.validators\" class=\"ls-step-validator\">\n                  <ng-template\n                    [ngTemplateOutlet]=\"pendingStepTemplateRef\"\n                    [ngTemplateOutletContext]=\"{step: step, validator: validator}\">\n                  </ng-template>\n                </div>\n              </ng-container>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"ls-workflow-end\" [ngClass]=\"getCircuitEndAdditionalClasses()\">\n      <div class=\"ls-workflow-endpoint-content\">\n        <span class=\"ls-workflow-endpoint-icn fa fa-2x\" [ngClass]=\"options.endIconClass\"></span>\n        <span class=\"ls-step-bounds-txt\" [innerText]=\"messages.LAST_STEP_TXT\"></span>\n      </div>\n    </div>\n  </div>\n</div>\n",
                    styles: ["@charset \"UTF-8\";body{background-color:var(--ls-grey-50)}.active-btn{color:#42a1e8}.ls-workflow-canevas{-ms-flex-align:center;-ms-flex-direction:column;-ms-flex-pack:start;-ms-grid-column:1;-webkit-box-align:center;-webkit-box-direction:normal;-webkit-box-orient:vertical;-webkit-box-pack:start;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;flex-direction:column;grid-column:1;height:100%;justify-content:flex-start}.ls-workflow-step{-webkit-box-shadow:0 0 .25rem rgba(0,0,0,.15);background-color:#fff;border:none;box-shadow:0 0 .25rem rgba(0,0,0,.15);min-height:6rem;width:var(--ls-workflow-step-width,20rem)}.ls-workflow-step .ls-step-top-line{-ms-flex-align:center;-ms-flex-direction:row;-ms-flex-pack:justify;-webkit-box-align:center;-webkit-box-direction:normal;-webkit-box-orient:horizontal;-webkit-box-pack:justify;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;flex-direction:row;font-weight:700;justify-content:space-between;padding:.5rem}.ls-workflow-step .ls-display-step-separator{border-bottom:1px solid #d3d3d3;width:100%}.ls-workflow-step .ls-step-validator-list{color:#5b5b5b;padding:.5rem .5rem .5rem 1.5rem}.ls-workflow-step.selected{-webkit-box-shadow:0 .5rem .25rem rgba(0,0,0,.3);box-shadow:0 .5rem .25rem rgba(0,0,0,.3)}.ls-workflow-step .step-icn{height:1.7rem;width:1.7rem}.ls-workflow-endpoint-content{margin:auto;text-align:center}.ls-workflow-endpoint-content .ls-step-bounds-txt{color:var(--primary);font-weight:700}.ls-workflow-endpoint-content .ls-workflow-endpoint-icn{color:var(--primary)}.ls-workflow-endpoint-content.not-active .ls-step-bounds-txt,.ls-workflow-endpoint-content.not-active .ls-workflow-endpoint-icn{color:#5b5b5b}.ls-workflow-endpoint-content .ls-step-validator-list{text-align:left}.ls-actual-validator{font-weight:700}.ls-actual-validator:before{color:var(--primary);content:\"\uF00C\";font-family:var(--ls-font-awesome-family,\"Font Awesome 5 Free\");font-size:1em;left:.5em;position:absolute}.ls-rejector{font-weight:700}.ls-rejector:before{color:var(--danger);content:\"\uF00D\";font-family:var(--ls-font-awesome-family,\"Font Awesome 5 Free\");font-size:1em;left:.5em;position:absolute}.wa-comment-icon{color:var(--primary);font-size:1em;margin-right:.5em}.ls-workflow-display .ls-workflow-step{margin:1rem auto;padding-left:0;padding-right:0}.ls-workflow-display .ls-workflow-step .ls-step-validator-list{padding:1rem 1rem 1rem .5rem}.ls-workflow-display .ls-workflow-step .ls-step-validator-list.ls-workflow-instance{padding-left:2rem}.ls-workflow-display .ls-workflow-step.ls-reduced-step{-ms-grid-columns:(1fr)[12];-ms-grid-rows:2em auto;-webkit-box-shadow:none;background-color:transparent;border:none;box-shadow:none;display:-ms-grid;display:grid;grid-row-gap:.5em;grid-template-columns:repeat(12,1fr);grid-template-rows:2em auto;min-height:unset;width:var(--ls-workflow-reduced-step-width,16rem)}.ls-workflow-display .ls-workflow-step.ls-reduced-step .ls-step-top-line{align-items:center;display:grid;grid-column:1/-1;grid-row:1;grid-template-columns:1fr 2fr 9fr;grid-template-rows:1fr;justify-content:center;padding:0}.ls-workflow-display .ls-workflow-step.ls-reduced-step .ls-step-top-line .step-number{display:none}.ls-workflow-display .ls-workflow-step.ls-reduced-step .ls-step-top-line .step-icn{-ms-grid-column:2;-ms-grid-row:1;font-size:24px;grid-column:2;grid-row:1;height:unset;margin:auto;width:unset}.ls-workflow-display .ls-workflow-step.ls-reduced-step .ls-step-top-line .step-name{-ms-grid-column:3;-ms-grid-row:1;grid-column:3;grid-row:1}.ls-workflow-display .ls-workflow-step.ls-reduced-step .ls-display-step-separator{-ms-grid-column:3;-ms-grid-row:2;border-bottom:0;border-left:1px solid #d3d3d3;grid-column:3;grid-row:2}.ls-workflow-display .ls-workflow-step.ls-reduced-step .ls-step-validator-list{-ms-grid-row:2;color:#d3d3d3;font-size:.8rem;font-style:italic;grid-column:4/-1;grid-row:2;padding:.5em}.ls-workflow-display .ls-workflow-step.ls-reduced-step.ls-validated-step .ls-step-top-line,.ls-workflow-display .ls-workflow-step.ls-reduced-step.ls-validated-step .ls-step-top-line .step-icn.test-icon-class,.ls-workflow-display .ls-workflow-step.ls-reduced-step.ls-validated-step .ls-step-top-line .step-icn.test-icon-class:before{color:#23a237}.ls-workflow-display .reduced-end-step .ls-workflow-endpoint-content .ls-step-bounds-txt{margin-left:1em}.ls-workflow-display .ls-workflow-endpoint-content{-ms-flex-direction:row;-webkit-box-direction:normal;-webkit-box-orient:horizontal;display:-webkit-box;display:-ms-flexbox;display:flex;flex-direction:row}.ls-workflow-display .ls-workflow-endpoint-content .ls-step-bounds-txt{margin-left:.5rem}.ls-workflow-display .ls-step-top-line{-ms-flex-pack:start;-webkit-box-pack:start;justify-content:flex-start;padding-left:.5rem}.ls-workflow-display .ls-step-top-line .step-name{-ms-flex:1;-webkit-box-flex:1;flex:1;margin-left:.7rem}.ls-workflow-display .ls-workflow-display-step-container{position:relative}.ls-workflow-display .ls-active-step:not(.ls-reduced-step) .ls-step-top-line{background-color:var(--primary);color:#fff;margin:0}.ls-workflow-display .ls-active-step:not(.ls-reduced-step) .ls-step-top-line .step-icn{color:#fff}.ls-workflow-display .ls-active-step:before{color:var(--ls-workflow-arrow-color,var(--primary));content:\"\uF061\";font-family:var(--ls-font-awesome-family,\"Font Awesome 5 Free\");font-size:2em;font-style:normal;font-variant:normal;font-weight:900;left:-1em;line-height:1;position:absolute;text-rendering:auto}.ls-workflow-display .ls-active-step.end-step:before{font-size:1.2em}.ls-workflow-end{position:relative}"]
                }] }
    ];
    /** @nocollapse */
    LsWorkflowInstanceViewerComponent.ctorParameters = function () { return []; };
    LsWorkflowInstanceViewerComponent.propDecorators = {
        passedStepTemplateRef: [{ type: core.ContentChild, args: ['passedStepContent',] }],
        pendingStepTemplateRef: [{ type: core.ContentChild, args: ['pendingStepContent',] }],
        workflowData: [{ type: core.Input, args: ['src',] }],
        activeStep: [{ type: core.Input }],
        getStepIconClassFct: [{ type: core.Input }],
        getStepTooltipFct: [{ type: core.Input }],
        getCircuitEndAdditionalClassesFct: [{ type: core.Input }],
        reducedMode: [{ type: core.Input }],
        options: [{ type: core.Input }],
        localizedMessages: [{ type: core.Input }]
    };
    if (false) {
        /** @type {?} */
        LsWorkflowInstanceViewerComponent.prototype.passedStepTemplateRef;
        /** @type {?} */
        LsWorkflowInstanceViewerComponent.prototype.pendingStepTemplateRef;
        /** @type {?} */
        LsWorkflowInstanceViewerComponent.prototype.workflowData;
        /** @type {?} */
        LsWorkflowInstanceViewerComponent.prototype.activeStep;
        /** @type {?} */
        LsWorkflowInstanceViewerComponent.prototype.messages;
        /** @type {?} */
        LsWorkflowInstanceViewerComponent.prototype.getStepIconClassFct;
        /** @type {?} */
        LsWorkflowInstanceViewerComponent.prototype.getStepTooltipFct;
        /** @type {?} */
        LsWorkflowInstanceViewerComponent.prototype.getCircuitEndAdditionalClassesFct;
        /** @type {?} */
        LsWorkflowInstanceViewerComponent.prototype.reducedMode;
        /** @type {?} */
        LsWorkflowInstanceViewerComponent.prototype.isOver;
        /** @type {?} */
        LsWorkflowInstanceViewerComponent.prototype.isRejected;
        /** @type {?} */
        LsWorkflowInstanceViewerComponent.prototype._options;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: workflows/ls-workflows.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var LsWorkflowsModule = /** @class */ (function () {
        // This is for Components with contents
        // public static angularComponents = {
        //   // components
        //   'ls-lib-back-top-top': BackToTopComponent,
        //   'ls-lib-max-length-textarea': MaxLengthTextAreaComponent,
        //   'ls-lib-color-picker': ColorPickerComponent,
        //   'ls-lib-timepicker': TimepickerComponent,
        //   'ls-lib-password': PasswordComponent,
        //
        // };
        function LsWorkflowsModule() {
        }
        return LsWorkflowsModule;
    }());
    LsWorkflowsModule.decorators = [
        { type: core.NgModule, args: [{
                    declarations: [
                        LsWorkflowEditorComponent,
                        LsWorkflowModelViewerComponent,
                        LsWorkflowInstanceViewerComponent,
                    ],
                    imports: [
                        platformBrowser.BrowserModule,
                        common.CommonModule,
                        animations.BrowserAnimationsModule,
                        forms.FormsModule,
                        ngBootstrap.NgbModule,
                        dragDrop.DragDropModule
                    ],
                    exports: [
                        LsWorkflowEditorComponent,
                        LsWorkflowModelViewerComponent,
                        LsWorkflowInstanceViewerComponent,
                    ]
                },] }
    ];
    /** @nocollapse */
    LsWorkflowsModule.ctorParameters = function () { return []; };

    /**
     * @fileoverview added by tsickle
     * Generated from: shared/model/workflows/step-instance.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var StepInstance = /** @class */ (function () {
        /**
         * @param {?=} stepInstData
         */
        function StepInstance(stepInstData) {
            this.validatedBy = [];
            this.id = stepInstData.id;
            this.name = stepInstData.name;
            this.validators = stepInstData.validators ? __spread(stepInstData.validators) : [];
            this.state = stepInstData.state;
            this.validatedBy = stepInstData.actedUponBy ? [stepInstData.actedUponBy] : [];
            this.comment = stepInstData.comment;
            if (stepInstData.actionId) {
                this.id = stepInstData.actionId;
            }
        }
        return StepInstance;
    }());
    if (false) {
        /** @type {?} */
        StepInstance.prototype.id;
        /** @type {?} */
        StepInstance.prototype.name;
        /** @type {?} */
        StepInstance.prototype.type;
        /** @type {?} */
        StepInstance.prototype.validators;
        /** @type {?} */
        StepInstance.prototype.state;
        /** @type {?} */
        StepInstance.prototype.validatedBy;
        /** @type {?} */
        StepInstance.prototype.comment;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: shared/model/workflows/workflow-actor.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var WorkflowActor = /** @class */ (function () {
        function WorkflowActor() {
        }
        return WorkflowActor;
    }());
    if (false) {
        /** @type {?} */
        WorkflowActor.prototype.id;
        /** @type {?} */
        WorkflowActor.prototype.lastname;
        /** @type {?} */
        WorkflowActor.prototype.firstname;
        /** @type {?} */
        WorkflowActor.prototype.name;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: shared/model/workflows/workflow-model-options.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var WorkflowModelOptions = /** @class */ (function () {
        function WorkflowModelOptions() {
        }
        return WorkflowModelOptions;
    }());
    if (false) {
        /** @type {?} */
        WorkflowModelOptions.prototype.startIconClass;
        /** @type {?} */
        WorkflowModelOptions.prototype.endIconClass;
        /** @type {?} */
        WorkflowModelOptions.prototype.editorGlobalLayoutClass;
        /** @type {?} */
        WorkflowModelOptions.prototype.additionalFinalEndpointClasses;
    }
    var WorkflowModelLocalizedMessages = /** @class */ (function () {
        function WorkflowModelLocalizedMessages() {
        }
        return WorkflowModelLocalizedMessages;
    }());
    if (false) {
        /** @type {?} */
        WorkflowModelLocalizedMessages.prototype.CREATE_STEP_TITLE;
        /** @type {?} */
        WorkflowModelLocalizedMessages.prototype.EDIT_STEP_TITLE;
        /** @type {?} */
        WorkflowModelLocalizedMessages.prototype.ADD_STEP_BTN_TXT;
        /** @type {?} */
        WorkflowModelLocalizedMessages.prototype.FIRST_STEP_TXT;
        /** @type {?} */
        WorkflowModelLocalizedMessages.prototype.LAST_STEP_TXT;
        /** @type {?} */
        WorkflowModelLocalizedMessages.prototype.popCreateTitle;
        /** @type {?} */
        WorkflowModelLocalizedMessages.prototype.popEditTitle;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: shared/model/public_workflow_models.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * Generated from: public_api.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * Generated from: libriciel-ls-composants-workflows.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.LsWorkflowEditorComponent = LsWorkflowEditorComponent;
    exports.LsWorkflowInstanceViewerComponent = LsWorkflowInstanceViewerComponent;
    exports.LsWorkflowModelViewerComponent = LsWorkflowModelViewerComponent;
    exports.LsWorkflowsModule = LsWorkflowsModule;
    exports.StepInstance = StepInstance;
    exports.StepModel = StepModel;
    exports.StepState = StepState;
    exports.WorkflowActor = WorkflowActor;
    exports.WorkflowInstance = WorkflowInstance;
    exports.WorkflowModel = WorkflowModel;
    exports.WorkflowModelLocalizedMessages = WorkflowModelLocalizedMessages;
    exports.WorkflowModelOptions = WorkflowModelOptions;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=libriciel-ls-composants-workflows.umd.js.map
