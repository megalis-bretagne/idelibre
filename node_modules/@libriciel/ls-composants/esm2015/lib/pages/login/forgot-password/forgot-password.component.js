/**
 * @fileoverview added by tsickle
 * Generated from: lib/pages/login/forgot-password/forgot-password.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { LoginPageModelClass } from '../login-model/LoginPageModel.class';
import { DomSanitizer } from '@angular/platform-browser';
export class ForgotPasswordComponent extends LoginPageModelClass {
    /**
     * @param {?} _DomSanitizationService
     */
    constructor(_DomSanitizationService) {
        super(_DomSanitizationService);
        this._DomSanitizationService = _DomSanitizationService;
        this.oneFieldForgot = false;
        this.usernameormailInputName = 'usernameormail';
        this.usernameInputName = 'username';
        this.emailInputName = 'email';
        this.backToLogin = new EventEmitter();
    }
    /**
     * @return {?}
     */
    backToLoginPage() {
        this.backToLogin.emit();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    preventFormSubmit(event) {
        super.preventFormSubmit(event);
    }
    /**
     * @return {?}
     */
    submitForm() {
        this.submit.emit({
            username: this.username,
            email: this.email,
            usernameormail: this.usernameormail
        });
    }
}
ForgotPasswordComponent.decorators = [
    { type: Component, args: [{
                selector: 'ls-forgot-password',
                template: "<ls-login-model [logo]=\"logo\" [visualConfiguration]=\"_visualConfiguration\">\n  <section id=\"forgot-page\">\n    <h1 class=\"page-title\">Mot de passe oubli\u00E9 ?</h1>\n    <form [action]=\"formAction\" id=\"ls-forgot-form\" method=\"post\" ngNoForm (submit)=\"preventFormSubmit($event)\">\n\n      <div *ngIf=\"!oneFieldForgot\" class=\"usernameormail\">\n        <label [attr.for]=\"usernameInputName\">\n          Identifiant\n        </label>\n        <input [attr.name]=\"usernameInputName\" [attr.id]=\"usernameInputName\" [(ngModel)]=\"username\" class=\"form-control\" placeholder=\"Mon identifiant\"\n               type=\"text\" required>\n      </div>\n      <div *ngIf=\"!oneFieldForgot\" class=\"usernameormail\">\n        <label [attr.for]=\"emailInputName\">\n          Adresse mail\n        </label>\n        <input [attr.id]=\"emailInputName\" [attr.name]=\"emailInputName\" [(ngModel)]=\"email\" class=\"form-control\" placeholder=\"adresse@mail.com\" type=\"text\" required>\n      </div>\n\n\n      <div *ngIf=\"oneFieldForgot\" class=\"usernameormail\">\n        <label [attr.for]=\"usernameormailInputName\">\n          Saisissez votre nom d'utilisateur ou votre adresse mail\n        </label>\n        <input [attr.name]=\"usernameormailInputName\"  [attr.id]=\"usernameormailInputName\" [(ngModel)]=\"usernameormail\" class=\"form-control\"\n               placeholder=\"Nom d'utilisateur ou adresse mail\"\n               type=\"text\" required>\n      </div>\n\n      <div class=\"alert alert-info\">\n        <div class=\"fa fa-lg fa-info-circle\"></div>\n        <div>\n          Si vos informations sont correctes, un e-mail vous sera envoy\u00E9.<br>\n          Vous pourrez ainsi cr\u00E9er un nouveau mot de passe.\n        </div>\n      </div>\n\n      <ng-content></ng-content>\n\n      <div class=\"float-left\">\n        <span (click)=\"backToLoginPage()\" class=\"btn btn-link forgot-passwd-lnk\">\n          <i class=\"fa fa-angle-double-left\"></i>\n          Revenir \u00E0 l'\u00E9cran de connexion\n        </span>\n      </div>\n\n\n      <div class=\"float-right\">\n        <button class=\"btn btn-primary\" (click)=\"submitForm()\" type=\"submit\" form=\"ls-forgot-form\" [class.disabled]=\"submitted\">\n          <i *ngIf=\"!submitted\" class=\"fa fa-paper-plane fa-fw\"></i>\n          <i *ngIf=\"submitted\" class=\"fa fa-spinner fa-spin fa-fw\"></i>\n          Soumettre\n        </button>\n      </div>\n    </form>\n  </section>\n</ls-login-model>\n",
                styles: [".alert{-ms-flex-align:center;-webkit-box-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex}.alert .fa{width:2rem}#ls-forgot-form>*{margin-bottom:1rem}span.btn{cursor:pointer}.page-title{font-size:1rem;font-weight:400;padding-bottom:1.5rem;padding-top:3rem;text-align:center}"]
            }] }
];
/** @nocollapse */
ForgotPasswordComponent.ctorParameters = () => [
    { type: DomSanitizer }
];
ForgotPasswordComponent.propDecorators = {
    oneFieldForgot: [{ type: Input }],
    usernameormailInputName: [{ type: Input }],
    usernameInputName: [{ type: Input }],
    emailInputName: [{ type: Input }],
    backToLogin: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    ForgotPasswordComponent.prototype.username;
    /** @type {?} */
    ForgotPasswordComponent.prototype.email;
    /** @type {?} */
    ForgotPasswordComponent.prototype.usernameormail;
    /** @type {?} */
    ForgotPasswordComponent.prototype.oneFieldForgot;
    /** @type {?} */
    ForgotPasswordComponent.prototype.usernameormailInputName;
    /** @type {?} */
    ForgotPasswordComponent.prototype.usernameInputName;
    /** @type {?} */
    ForgotPasswordComponent.prototype.emailInputName;
    /** @type {?} */
    ForgotPasswordComponent.prototype.backToLogin;
    /** @type {?} */
    ForgotPasswordComponent.prototype._DomSanitizationService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9yZ290LXBhc3N3b3JkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIvYnVpbGRzL291dGlscy9jaGFydGVncmFwaGlxdWUvbGlicmFpcmllLWFuZ3VsYXIvbGliL3NyYy8iLCJzb3VyY2VzIjpbImxpYi9wYWdlcy9sb2dpbi9mb3Jnb3QtcGFzc3dvcmQvZm9yZ290LXBhc3N3b3JkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDckUsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0scUNBQXFDLENBQUM7QUFDeEUsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBT3ZELE1BQU0sT0FBTyx1QkFBd0IsU0FBUSxtQkFBbUI7Ozs7SUFjOUQsWUFBbUIsdUJBQXFDO1FBQ3RELEtBQUssQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO1FBRGQsNEJBQXVCLEdBQXZCLHVCQUF1QixDQUFjO1FBUi9DLG1CQUFjLEdBQUcsS0FBSyxDQUFDO1FBQ3ZCLDRCQUF1QixHQUFHLGdCQUFnQixDQUFDO1FBQzNDLHNCQUFpQixHQUFHLFVBQVUsQ0FBQztRQUMvQixtQkFBYyxHQUFHLE9BQU8sQ0FBQztRQUdsQyxnQkFBVyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0lBSXBELENBQUM7Ozs7SUFFRCxlQUFlO1FBQ2IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUMxQixDQUFDOzs7OztJQUVELGlCQUFpQixDQUFDLEtBQUs7UUFDckIsS0FBSyxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2pDLENBQUM7Ozs7SUFFRCxVQUFVO1FBQ1IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUM7WUFDZixRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVE7WUFDdkIsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLO1lBQ2pCLGNBQWMsRUFBRSxJQUFJLENBQUMsY0FBYztTQUNwQyxDQUFDLENBQUM7SUFDTCxDQUFDOzs7WUFyQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxvQkFBb0I7Z0JBQzlCLHc5RUFBK0M7O2FBRWhEOzs7O1lBTk8sWUFBWTs7OzZCQWFqQixLQUFLO3NDQUNMLEtBQUs7Z0NBQ0wsS0FBSzs2QkFDTCxLQUFLOzBCQUVMLE1BQU07Ozs7SUFUUCwyQ0FBaUI7O0lBQ2pCLHdDQUFjOztJQUNkLGlEQUF1Qjs7SUFFdkIsaURBQWdDOztJQUNoQywwREFBb0Q7O0lBQ3BELG9EQUF3Qzs7SUFDeEMsaURBQWtDOztJQUVsQyw4Q0FDb0Q7O0lBRXhDLDBEQUE0QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtMb2dpblBhZ2VNb2RlbENsYXNzfSBmcm9tICcuLi9sb2dpbi1tb2RlbC9Mb2dpblBhZ2VNb2RlbC5jbGFzcyc7XG5pbXBvcnQge0RvbVNhbml0aXplcn0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2xzLWZvcmdvdC1wYXNzd29yZCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9mb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9mb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBGb3Jnb3RQYXNzd29yZENvbXBvbmVudCBleHRlbmRzIExvZ2luUGFnZU1vZGVsQ2xhc3Mge1xuXG4gIHVzZXJuYW1lOiBzdHJpbmc7XG4gIGVtYWlsOiBzdHJpbmc7XG4gIHVzZXJuYW1lb3JtYWlsOiBzdHJpbmc7XG5cbiAgQElucHV0KCkgb25lRmllbGRGb3Jnb3QgPSBmYWxzZTtcbiAgQElucHV0KCkgdXNlcm5hbWVvcm1haWxJbnB1dE5hbWUgPSAndXNlcm5hbWVvcm1haWwnO1xuICBASW5wdXQoKSB1c2VybmFtZUlucHV0TmFtZSA9ICd1c2VybmFtZSc7XG4gIEBJbnB1dCgpIGVtYWlsSW5wdXROYW1lID0gJ2VtYWlsJztcblxuICBAT3V0cHV0KClcbiAgYmFja1RvTG9naW46IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBfRG9tU2FuaXRpemF0aW9uU2VydmljZTogRG9tU2FuaXRpemVyKSB7XG4gICAgc3VwZXIoX0RvbVNhbml0aXphdGlvblNlcnZpY2UpO1xuICB9XG5cbiAgYmFja1RvTG9naW5QYWdlKCkge1xuICAgIHRoaXMuYmFja1RvTG9naW4uZW1pdCgpO1xuICB9XG5cbiAgcHJldmVudEZvcm1TdWJtaXQoZXZlbnQpIHtcbiAgICBzdXBlci5wcmV2ZW50Rm9ybVN1Ym1pdChldmVudCk7XG4gIH1cblxuICBzdWJtaXRGb3JtKCkge1xuICAgIHRoaXMuc3VibWl0LmVtaXQoe1xuICAgICAgdXNlcm5hbWU6IHRoaXMudXNlcm5hbWUsXG4gICAgICBlbWFpbDogdGhpcy5lbWFpbCxcbiAgICAgIHVzZXJuYW1lb3JtYWlsOiB0aGlzLnVzZXJuYW1lb3JtYWlsXG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==