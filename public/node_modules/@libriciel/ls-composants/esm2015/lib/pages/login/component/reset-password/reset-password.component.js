/**
 * @fileoverview added by tsickle
 * Generated from: lib/pages/login/component/reset-password/reset-password.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { LoginPageModelClass } from '../login-model/LoginPageModel.class';
import { DomSanitizer } from '@angular/platform-browser';
export class ResetPasswordComponent extends LoginPageModelClass {
    /**
     * @param {?} _DomSanitizationService
     */
    constructor(_DomSanitizationService) {
        super(_DomSanitizationService);
        this._DomSanitizationService = _DomSanitizationService;
        this.samePassword = true;
        this.passwordInputName = 'password';
        this.passwordConfirmInputName = 'passwordconfirm';
    }
    /**
     * @param {?} event
     * @return {?}
     */
    preventFormSubmit(event) {
        super.preventFormSubmit(event);
    }
    /**
     * @return {?}
     */
    submitForm() {
        if (this.newpassword === this.newpasswordconfirm) {
            this.submit.emit({ password: this.newpassword });
        }
        else {
            this.samePassword = false;
        }
    }
}
ResetPasswordComponent.decorators = [
    { type: Component, args: [{
                selector: 'ls-reset-password',
                template: "<ls-login-model [visualConfiguration]=\"_visualConfiguration\" [logo]=\"logo\">\n  <section id=\"reset-page\">\n    <h1 class=\"page-title\">Veuillez saisir un nouveau mot de passe</h1>\n    <form ngNoForm action=\"\" id=\"reset-form\" method=\"post\" [action]=\"formAction\" (submit)=\"preventFormSubmit($event)\">\n\n      <div class=\"alert alert-danger\" *ngIf=\"!samePassword\">\n        <i class=\"fa fa-exclamation-triangle\"></i>\n        Les deux mots de passe ne sont pas identiques\n      </div>\n\n      <div>\n        <label [attr.for]=\"passwordInputName\">\n          Nouveau mot de passe\n        </label>\n        <div>\n          <ls-password [showIcon]=\"false\" [(ngModel)]=\"newpassword\" [name]=\"passwordInputName\" [attr.id]=\"passwordInputName\" required></ls-password>\n        </div>\n      </div>\n\n      <div>\n        <label [attr.for]=\"passwordConfirmInputName\">\n          Confirmation du nouveau mot de passe\n        </label>\n        <div>\n          <ls-password [showIcon]=\"false\" [attr.id]=\"passwordConfirmInputName\" [(ngModel)]=\"newpasswordconfirm\" [name]=\"passwordConfirmInputName\" required></ls-password>\n        </div>\n      </div>\n\n      <ng-content></ng-content>\n\n      <div class=\"float-right\">\n        <ls-button-save type=\"submit\" (click)=\"submitForm()\" [processing]=\"submitted\"></ls-button-save>\n      </div>\n    </form>\n  </section>\n</ls-login-model>\n",
                styles: ["span.btn{cursor:pointer}#reset-form .alert-soft-warning,.page-title{text-align:center}.page-title{font-size:1rem;font-weight:400;padding-bottom:1.5rem;padding-top:3rem}.login-input-row{-ms-flex-align:center;-webkit-box-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex}.login-input-row>label{margin-right:1rem;width:33%}.login-input-row>div{display:inline-block;width:67%}.login-input-row>.form-check{padding-left:calc(33% + 35px);width:100%}.floating-message{left:10%;position:absolute;right:10%;top:5%}.floating-message div{-ms-flex-align:center;-ms-flex-pack:center;-webkit-box-align:center;-webkit-box-pack:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;justify-content:center;min-height:4rem}.floating-message div i{padding-right:20px}.ls-login-footer{height:40px;width:100%}"]
            }] }
];
/** @nocollapse */
ResetPasswordComponent.ctorParameters = () => [
    { type: DomSanitizer }
];
ResetPasswordComponent.propDecorators = {
    passwordInputName: [{ type: Input }],
    passwordConfirmInputName: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    ResetPasswordComponent.prototype.samePassword;
    /** @type {?} */
    ResetPasswordComponent.prototype.newpassword;
    /** @type {?} */
    ResetPasswordComponent.prototype.newpasswordconfirm;
    /** @type {?} */
    ResetPasswordComponent.prototype.passwordInputName;
    /** @type {?} */
    ResetPasswordComponent.prototype.passwordConfirmInputName;
    /** @type {?} */
    ResetPasswordComponent.prototype._DomSanitizationService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzZXQtcGFzc3dvcmQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Ii9idWlsZHMvb3V0aWxzL2NoYXJ0ZWdyYXBoaXF1ZS9saWJyYWlyaWUtYW5ndWxhci9saWIvc3JjLyIsInNvdXJjZXMiOlsibGliL3BhZ2VzL2xvZ2luL2NvbXBvbmVudC9yZXNldC1wYXNzd29yZC9yZXNldC1wYXNzd29yZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFnQixLQUFLLEVBQVMsTUFBTSxlQUFlLENBQUM7QUFDckUsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0scUNBQXFDLENBQUM7QUFDeEUsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBT3ZELE1BQU0sT0FBTyxzQkFBdUIsU0FBUSxtQkFBbUI7Ozs7SUFTN0QsWUFBbUIsdUJBQXFDO1FBQ3RELEtBQUssQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO1FBRGQsNEJBQXVCLEdBQXZCLHVCQUF1QixDQUFjO1FBUHhELGlCQUFZLEdBQUcsSUFBSSxDQUFDO1FBSVgsc0JBQWlCLEdBQUcsVUFBVSxDQUFDO1FBQy9CLDZCQUF3QixHQUFHLGlCQUFpQixDQUFDO0lBSXRELENBQUM7Ozs7O0lBRUQsaUJBQWlCLENBQUMsS0FBSztRQUNyQixLQUFLLENBQUMsaUJBQWlCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDakMsQ0FBQzs7OztJQUVELFVBQVU7UUFDUixJQUFJLElBQUksQ0FBQyxXQUFXLEtBQUssSUFBSSxDQUFDLGtCQUFrQixFQUFFO1lBQ2hELElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUMsQ0FBQyxDQUFDO1NBQ2hEO2FBQU07WUFDTCxJQUFJLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztTQUMzQjtJQUNILENBQUM7OztZQTVCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLG1CQUFtQjtnQkFDN0IsbTZDQUE4Qzs7YUFFL0M7Ozs7WUFOTyxZQUFZOzs7Z0NBYWpCLEtBQUs7dUNBQ0wsS0FBSzs7OztJQUxOLDhDQUFvQjs7SUFDcEIsNkNBQW9COztJQUNwQixvREFBMkI7O0lBRTNCLG1EQUF3Qzs7SUFDeEMsMERBQXNEOztJQUUxQyx5REFBNEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7TG9naW5QYWdlTW9kZWxDbGFzc30gZnJvbSAnLi4vbG9naW4tbW9kZWwvTG9naW5QYWdlTW9kZWwuY2xhc3MnO1xuaW1wb3J0IHtEb21TYW5pdGl6ZXJ9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdscy1yZXNldC1wYXNzd29yZCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9yZXNldC1wYXNzd29yZC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3Jlc2V0LXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgUmVzZXRQYXNzd29yZENvbXBvbmVudCBleHRlbmRzIExvZ2luUGFnZU1vZGVsQ2xhc3Mge1xuXG4gIHNhbWVQYXNzd29yZCA9IHRydWU7XG4gIG5ld3Bhc3N3b3JkOiBzdHJpbmc7XG4gIG5ld3Bhc3N3b3JkY29uZmlybTogc3RyaW5nO1xuXG4gIEBJbnB1dCgpIHBhc3N3b3JkSW5wdXROYW1lID0gJ3Bhc3N3b3JkJztcbiAgQElucHV0KCkgcGFzc3dvcmRDb25maXJtSW5wdXROYW1lID0gJ3Bhc3N3b3JkY29uZmlybSc7XG5cbiAgY29uc3RydWN0b3IocHVibGljIF9Eb21TYW5pdGl6YXRpb25TZXJ2aWNlOiBEb21TYW5pdGl6ZXIpIHtcbiAgICBzdXBlcihfRG9tU2FuaXRpemF0aW9uU2VydmljZSk7XG4gIH1cblxuICBwcmV2ZW50Rm9ybVN1Ym1pdChldmVudCkge1xuICAgIHN1cGVyLnByZXZlbnRGb3JtU3VibWl0KGV2ZW50KTtcbiAgfVxuXG4gIHN1Ym1pdEZvcm0oKSB7XG4gICAgaWYgKHRoaXMubmV3cGFzc3dvcmQgPT09IHRoaXMubmV3cGFzc3dvcmRjb25maXJtKSB7XG4gICAgICB0aGlzLnN1Ym1pdC5lbWl0KHtwYXNzd29yZDogdGhpcy5uZXdwYXNzd29yZH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnNhbWVQYXNzd29yZCA9IGZhbHNlO1xuICAgIH1cbiAgfVxufVxuIl19