/**
 * @fileoverview added by tsickle
 * Generated from: lib/pages/login/component/login-form/login-form.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { LoginPageModelClass } from '../login-model/LoginPageModel.class';
import { DomSanitizer } from '@angular/platform-browser';
import { Weight } from '../../../../ui-concepts/weight';
import { LoginMessages } from '../../i18n/login-messages';
import { CommonIcons } from '../../../../icons/common-icons';
export class LoginFormComponent extends LoginPageModelClass {
    /**
     * @param {?} _DomSanitizationService
     */
    constructor(_DomSanitizationService) {
        super(_DomSanitizationService);
        this._DomSanitizationService = _DomSanitizationService;
        this.weight = Weight;
        this.loginMessages = LoginMessages;
        this.commonIcons = CommonIcons;
        this.showRememberMe = false;
        this.usernameInputName = 'username';
        this.passwordInputName = 'password';
        this.rememberMeInputName = 'rememberme';
        this.passwordReset = false;
        this.successMessage = '';
        this.forgotPassword = new EventEmitter();
    }
    /**
     * @return {?}
     */
    askForResetPassword() {
        this.forgotPassword.emit();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    preventFormSubmit(event) {
        super.preventFormSubmit(event);
    }
    /**
     * @return {?}
     */
    submitForm() {
        this.submit.emit({
            username: this.username,
            password: this.password,
            rememberMe: this.rememberMe
        });
    }
}
LoginFormComponent.decorators = [
    { type: Component, args: [{
                selector: 'ls-login-form',
                template: "<ls-login-model [logo]=\"logo\" [visualConfiguration]=\"_visualConfiguration\">\n  <section>\n    <h1 class=\"page-title\">Veuillez saisir vos identifiants de connexion</h1>\n    <form [action]=\"formAction\" method=\"post\" id=\"ls-login-form\" ngNoForm (submit)=\"preventFormSubmit($event)\">\n\n      <div *ngIf=\"showError\" class=\"alert alert-danger\">\n        <i class=\"fa fa-exclamation-triangle\"></i>\n        Identifiant ou mot de passe erron\u00E9\n      </div>\n\n      <div *ngIf=\"successMessage\" class=\"alert alert-success\">\n        <i class=\"fa fa-check\"></i>\n        {{successMessage}}\n      </div>\n\n      <div *ngIf=\"passwordReset\" class=\"alert alert-success\">\n        <i class=\"fa fa-check\"></i>\n        Vous pouvez desormais vous connecter avec votre identifiant et votre nouveau mot de passe\n      </div>\n\n      <div class=\"login-input-row\">\n        <label [attr.for]=\"usernameInputName\">\n          Identifiant\n        </label>\n        <div class=\"form-group input-group-front-icon\">\n                <span>\n                  <i class=\"fa fa-user\"></i>\n                </span>\n          <input [(ngModel)]=\"username\" [attr.name]=\"usernameInputName\" [attr.id]=\"usernameInputName\"\n                 class=\"form-control\" required>\n        </div>\n      </div>\n\n      <div class=\"login-input-row\">\n        <label [attr.for]=\"passwordInputName\">\n          Mot de passe\n        </label>\n        <div>\n          <ls-password [(ngModel)]=\"password\" [name]=\"passwordInputName\" [attr.id]=\"passwordInputName\"\n                       required></ls-password>\n        </div>\n      </div>\n\n      <div *ngIf=\"showRememberMe\" class=\"login-input-row\">\n        <div class=\"form-check\">\n          <input [(ngModel)]=\"rememberMe\" [attr.name]=\"rememberMeInputName\" [attr.id]=\"rememberMeInputName\"\n                 class=\"form-check-input\"\n                 type=\"checkbox\">\n          <label class=\"form-check-label\" [attr.for]=\"rememberMeInputName\">Se souvenir de moi</label>\n        </div>\n      </div>\n\n      <ng-content></ng-content>\n\n      <div class=\"float-right\">\n        <ls-button (click)=\"askForResetPassword()\" [class]=\"'forgot-passwd-lnk'\" [title]=\"loginMessages.LOST_PASSWORD\"\n                   [weight]=\"weight.TERTIARY\"></ls-button>\n\n        <ls-button (click)=\"submitForm()\" [icon]=\"commonIcons.LOGIN\" [processing]=\"submitted\"\n                   [title]=\"loginMessages.LOGIN\"\n                   form=\"ls-login-form\"\n                   type=\"submit\">\n        </ls-button>\n      </div>\n    </form>\n  </section>\n</ls-login-model>\n",
                styles: [".page-title{font-size:1rem;font-weight:400;padding-bottom:1.5rem;padding-top:3rem}.alert,.page-title{text-align:center}.forgot-passwd-lnk{margin-right:1rem}.float-right{padding-top:1rem}.login-input-row{-ms-flex-align:center;-webkit-box-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex}.login-input-row>label{margin-right:1rem;width:33%}.login-input-row>div{display:inline-block;width:67%}.login-input-row>.form-check{padding-left:calc(33% + 35px);width:100%}"]
            }] }
];
/** @nocollapse */
LoginFormComponent.ctorParameters = () => [
    { type: DomSanitizer }
];
LoginFormComponent.propDecorators = {
    showRememberMe: [{ type: Input }],
    usernameInputName: [{ type: Input }],
    passwordInputName: [{ type: Input }],
    rememberMeInputName: [{ type: Input }],
    passwordReset: [{ type: Input }],
    successMessage: [{ type: Input }],
    forgotPassword: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    LoginFormComponent.prototype.username;
    /** @type {?} */
    LoginFormComponent.prototype.password;
    /** @type {?} */
    LoginFormComponent.prototype.rememberMe;
    /** @type {?} */
    LoginFormComponent.prototype.weight;
    /** @type {?} */
    LoginFormComponent.prototype.loginMessages;
    /** @type {?} */
    LoginFormComponent.prototype.commonIcons;
    /** @type {?} */
    LoginFormComponent.prototype.showRememberMe;
    /** @type {?} */
    LoginFormComponent.prototype.usernameInputName;
    /** @type {?} */
    LoginFormComponent.prototype.passwordInputName;
    /** @type {?} */
    LoginFormComponent.prototype.rememberMeInputName;
    /** @type {?} */
    LoginFormComponent.prototype.passwordReset;
    /** @type {?} */
    LoginFormComponent.prototype.successMessage;
    /** @type {?} */
    LoginFormComponent.prototype.forgotPassword;
    /** @type {?} */
    LoginFormComponent.prototype._DomSanitizationService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4tZm9ybS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiL2J1aWxkcy9vdXRpbHMvY2hhcnRlZ3JhcGhpcXVlL2xpYnJhaXJpZS1hbmd1bGFyL2xpYi9zcmMvIiwic291cmNlcyI6WyJsaWIvcGFnZXMvbG9naW4vY29tcG9uZW50L2xvZ2luLWZvcm0vbG9naW4tZm9ybS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDeEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzFELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQU83RCxNQUFNLE9BQU8sa0JBQW1CLFNBQVEsbUJBQW1COzs7O0lBbUJ6RCxZQUFtQix1QkFBcUM7UUFDdEQsS0FBSyxDQUFDLHVCQUF1QixDQUFDLENBQUM7UUFEZCw0QkFBdUIsR0FBdkIsdUJBQXVCLENBQWM7UUFieEQsV0FBTSxHQUFHLE1BQU0sQ0FBQztRQUNoQixrQkFBYSxHQUFHLGFBQWEsQ0FBQztRQUM5QixnQkFBVyxHQUFHLFdBQVcsQ0FBQztRQUVqQixtQkFBYyxHQUFHLEtBQUssQ0FBQztRQUN2QixzQkFBaUIsR0FBRyxVQUFVLENBQUM7UUFDL0Isc0JBQWlCLEdBQUcsVUFBVSxDQUFDO1FBQy9CLHdCQUFtQixHQUFHLFlBQVksQ0FBQztRQUNuQyxrQkFBYSxHQUFHLEtBQUssQ0FBQztRQUN0QixtQkFBYyxHQUFHLEVBQUUsQ0FBQztRQUU3QixtQkFBYyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0lBSXZELENBQUM7Ozs7SUFFRCxtQkFBbUI7UUFDakIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUM3QixDQUFDOzs7OztJQUVELGlCQUFpQixDQUFDLEtBQUs7UUFDckIsS0FBSyxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2pDLENBQUM7Ozs7SUFFRCxVQUFVO1FBQ1IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUM7WUFDZixRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVE7WUFDdkIsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO1lBQ3ZCLFVBQVUsRUFBRSxJQUFJLENBQUMsVUFBVTtTQUM1QixDQUFDLENBQUM7SUFDTCxDQUFDOzs7WUExQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxlQUFlO2dCQUN6Qixnb0ZBQTBDOzthQUUzQzs7OztZQVRRLFlBQVk7Ozs2QkFvQmxCLEtBQUs7Z0NBQ0wsS0FBSztnQ0FDTCxLQUFLO2tDQUNMLEtBQUs7NEJBQ0wsS0FBSzs2QkFDTCxLQUFLOzZCQUNMLE1BQU07Ozs7SUFkUCxzQ0FBaUI7O0lBQ2pCLHNDQUFpQjs7SUFDakIsd0NBQW9COztJQUVwQixvQ0FBZ0I7O0lBQ2hCLDJDQUE4Qjs7SUFDOUIseUNBQTBCOztJQUUxQiw0Q0FBZ0M7O0lBQ2hDLCtDQUF3Qzs7SUFDeEMsK0NBQXdDOztJQUN4QyxpREFBNEM7O0lBQzVDLDJDQUErQjs7SUFDL0IsNENBQTZCOztJQUM3Qiw0Q0FDdUQ7O0lBRTNDLHFEQUE0QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMb2dpblBhZ2VNb2RlbENsYXNzIH0gZnJvbSAnLi4vbG9naW4tbW9kZWwvTG9naW5QYWdlTW9kZWwuY2xhc3MnO1xuaW1wb3J0IHsgRG9tU2FuaXRpemVyIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5pbXBvcnQgeyBXZWlnaHQgfSBmcm9tICcuLi8uLi8uLi8uLi91aS1jb25jZXB0cy93ZWlnaHQnO1xuaW1wb3J0IHsgTG9naW5NZXNzYWdlcyB9IGZyb20gJy4uLy4uL2kxOG4vbG9naW4tbWVzc2FnZXMnO1xuaW1wb3J0IHsgQ29tbW9uSWNvbnMgfSBmcm9tICcuLi8uLi8uLi8uLi9pY29ucy9jb21tb24taWNvbnMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdscy1sb2dpbi1mb3JtJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xvZ2luLWZvcm0uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9sb2dpbi1mb3JtLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgTG9naW5Gb3JtQ29tcG9uZW50IGV4dGVuZHMgTG9naW5QYWdlTW9kZWxDbGFzcyB7XG5cbiAgdXNlcm5hbWU6IHN0cmluZztcbiAgcGFzc3dvcmQ6IHN0cmluZztcbiAgcmVtZW1iZXJNZTogYm9vbGVhbjtcblxuICB3ZWlnaHQgPSBXZWlnaHQ7XG4gIGxvZ2luTWVzc2FnZXMgPSBMb2dpbk1lc3NhZ2VzO1xuICBjb21tb25JY29ucyA9IENvbW1vbkljb25zO1xuXG4gIEBJbnB1dCgpIHNob3dSZW1lbWJlck1lID0gZmFsc2U7XG4gIEBJbnB1dCgpIHVzZXJuYW1lSW5wdXROYW1lID0gJ3VzZXJuYW1lJztcbiAgQElucHV0KCkgcGFzc3dvcmRJbnB1dE5hbWUgPSAncGFzc3dvcmQnO1xuICBASW5wdXQoKSByZW1lbWJlck1lSW5wdXROYW1lID0gJ3JlbWVtYmVybWUnO1xuICBASW5wdXQoKSBwYXNzd29yZFJlc2V0ID0gZmFsc2U7XG4gIEBJbnB1dCgpIHN1Y2Nlc3NNZXNzYWdlID0gJyc7XG4gIEBPdXRwdXQoKVxuICBmb3Jnb3RQYXNzd29yZDogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgY29uc3RydWN0b3IocHVibGljIF9Eb21TYW5pdGl6YXRpb25TZXJ2aWNlOiBEb21TYW5pdGl6ZXIpIHtcbiAgICBzdXBlcihfRG9tU2FuaXRpemF0aW9uU2VydmljZSk7XG4gIH1cblxuICBhc2tGb3JSZXNldFBhc3N3b3JkKCkge1xuICAgIHRoaXMuZm9yZ290UGFzc3dvcmQuZW1pdCgpO1xuICB9XG5cbiAgcHJldmVudEZvcm1TdWJtaXQoZXZlbnQpIHtcbiAgICBzdXBlci5wcmV2ZW50Rm9ybVN1Ym1pdChldmVudCk7XG4gIH1cblxuICBzdWJtaXRGb3JtKCkge1xuICAgIHRoaXMuc3VibWl0LmVtaXQoe1xuICAgICAgdXNlcm5hbWU6IHRoaXMudXNlcm5hbWUsXG4gICAgICBwYXNzd29yZDogdGhpcy5wYXNzd29yZCxcbiAgICAgIHJlbWVtYmVyTWU6IHRoaXMucmVtZW1iZXJNZVxuICAgIH0pO1xuICB9XG59XG4iXX0=