/**
 * @fileoverview added by tsickle
 * Generated from: lib/component/max-length-textarea/max-length-textarea.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, forwardRef, Input, Renderer2, ViewChild } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { MaxLengthTextAreaMessages } from './MaxLengthTextAreaMessages';
export class MaxLengthTextAreaComponent {
    /**
     * @param {?} element
     * @param {?} renderer2
     */
    constructor(element, renderer2) {
        this.element = element;
        this.renderer2 = renderer2;
        this.maxLengthTextAreaMessages = MaxLengthTextAreaMessages;
        this.onChange = (/**
         * @return {?}
         */
        () => {
            // tslint:disable-next-line:semicolon
        });
        this.onTouched = (/**
         * @return {?}
         */
        () => {
            // tslint:disable-next-line:semicolon
        });
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        /** @type {?} */
        const id = this.element.nativeElement.getAttribute('id');
        this.renderer2.removeAttribute(this.element.nativeElement, 'id');
        this.renderer2.setAttribute(this.input.nativeElement, 'id', id);
    }
    /**
     * @return {?}
     */
    get value() {
        return this._value;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set value(value) {
        this._value = value;
        this.onChange(value);
        this.onTouched();
    }
    /**
     * @return {?}
     */
    onChangeSelection() {
        this.onChange(this._value);
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnChange(fn) {
        this.onChange = fn;
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    writeValue(value) {
        if (value) {
            this.value = value;
        }
    }
}
MaxLengthTextAreaComponent.decorators = [
    { type: Component, args: [{
                selector: 'ls-max-length-textarea',
                template: "<!--suppress HtmlFormInputWithoutLabel -->\n<textarea class=\"form-control\" #input\n  (ngModelChange)=\"onChangeSelection()\"\n  [(ngModel)]=\"value\" [required]=\"required\"\n  maxlength=\"{{maxlength}}\" [attr.name]=\"name\"></textarea>\n<span [innerText]=\"maxLengthTextAreaMessages.max_left(!value ? maxlength : maxlength - value.length)\"\n      class=\"information\"></span>\n\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => MaxLengthTextAreaComponent)),
                        multi: true
                    }
                ],
                styles: [":host{position:relative;display:block}:host textarea{min-height:3.5rem}:host span.information{color:var(--ls-grey-500);height:1.25rem;border-radius:0 0 4px 4px;font-size:.8rem;left:1px;right:1px;bottom:-20px;padding-right:6px;text-align:right;position:absolute;pointer-events:none}"]
            }] }
];
/** @nocollapse */
MaxLengthTextAreaComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
MaxLengthTextAreaComponent.propDecorators = {
    maxlength: [{ type: Input }],
    minlength: [{ type: Input }],
    required: [{ type: Input }],
    _value: [{ type: Input }],
    name: [{ type: Input }],
    input: [{ type: ViewChild, args: ['input',] }]
};
if (false) {
    /** @type {?} */
    MaxLengthTextAreaComponent.prototype.maxlength;
    /** @type {?} */
    MaxLengthTextAreaComponent.prototype.minlength;
    /** @type {?} */
    MaxLengthTextAreaComponent.prototype.required;
    /** @type {?} */
    MaxLengthTextAreaComponent.prototype.maxLengthTextAreaMessages;
    /** @type {?} */
    MaxLengthTextAreaComponent.prototype._value;
    /** @type {?} */
    MaxLengthTextAreaComponent.prototype.name;
    /** @type {?} */
    MaxLengthTextAreaComponent.prototype.input;
    /** @type {?} */
    MaxLengthTextAreaComponent.prototype.onChange;
    /** @type {?} */
    MaxLengthTextAreaComponent.prototype.onTouched;
    /**
     * @type {?}
     * @private
     */
    MaxLengthTextAreaComponent.prototype.element;
    /**
     * @type {?}
     * @private
     */
    MaxLengthTextAreaComponent.prototype.renderer2;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF4LWxlbmd0aC10ZXh0YXJlYS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbGlicmljaWVsL2xzLWNvbXBvc2FudHMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50L21heC1sZW5ndGgtdGV4dGFyZWEvbWF4LWxlbmd0aC10ZXh0YXJlYS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQWdCLFNBQVMsRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzVHLE9BQU8sRUFBdUIsaUJBQWlCLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUN2RSxPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQztBQWN0RSxNQUFNLE9BQU8sMEJBQTBCOzs7OztJQVlyQyxZQUFvQixPQUFtQixFQUFVLFNBQW9CO1FBQWpELFlBQU8sR0FBUCxPQUFPLENBQVk7UUFBVSxjQUFTLEdBQVQsU0FBUyxDQUFXO1FBUHJFLDhCQUF5QixHQUFHLHlCQUF5QixDQUFDO1FBeUJ0RCxhQUFROzs7UUFBUSxHQUFHLEVBQUU7WUFDbkIscUNBQXFDO1FBQ3ZDLENBQUMsRUFBQztRQUVGLGNBQVM7OztRQUFRLEdBQUcsRUFBRTtZQUNwQixxQ0FBcUM7UUFDdkMsQ0FBQyxFQUFDO0lBeEJzRSxDQUFDOzs7O0lBRXpFLGVBQWU7O2NBQ1AsRUFBRSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUM7UUFDeEQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDakUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ2xFLENBQUM7Ozs7SUFFRCxJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQzs7Ozs7SUFFRCxJQUFJLEtBQUssQ0FBQyxLQUFLO1FBQ2IsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNyQixJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDbkIsQ0FBQzs7OztJQVVELGlCQUFpQjtRQUNmLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzdCLENBQUM7Ozs7O0lBRUQsZ0JBQWdCLENBQUMsRUFBRTtRQUNqQixJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztJQUNyQixDQUFDOzs7OztJQUVELGlCQUFpQixDQUFDLEVBQUU7UUFDbEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUM7SUFDdEIsQ0FBQzs7Ozs7SUFFRCxVQUFVLENBQUMsS0FBSztRQUNkLElBQUksS0FBSyxFQUFFO1lBQ1QsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7U0FDcEI7SUFDSCxDQUFDOzs7WUFsRUYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx3QkFBd0I7Z0JBQ2xDLDZZQUFtRDtnQkFFbkQsU0FBUyxFQUFFO29CQUNUO3dCQUNFLE9BQU8sRUFBRSxpQkFBaUI7d0JBQzFCLFdBQVcsRUFBRSxVQUFVOzs7d0JBQUMsR0FBRyxFQUFFLENBQUMsMEJBQTBCLEVBQUM7d0JBQ3pELEtBQUssRUFBRSxJQUFJO3FCQUNaO2lCQUNGOzthQUNGOzs7O1lBZmlDLFVBQVU7WUFBcUIsU0FBUzs7O3dCQWtCdkUsS0FBSzt3QkFDTCxLQUFLO3VCQUNMLEtBQUs7cUJBR0wsS0FBSzttQkFDTCxLQUFLO29CQUVMLFNBQVMsU0FBQyxPQUFPOzs7O0lBUmxCLCtDQUEyQjs7SUFDM0IsK0NBQTJCOztJQUMzQiw4Q0FBMkI7O0lBQzNCLCtEQUFzRDs7SUFFdEQsNENBQWdCOztJQUNoQiwwQ0FBYzs7SUFFZCwyQ0FBMEI7O0lBb0IxQiw4Q0FFRTs7SUFFRiwrQ0FFRTs7Ozs7SUF4QlUsNkNBQTJCOzs7OztJQUFFLCtDQUE0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QWZ0ZXJWaWV3SW5pdCwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBmb3J3YXJkUmVmLCBJbnB1dCwgUmVuZGVyZXIyLCBWaWV3Q2hpbGR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtDb250cm9sVmFsdWVBY2Nlc3NvciwgTkdfVkFMVUVfQUNDRVNTT1J9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7TWF4TGVuZ3RoVGV4dEFyZWFNZXNzYWdlc30gZnJvbSAnLi9NYXhMZW5ndGhUZXh0QXJlYU1lc3NhZ2VzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbHMtbWF4LWxlbmd0aC10ZXh0YXJlYScsXG4gIHRlbXBsYXRlVXJsOiAnLi9tYXgtbGVuZ3RoLXRleHRhcmVhLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbWF4LWxlbmd0aC10ZXh0YXJlYS5jb21wb25lbnQuc2NzcyddLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcbiAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IE1heExlbmd0aFRleHRBcmVhQ29tcG9uZW50KSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIE1heExlbmd0aFRleHRBcmVhQ29tcG9uZW50IGltcGxlbWVudHMgQ29udHJvbFZhbHVlQWNjZXNzb3IsIEFmdGVyVmlld0luaXQge1xuXG4gIEBJbnB1dCgpIG1heGxlbmd0aDogbnVtYmVyO1xuICBASW5wdXQoKSBtaW5sZW5ndGg6IG51bWJlcjtcbiAgQElucHV0KCkgcmVxdWlyZWQ6IGJvb2xlYW47XG4gIG1heExlbmd0aFRleHRBcmVhTWVzc2FnZXMgPSBNYXhMZW5ndGhUZXh0QXJlYU1lc3NhZ2VzO1xuXG4gIEBJbnB1dCgpIF92YWx1ZTtcbiAgQElucHV0KCkgbmFtZTtcblxuICBAVmlld0NoaWxkKCdpbnB1dCcpIGlucHV0O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudDogRWxlbWVudFJlZiwgcHJpdmF0ZSByZW5kZXJlcjI6IFJlbmRlcmVyMikge31cblxuICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XG4gICAgY29uc3QgaWQgPSB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2lkJyk7XG4gICAgdGhpcy5yZW5kZXJlcjIucmVtb3ZlQXR0cmlidXRlKHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LCAnaWQnKTtcbiAgICB0aGlzLnJlbmRlcmVyMi5zZXRBdHRyaWJ1dGUodGhpcy5pbnB1dC5uYXRpdmVFbGVtZW50LCAnaWQnLCBpZCk7XG4gIH1cblxuICBnZXQgdmFsdWUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3ZhbHVlO1xuICB9XG5cbiAgc2V0IHZhbHVlKHZhbHVlKSB7XG4gICAgdGhpcy5fdmFsdWUgPSB2YWx1ZTtcbiAgICB0aGlzLm9uQ2hhbmdlKHZhbHVlKTtcbiAgICB0aGlzLm9uVG91Y2hlZCgpO1xuICB9XG5cbiAgb25DaGFuZ2U6IGFueSA9ICgpID0+IHtcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6c2VtaWNvbG9uXG4gIH07XG5cbiAgb25Ub3VjaGVkOiBhbnkgPSAoKSA9PiB7XG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOnNlbWljb2xvblxuICB9O1xuXG4gIG9uQ2hhbmdlU2VsZWN0aW9uKCkge1xuICAgIHRoaXMub25DaGFuZ2UodGhpcy5fdmFsdWUpO1xuICB9XG5cbiAgcmVnaXN0ZXJPbkNoYW5nZShmbikge1xuICAgIHRoaXMub25DaGFuZ2UgPSBmbjtcbiAgfVxuXG4gIHJlZ2lzdGVyT25Ub3VjaGVkKGZuKSB7XG4gICAgdGhpcy5vblRvdWNoZWQgPSBmbjtcbiAgfVxuXG4gIHdyaXRlVmFsdWUodmFsdWUpIHtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==