/**
 * @fileoverview added by tsickle
 * Generated from: lib/pages/login/login/login.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { LoginPageModelClass } from '../login-model/LoginPageModel.class';
import { DomSanitizer } from '@angular/platform-browser';
var LoginComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LoginComponent, _super);
    function LoginComponent(_DomSanitizationService) {
        var _this = _super.call(this, _DomSanitizationService) || this;
        _this._DomSanitizationService = _DomSanitizationService;
        _this.testMode = false;
        _this.currentPage = 'login';
        _this.loginFormAction = '';
        _this.loginShowError = false;
        _this.loginSuccessMessage = '';
        _this.loginIsFormAjax = false;
        _this.loginPasswordReset = false;
        _this.loginShowRememberMe = false;
        _this.loginUsernameInputName = 'username';
        _this.loginPasswordInputName = 'password';
        _this.loginRememberMeInputName = 'rememberme';
        _this.forgotFormAction = '';
        _this.forgotIsFormAjax = false;
        _this.forgotOneFieldForgot = false;
        _this.forgotUsernameInputName = 'username';
        _this.forgotEmailInputName = 'email';
        _this.forgotUsernameormailInputName = 'usernameormail';
        _this.resetFormAction = '';
        _this.resetIsFormAjax = false;
        _this.resetPasswordInputName = 'password';
        _this.resetPasswordConfirmInputName = 'passwordconfirm';
        _this.loginSubmit = new EventEmitter();
        _this.forgotSubmit = new EventEmitter();
        _this.resetSubmit = new EventEmitter();
        return _this;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    LoginComponent.prototype.login = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.loginSubmit.emit(event);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    LoginComponent.prototype.forgot = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.forgotSubmit.emit(event);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    LoginComponent.prototype.reset = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.resetSubmit.emit(event);
    };
    LoginComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ls-login',
                    template: "<div *ngIf=\"testMode\" class=\"testmode-container\">\n  <span>Mode test</span>\n  <span class=\"btn btn-primary\" (click)=\"currentPage = 'login'\">Page de login</span>\n  <span class=\"btn btn-primary\" (click)=\"currentPage = 'forgot'\">Mot de passe oubli\u00E9</span>\n  <span class=\"btn btn-primary\" (click)=\"currentPage = 'forgot-success'\">Mot de passe oubli\u00E9 demand\u00E9</span>\n  <span class=\"btn btn-primary\" (click)=\"currentPage = 'reset'\">Remise \u00E0 z\u00E9ro</span>\n</div>\n\n<ls-login-form\n  *ngIf=\"currentPage === 'login'\"\n  [visualConfiguration]=\"_visualConfiguration\"\n  [logo]=\"logo\"\n\n  [formAction]=\"loginFormAction\"\n  [showError]=\"loginShowError\"\n  [successMessage]=\"loginSuccessMessage\"\n  [passwordReset]=\"loginPasswordReset\"\n  [isFormAjax]=\"loginIsFormAjax\"\n  [showRememberMe]=\"loginShowRememberMe\"\n  [passwordInputName]=\"loginPasswordInputName\"\n  [usernameInputName]=\"loginUsernameInputName\"\n  [rememberMeInputName]=\"loginRememberMeInputName\"\n\n  (forgotPassword)=\"currentPage = 'forgot'\"\n  (submit)=\"login($event)\"\n>\n  <ng-content select=\".login-form-addons\"></ng-content>\n</ls-login-form>\n\n<ls-forgot-password\n  *ngIf=\"currentPage === 'forgot'\"\n  [visualConfiguration]=\"_visualConfiguration\"\n  [logo]=\"logo\"\n\n  [formAction]=\"forgotFormAction\"\n  [isFormAjax]=\"forgotIsFormAjax\"\n  [oneFieldForgot]=\"forgotOneFieldForgot\"\n  [usernameInputName]=\"forgotUsernameInputName\"\n  [emailInputName]=\"forgotEmailInputName\"\n  [usernameormailInputName]=\"forgotUsernameormailInputName\"\n\n  (backToLogin)=\"currentPage = 'login'\"\n  (submit)=\"forgot($event)\"\n>\n  <ng-content select=\".forgot-form-addons\"></ng-content>\n</ls-forgot-password>\n\n<ls-forgot-password-success\n  *ngIf=\"currentPage === 'forgot-success'\"\n  [logo]=\"logo\"\n  [visualConfiguration]=\"_visualConfiguration\"\n\n  (backToLogin)=\"currentPage = 'login'\"\n></ls-forgot-password-success>\n\n<ls-reset-password\n  *ngIf=\"currentPage === 'reset'\"\n  [logo]=\"logo\"\n  [visualConfiguration]=\"_visualConfiguration\"\n\n  [formAction]=\"resetFormAction\"\n  [isFormAjax]=\"resetIsFormAjax\"\n  [passwordInputName]=\"resetPasswordInputName\"\n  [passwordConfirmInputName]=\"resetPasswordConfirmInputName\"\n\n  (submit)=\"reset($event)\"\n>\n  <ng-content select=\".reset-form-addons\"></ng-content>\n</ls-reset-password>\n",
                    styles: [".testmode-container{zoom:.7;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;position:absolute;top:5px;left:5px;z-index:1}.testmode-container *{cursor:pointer;margin-bottom:5px}"]
                }] }
    ];
    /** @nocollapse */
    LoginComponent.ctorParameters = function () { return [
        { type: DomSanitizer }
    ]; };
    LoginComponent.propDecorators = {
        testMode: [{ type: Input }],
        currentPage: [{ type: Input }],
        loginFormAction: [{ type: Input }],
        loginShowError: [{ type: Input }],
        loginSuccessMessage: [{ type: Input }],
        loginIsFormAjax: [{ type: Input }],
        loginPasswordReset: [{ type: Input }],
        loginShowRememberMe: [{ type: Input }],
        loginUsernameInputName: [{ type: Input }],
        loginPasswordInputName: [{ type: Input }],
        loginRememberMeInputName: [{ type: Input }],
        forgotFormAction: [{ type: Input }],
        forgotIsFormAjax: [{ type: Input }],
        forgotOneFieldForgot: [{ type: Input }],
        forgotUsernameInputName: [{ type: Input }],
        forgotEmailInputName: [{ type: Input }],
        forgotUsernameormailInputName: [{ type: Input }],
        resetFormAction: [{ type: Input }],
        resetIsFormAjax: [{ type: Input }],
        resetPasswordInputName: [{ type: Input }],
        resetPasswordConfirmInputName: [{ type: Input }],
        loginSubmit: [{ type: Output }],
        forgotSubmit: [{ type: Output }],
        resetSubmit: [{ type: Output }]
    };
    return LoginComponent;
}(LoginPageModelClass));
export { LoginComponent };
if (false) {
    /** @type {?} */
    LoginComponent.prototype.testMode;
    /** @type {?} */
    LoginComponent.prototype.currentPage;
    /** @type {?} */
    LoginComponent.prototype.loginFormAction;
    /** @type {?} */
    LoginComponent.prototype.loginShowError;
    /** @type {?} */
    LoginComponent.prototype.loginSuccessMessage;
    /** @type {?} */
    LoginComponent.prototype.loginIsFormAjax;
    /** @type {?} */
    LoginComponent.prototype.loginPasswordReset;
    /** @type {?} */
    LoginComponent.prototype.loginShowRememberMe;
    /** @type {?} */
    LoginComponent.prototype.loginUsernameInputName;
    /** @type {?} */
    LoginComponent.prototype.loginPasswordInputName;
    /** @type {?} */
    LoginComponent.prototype.loginRememberMeInputName;
    /** @type {?} */
    LoginComponent.prototype.forgotFormAction;
    /** @type {?} */
    LoginComponent.prototype.forgotIsFormAjax;
    /** @type {?} */
    LoginComponent.prototype.forgotOneFieldForgot;
    /** @type {?} */
    LoginComponent.prototype.forgotUsernameInputName;
    /** @type {?} */
    LoginComponent.prototype.forgotEmailInputName;
    /** @type {?} */
    LoginComponent.prototype.forgotUsernameormailInputName;
    /** @type {?} */
    LoginComponent.prototype.resetFormAction;
    /** @type {?} */
    LoginComponent.prototype.resetIsFormAjax;
    /** @type {?} */
    LoginComponent.prototype.resetPasswordInputName;
    /** @type {?} */
    LoginComponent.prototype.resetPasswordConfirmInputName;
    /** @type {?} */
    LoginComponent.prototype.loginSubmit;
    /** @type {?} */
    LoginComponent.prototype.forgotSubmit;
    /** @type {?} */
    LoginComponent.prototype.resetSubmit;
    /** @type {?} */
    LoginComponent.prototype._DomSanitizationService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGxpYnJpY2llbC9scy1jb21wb3NhbnRzLyIsInNvdXJjZXMiOlsibGliL3BhZ2VzL2xvZ2luL2xvZ2luL2xvZ2luLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3JFLE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLHFDQUFxQyxDQUFDO0FBQ3hFLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUV2RDtJQUtvQywwQ0FBbUI7SUFrQ3JELHdCQUFtQix1QkFBcUM7UUFBeEQsWUFDRSxrQkFBTSx1QkFBdUIsQ0FBQyxTQUMvQjtRQUZrQiw2QkFBdUIsR0FBdkIsdUJBQXVCLENBQWM7UUFoQy9DLGNBQVEsR0FBRyxLQUFLLENBQUM7UUFDakIsaUJBQVcsR0FBRyxPQUFPLENBQUM7UUFFdEIscUJBQWUsR0FBRyxFQUFFLENBQUM7UUFDckIsb0JBQWMsR0FBRyxLQUFLLENBQUM7UUFDdkIseUJBQW1CLEdBQUcsRUFBRSxDQUFDO1FBQ3pCLHFCQUFlLEdBQUcsS0FBSyxDQUFDO1FBQ3hCLHdCQUFrQixHQUFHLEtBQUssQ0FBQztRQUMzQix5QkFBbUIsR0FBRyxLQUFLLENBQUM7UUFDNUIsNEJBQXNCLEdBQUcsVUFBVSxDQUFDO1FBQ3BDLDRCQUFzQixHQUFHLFVBQVUsQ0FBQztRQUNwQyw4QkFBd0IsR0FBRyxZQUFZLENBQUM7UUFFeEMsc0JBQWdCLEdBQUcsRUFBRSxDQUFDO1FBQ3RCLHNCQUFnQixHQUFHLEtBQUssQ0FBQztRQUN6QiwwQkFBb0IsR0FBRyxLQUFLLENBQUM7UUFDN0IsNkJBQXVCLEdBQUcsVUFBVSxDQUFDO1FBQ3JDLDBCQUFvQixHQUFHLE9BQU8sQ0FBQztRQUMvQixtQ0FBNkIsR0FBRyxnQkFBZ0IsQ0FBQztRQUVqRCxxQkFBZSxHQUFHLEVBQUUsQ0FBQztRQUNyQixxQkFBZSxHQUFHLEtBQUssQ0FBQztRQUN4Qiw0QkFBc0IsR0FBRyxVQUFVLENBQUM7UUFDcEMsbUNBQTZCLEdBQUksaUJBQWlCLENBQUM7UUFHNUQsaUJBQVcsR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUVwRCxrQkFBWSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBRXJELGlCQUFXLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7O0lBSXBELENBQUM7Ozs7O0lBRUQsOEJBQUs7Ozs7SUFBTCxVQUFNLEtBQUs7UUFDVCxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMvQixDQUFDOzs7OztJQUVELCtCQUFNOzs7O0lBQU4sVUFBTyxLQUFLO1FBQ1YsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDaEMsQ0FBQzs7Ozs7SUFFRCw4QkFBSzs7OztJQUFMLFVBQU0sS0FBSztRQUNULElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQy9CLENBQUM7O2dCQXJERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLFVBQVU7b0JBQ3BCLGszRUFBcUM7O2lCQUV0Qzs7OztnQkFOTyxZQUFZOzs7MkJBU2pCLEtBQUs7OEJBQ0wsS0FBSztrQ0FFTCxLQUFLO2lDQUNMLEtBQUs7c0NBQ0wsS0FBSztrQ0FDTCxLQUFLO3FDQUNMLEtBQUs7c0NBQ0wsS0FBSzt5Q0FDTCxLQUFLO3lDQUNMLEtBQUs7MkNBQ0wsS0FBSzttQ0FFTCxLQUFLO21DQUNMLEtBQUs7dUNBQ0wsS0FBSzswQ0FDTCxLQUFLO3VDQUNMLEtBQUs7Z0RBQ0wsS0FBSztrQ0FFTCxLQUFLO2tDQUNMLEtBQUs7eUNBQ0wsS0FBSztnREFDTCxLQUFLOzhCQUVMLE1BQU07K0JBRU4sTUFBTTs4QkFFTixNQUFNOztJQWtCVCxxQkFBQztDQUFBLEFBdERELENBS29DLG1CQUFtQixHQWlEdEQ7U0FqRFksY0FBYzs7O0lBRXpCLGtDQUEwQjs7SUFDMUIscUNBQStCOztJQUUvQix5Q0FBOEI7O0lBQzlCLHdDQUFnQzs7SUFDaEMsNkNBQWtDOztJQUNsQyx5Q0FBaUM7O0lBQ2pDLDRDQUFvQzs7SUFDcEMsNkNBQXFDOztJQUNyQyxnREFBNkM7O0lBQzdDLGdEQUE2Qzs7SUFDN0Msa0RBQWlEOztJQUVqRCwwQ0FBK0I7O0lBQy9CLDBDQUFrQzs7SUFDbEMsOENBQXNDOztJQUN0QyxpREFBOEM7O0lBQzlDLDhDQUF3Qzs7SUFDeEMsdURBQTBEOztJQUUxRCx5Q0FBOEI7O0lBQzlCLHlDQUFpQzs7SUFDakMsZ0RBQTZDOztJQUM3Qyx1REFBNEQ7O0lBRTVELHFDQUNvRDs7SUFDcEQsc0NBQ3FEOztJQUNyRCxxQ0FDb0Q7O0lBRXhDLGlEQUE0QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtMb2dpblBhZ2VNb2RlbENsYXNzfSBmcm9tICcuLi9sb2dpbi1tb2RlbC9Mb2dpblBhZ2VNb2RlbC5jbGFzcyc7XG5pbXBvcnQge0RvbVNhbml0aXplcn0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2xzLWxvZ2luJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xvZ2luLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbG9naW4uY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBMb2dpbkNvbXBvbmVudCBleHRlbmRzIExvZ2luUGFnZU1vZGVsQ2xhc3Mge1xuXG4gIEBJbnB1dCgpIHRlc3RNb2RlID0gZmFsc2U7XG4gIEBJbnB1dCgpIGN1cnJlbnRQYWdlID0gJ2xvZ2luJztcblxuICBASW5wdXQoKSBsb2dpbkZvcm1BY3Rpb24gPSAnJztcbiAgQElucHV0KCkgbG9naW5TaG93RXJyb3IgPSBmYWxzZTtcbiAgQElucHV0KCkgbG9naW5TdWNjZXNzTWVzc2FnZSA9ICcnO1xuICBASW5wdXQoKSBsb2dpbklzRm9ybUFqYXggPSBmYWxzZTtcbiAgQElucHV0KCkgbG9naW5QYXNzd29yZFJlc2V0ID0gZmFsc2U7XG4gIEBJbnB1dCgpIGxvZ2luU2hvd1JlbWVtYmVyTWUgPSBmYWxzZTtcbiAgQElucHV0KCkgbG9naW5Vc2VybmFtZUlucHV0TmFtZSA9ICd1c2VybmFtZSc7XG4gIEBJbnB1dCgpIGxvZ2luUGFzc3dvcmRJbnB1dE5hbWUgPSAncGFzc3dvcmQnO1xuICBASW5wdXQoKSBsb2dpblJlbWVtYmVyTWVJbnB1dE5hbWUgPSAncmVtZW1iZXJtZSc7XG5cbiAgQElucHV0KCkgZm9yZ290Rm9ybUFjdGlvbiA9ICcnO1xuICBASW5wdXQoKSBmb3Jnb3RJc0Zvcm1BamF4ID0gZmFsc2U7XG4gIEBJbnB1dCgpIGZvcmdvdE9uZUZpZWxkRm9yZ290ID0gZmFsc2U7XG4gIEBJbnB1dCgpIGZvcmdvdFVzZXJuYW1lSW5wdXROYW1lID0gJ3VzZXJuYW1lJztcbiAgQElucHV0KCkgZm9yZ290RW1haWxJbnB1dE5hbWUgPSAnZW1haWwnO1xuICBASW5wdXQoKSBmb3Jnb3RVc2VybmFtZW9ybWFpbElucHV0TmFtZSA9ICd1c2VybmFtZW9ybWFpbCc7XG5cbiAgQElucHV0KCkgcmVzZXRGb3JtQWN0aW9uID0gJyc7XG4gIEBJbnB1dCgpIHJlc2V0SXNGb3JtQWpheCA9IGZhbHNlO1xuICBASW5wdXQoKSByZXNldFBhc3N3b3JkSW5wdXROYW1lID0gJ3Bhc3N3b3JkJztcbiAgQElucHV0KCkgcmVzZXRQYXNzd29yZENvbmZpcm1JbnB1dE5hbWUgID0gJ3Bhc3N3b3JkY29uZmlybSc7XG5cbiAgQE91dHB1dCgpXG4gIGxvZ2luU3VibWl0OiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpXG4gIGZvcmdvdFN1Ym1pdDogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKVxuICByZXNldFN1Ym1pdDogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgY29uc3RydWN0b3IocHVibGljIF9Eb21TYW5pdGl6YXRpb25TZXJ2aWNlOiBEb21TYW5pdGl6ZXIpIHtcbiAgICBzdXBlcihfRG9tU2FuaXRpemF0aW9uU2VydmljZSk7XG4gIH1cblxuICBsb2dpbihldmVudCkge1xuICAgIHRoaXMubG9naW5TdWJtaXQuZW1pdChldmVudCk7XG4gIH1cblxuICBmb3Jnb3QoZXZlbnQpIHtcbiAgICB0aGlzLmZvcmdvdFN1Ym1pdC5lbWl0KGV2ZW50KTtcbiAgfVxuXG4gIHJlc2V0KGV2ZW50KSB7XG4gICAgdGhpcy5yZXNldFN1Ym1pdC5lbWl0KGV2ZW50KTtcbiAgfVxufVxuIl19