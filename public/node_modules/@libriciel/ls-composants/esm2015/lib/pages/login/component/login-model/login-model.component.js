/**
 * @fileoverview added by tsickle
 * Generated from: lib/pages/login/component/login-model/login-model.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, HostListener, Input, ViewChild } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { defaultConfiguration } from '../login-config/login-config.model';
export class LoginModelComponent {
    /**
     * @param {?} _DomSanitizationService
     */
    constructor(_DomSanitizationService) {
        this._DomSanitizationService = _DomSanitizationService;
        this._visualConfiguration = defaultConfiguration;
    }
    /**
     * @param {?} config
     * @return {?}
     */
    set visualConfiguration(config) {
        this._visualConfiguration = typeof config === 'string' ? JSON.parse(config) : config;
        this.getImageDimensions(this._visualConfiguration.imgData);
    }
    /**
     * @param {?} file
     * @return {?}
     */
    getImageDimensions(file) {
        /** @type {?} */
        const i = new Image();
        i.onload = (/**
         * @return {?}
         */
        () => {
            this.imgSize = { w: i.width, h: i.height };
            this.handleImgPositionning();
        });
        i.src = file;
    }
    /**
     * @return {?}
     */
    handleImgPositionning() {
        if (this.imgSize !== null) {
            /** @type {?} */
            const w = this.imgEl.nativeElement.offsetWidth;
            /** @type {?} */
            const h = this.imgEl.nativeElement.offsetHeight;
            /** @type {?} */
            let finalSize;
            /** @type {?} */
            let width = '90%';
            /** @type {?} */
            let height = '90%';
            if (this.imgSize.w > this.imgSize.h) {
                finalSize = (w * 0.9 * this.imgSize.h) / (h * this.imgSize.w) * 100;
                height = finalSize + '%';
                if (finalSize > 90) {
                    width = 'auto';
                    height = '90%';
                }
            }
            else {
                finalSize = (h * 0.9 * this.imgSize.w) / (w * this.imgSize.h) * 100;
                width = finalSize + '%';
                if (finalSize > 90) {
                    height = 'auto';
                    width = '90%';
                }
            }
            this.imgEl.nativeElement.style['background-size'] = width + ' ' + height;
        }
    }
}
LoginModelComponent.decorators = [
    { type: Component, args: [{
                selector: 'ls-login-model',
                template: "<main class=\"connection-page\">\n  <section class=\"main\">\n    <div [style.background-color]=\"_visualConfiguration.colorBackground\"\n         [style.color]=\"_visualConfiguration.colorText\"\n         [style.display]=\"_visualConfiguration.showCustom ? '': 'none'\"\n         class=\"coll-side\">\n      <div #imgcontainer class=\"img-container\" [ngStyle]=\"{'background-image': 'url(&quot;' + _visualConfiguration.imgData + '&quot;)'}\">\n\n      </div>\n      <div class=\"sub-txt\">\n        <span>{{_visualConfiguration.subText}}</span>\n      </div>\n    </div>\n    <div class=\"form-side\">\n\n      <div class=\"form-content\" [ngClass]=\"_visualConfiguration.showInformation && _visualConfiguration.informationText ? 'form-content-padding' : ''\">\n        <div class=\"soft-logo\">\n          <img id=\"libriciel-logo\" [src]=\"logo\" alt=\"Image du Libriciel\" src=\"\">\n        </div>\n\n        <ng-content></ng-content>\n\n      </div>\n    </div>\n  </section>\n  <section *ngIf=\"_visualConfiguration.showInformation && _visualConfiguration.informationText\" class=\"floating-message\">\n    <div [ngClass]=\"'alert-' + _visualConfiguration.informationType\" class=\"alert\">\n      <i [class.fa-exclamation-circle]=\"_visualConfiguration.informationType === 'warning'\"\n         [class.fa-exclamation-triangle]=\"_visualConfiguration.informationType === 'danger'\"\n         [class.fa-info-circle]=\"_visualConfiguration.informationType === 'info'\"\n         class=\"fa fa-lg\"\n      ></i>\n      {{_visualConfiguration.informationText}}</div>\n  </section>\n</main>\n\n\n\n\n",
                styles: [".hidden{display:none!important}.soft-logo{height:100%;text-align:center}.connection-page{-ms-flex-direction:column;-webkit-box-direction:normal;-webkit-box-orient:vertical;display:-webkit-box;display:-ms-flexbox;display:flex;flex-direction:column;height:calc(100vh - 40px);position:relative}span.btn{cursor:pointer}.main{-ms-flex-negative:1;-ms-flex-positive:1;-webkit-box-flex:1;display:-webkit-box;display:-ms-flexbox;display:flex;flex-grow:1;flex-shrink:1;width:100%}.coll-side{-ms-grid-columns:1fr;-ms-grid-rows:1fr 1rem 40%;align-items:center;display:-ms-grid;display:grid;grid-gap:1rem;grid-template:\"img\" 1fr \"text\" 40%/1fr;justify-items:center;width:30%}.coll-side .img-container{-ms-grid-column:1;-ms-grid-row:1;background-position:bottom;background-repeat:no-repeat;grid-area:img;height:100%;max-width:calc(100% - 2rem);text-align:center;width:100%}.coll-side .sub-txt{-ms-grid-column:1;-ms-grid-row:3;align-self:baseline;grid-area:text;max-width:100%;padding:1rem;text-align:center}.form-side{-ms-flex-align:center;-ms-flex-pack:center;-ms-flex-positive:1;-webkit-box-align:center;-webkit-box-flex:1;-webkit-box-pack:center;align-items:center;background-color:#fff;display:-webkit-box;display:-ms-flexbox;display:flex;flex-grow:1;justify-content:center}.form-side .form-content-padding{padding-top:100px!important}.form-side .form-content{-ms-flex-direction:column;-webkit-box-direction:normal;-webkit-box-orient:vertical;display:-webkit-box;display:-ms-flexbox;display:flex;flex-direction:column;padding-bottom:50px;padding-top:50px;width:500px}.form-side .form-content .page-title{font-size:1rem;font-weight:400;padding-bottom:1.5rem;padding-top:3rem;text-align:center}.floating-message{left:10%;position:absolute;right:10%;top:5%}.floating-message div{-ms-flex-align:center;-ms-flex-pack:center;-webkit-box-align:center;-webkit-box-pack:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;justify-content:center;padding-bottom:1rem;padding-top:1rem}.floating-message div i{padding-right:20px}#libriciel-logo{height:auto;max-width:100%;width:100%}@media screen and (max-width:800px){.coll-side{display:none}}"]
            }] }
];
/** @nocollapse */
LoginModelComponent.ctorParameters = () => [
    { type: DomSanitizer }
];
LoginModelComponent.propDecorators = {
    logo: [{ type: Input }],
    imgEl: [{ type: ViewChild, args: ['imgcontainer',] }],
    visualConfiguration: [{ type: Input }],
    handleImgPositionning: [{ type: HostListener, args: ['window:resize',] }]
};
if (false) {
    /** @type {?} */
    LoginModelComponent.prototype.logo;
    /** @type {?} */
    LoginModelComponent.prototype._visualConfiguration;
    /** @type {?} */
    LoginModelComponent.prototype.imgEl;
    /** @type {?} */
    LoginModelComponent.prototype.imgSize;
    /** @type {?} */
    LoginModelComponent.prototype._DomSanitizationService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4tbW9kZWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Ii9idWlsZHMvb3V0aWxzL2NoYXJ0ZWdyYXBoaXF1ZS9saWJyYWlyaWUtYW5ndWxhci9saWIvc3JjLyIsInNvdXJjZXMiOlsibGliL3BhZ2VzL2xvZ2luL2NvbXBvbmVudC9sb2dpbi1tb2RlbC9sb2dpbi1tb2RlbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNwRixPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFDdkQsT0FBTyxFQUFDLG9CQUFvQixFQUFtQixNQUFNLG9DQUFvQyxDQUFDO0FBTzFGLE1BQU0sT0FBTyxtQkFBbUI7Ozs7SUFHOUIsWUFBbUIsdUJBQXFDO1FBQXJDLDRCQUF1QixHQUF2Qix1QkFBdUIsQ0FBYztRQUd4RCx5QkFBb0IsR0FBcUIsb0JBQW9CLENBQUM7SUFGOUQsQ0FBQzs7Ozs7SUFPRCxJQUNJLG1CQUFtQixDQUFDLE1BQU07UUFDNUIsSUFBSSxDQUFDLG9CQUFvQixHQUFHLE9BQU8sTUFBTSxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDO1FBQ3JGLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsb0JBQW9CLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDN0QsQ0FBQzs7Ozs7SUFFRCxrQkFBa0IsQ0FBQyxJQUFJOztjQUNmLENBQUMsR0FBRyxJQUFJLEtBQUssRUFBRTtRQUNyQixDQUFDLENBQUMsTUFBTTs7O1FBQUcsR0FBRyxFQUFFO1lBQ2QsSUFBSSxDQUFDLE9BQU8sR0FBRyxFQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxFQUFDLENBQUM7WUFDekMsSUFBSSxDQUFDLHFCQUFxQixFQUFFLENBQUM7UUFDL0IsQ0FBQyxDQUFBLENBQUM7UUFDRixDQUFDLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQztJQUNmLENBQUM7Ozs7SUFHRCxxQkFBcUI7UUFDbkIsSUFBSyxJQUFJLENBQUMsT0FBTyxLQUFLLElBQUksRUFBRzs7a0JBQ3JCLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxXQUFXOztrQkFDeEMsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLFlBQVk7O2dCQUUzQyxTQUFTOztnQkFDVCxLQUFLLEdBQVEsS0FBSzs7Z0JBQ2xCLE1BQU0sR0FBUSxLQUFLO1lBRXZCLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUU7Z0JBQ25DLFNBQVMsR0FBRyxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQztnQkFDcEUsTUFBTSxHQUFHLFNBQVMsR0FBRyxHQUFHLENBQUM7Z0JBQ3pCLElBQUksU0FBUyxHQUFHLEVBQUUsRUFBRTtvQkFDbEIsS0FBSyxHQUFHLE1BQU0sQ0FBQztvQkFDZixNQUFNLEdBQUcsS0FBSyxDQUFDO2lCQUNoQjthQUNGO2lCQUFNO2dCQUNMLFNBQVMsR0FBRyxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQztnQkFDcEUsS0FBSyxHQUFHLFNBQVMsR0FBRyxHQUFHLENBQUM7Z0JBQ3hCLElBQUksU0FBUyxHQUFHLEVBQUUsRUFBRTtvQkFDbEIsTUFBTSxHQUFHLE1BQU0sQ0FBQztvQkFDaEIsS0FBSyxHQUFHLEtBQUssQ0FBQztpQkFDZjthQUNGO1lBQ0QsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLGlCQUFpQixDQUFDLEdBQUcsS0FBSyxHQUFHLEdBQUcsR0FBRyxNQUFNLENBQUM7U0FDMUU7SUFDSCxDQUFDOzs7WUExREYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxnQkFBZ0I7Z0JBQzFCLCtrREFBMkM7O2FBRTVDOzs7O1lBUE8sWUFBWTs7O21CQVNqQixLQUFLO29CQU9MLFNBQVMsU0FBQyxjQUFjO2tDQUd4QixLQUFLO29DQWVMLFlBQVksU0FBQyxlQUFlOzs7O0lBekI3QixtQ0FBYzs7SUFLZCxtREFBOEQ7O0lBRTlELG9DQUE2Qzs7SUFDN0Msc0NBQWdDOztJQU5wQixzREFBNEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRWxlbWVudFJlZiwgSG9zdExpc3RlbmVyLCBJbnB1dCwgVmlld0NoaWxkfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7RG9tU2FuaXRpemVyfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcbmltcG9ydCB7ZGVmYXVsdENvbmZpZ3VyYXRpb24sIExvZ2luQ29uZmlnTW9kZWx9IGZyb20gJy4uL2xvZ2luLWNvbmZpZy9sb2dpbi1jb25maWcubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdscy1sb2dpbi1tb2RlbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9sb2dpbi1tb2RlbC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2xvZ2luLW1vZGVsLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgTG9naW5Nb2RlbENvbXBvbmVudCAge1xuICBASW5wdXQoKSBsb2dvO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBfRG9tU2FuaXRpemF0aW9uU2VydmljZTogRG9tU2FuaXRpemVyKSB7XG4gIH1cblxuICBfdmlzdWFsQ29uZmlndXJhdGlvbjogTG9naW5Db25maWdNb2RlbCA9IGRlZmF1bHRDb25maWd1cmF0aW9uO1xuXG4gIEBWaWV3Q2hpbGQoJ2ltZ2NvbnRhaW5lcicpIGltZ0VsOiBFbGVtZW50UmVmO1xuICBpbWdTaXplOiB7dzogbnVtYmVyLCBoOiBudW1iZXJ9O1xuXG4gIEBJbnB1dCgpXG4gIHNldCB2aXN1YWxDb25maWd1cmF0aW9uKGNvbmZpZykge1xuICAgIHRoaXMuX3Zpc3VhbENvbmZpZ3VyYXRpb24gPSB0eXBlb2YgY29uZmlnID09PSAnc3RyaW5nJyA/IEpTT04ucGFyc2UoY29uZmlnKSA6IGNvbmZpZztcbiAgICB0aGlzLmdldEltYWdlRGltZW5zaW9ucyh0aGlzLl92aXN1YWxDb25maWd1cmF0aW9uLmltZ0RhdGEpO1xuICB9XG5cbiAgZ2V0SW1hZ2VEaW1lbnNpb25zKGZpbGUpIHtcbiAgICBjb25zdCBpID0gbmV3IEltYWdlKCk7XG4gICAgaS5vbmxvYWQgPSAoKSA9PiB7XG4gICAgICB0aGlzLmltZ1NpemUgPSB7dzogaS53aWR0aCwgaDogaS5oZWlnaHR9O1xuICAgICAgdGhpcy5oYW5kbGVJbWdQb3NpdGlvbm5pbmcoKTtcbiAgICB9O1xuICAgIGkuc3JjID0gZmlsZTtcbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ3dpbmRvdzpyZXNpemUnKVxuICBoYW5kbGVJbWdQb3NpdGlvbm5pbmcoKSB7XG4gICAgaWYgKCB0aGlzLmltZ1NpemUgIT09IG51bGwgKSB7XG4gICAgICBjb25zdCB3ID0gdGhpcy5pbWdFbC5uYXRpdmVFbGVtZW50Lm9mZnNldFdpZHRoO1xuICAgICAgY29uc3QgaCA9IHRoaXMuaW1nRWwubmF0aXZlRWxlbWVudC5vZmZzZXRIZWlnaHQ7XG5cbiAgICAgIGxldCBmaW5hbFNpemU7XG4gICAgICBsZXQgd2lkdGg6IGFueSA9ICc5MCUnO1xuICAgICAgbGV0IGhlaWdodDogYW55ID0gJzkwJSc7XG5cbiAgICAgIGlmICh0aGlzLmltZ1NpemUudyA+IHRoaXMuaW1nU2l6ZS5oKSB7XG4gICAgICAgIGZpbmFsU2l6ZSA9ICh3ICogMC45ICogdGhpcy5pbWdTaXplLmgpIC8gKGggKiB0aGlzLmltZ1NpemUudykgKiAxMDA7XG4gICAgICAgIGhlaWdodCA9IGZpbmFsU2l6ZSArICclJztcbiAgICAgICAgaWYgKGZpbmFsU2l6ZSA+IDkwKSB7XG4gICAgICAgICAgd2lkdGggPSAnYXV0byc7XG4gICAgICAgICAgaGVpZ2h0ID0gJzkwJSc7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZpbmFsU2l6ZSA9IChoICogMC45ICogdGhpcy5pbWdTaXplLncpIC8gKHcgKiB0aGlzLmltZ1NpemUuaCkgKiAxMDA7XG4gICAgICAgIHdpZHRoID0gZmluYWxTaXplICsgJyUnO1xuICAgICAgICBpZiAoZmluYWxTaXplID4gOTApIHtcbiAgICAgICAgICBoZWlnaHQgPSAnYXV0byc7XG4gICAgICAgICAgd2lkdGggPSAnOTAlJztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgdGhpcy5pbWdFbC5uYXRpdmVFbGVtZW50LnN0eWxlWydiYWNrZ3JvdW5kLXNpemUnXSA9IHdpZHRoICsgJyAnICsgaGVpZ2h0O1xuICAgIH1cbiAgfVxufVxuIl19