/**
 * @fileoverview added by tsickle
 * Generated from: lib/pages/login/login-form/login-form.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { LoginPageModelClass } from '../login-model/LoginPageModel.class';
import { DomSanitizer } from '@angular/platform-browser';
var LoginFormComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LoginFormComponent, _super);
    function LoginFormComponent(_DomSanitizationService) {
        var _this = _super.call(this, _DomSanitizationService) || this;
        _this._DomSanitizationService = _DomSanitizationService;
        _this.showRememberMe = false;
        _this.usernameInputName = 'username';
        _this.passwordInputName = 'password';
        _this.rememberMeInputName = 'rememberme';
        _this.passwordReset = false;
        _this.successMessage = '';
        _this.forgotPassword = new EventEmitter();
        return _this;
    }
    /**
     * @return {?}
     */
    LoginFormComponent.prototype.askForResetPassword = /**
     * @return {?}
     */
    function () {
        this.forgotPassword.emit();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    LoginFormComponent.prototype.preventFormSubmit = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        _super.prototype.preventFormSubmit.call(this, event);
    };
    /**
     * @return {?}
     */
    LoginFormComponent.prototype.submitForm = /**
     * @return {?}
     */
    function () {
        this.submit.emit({
            username: this.username,
            password: this.password,
            rememberMe: this.rememberMe
        });
    };
    LoginFormComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ls-login-form',
                    template: "<ls-login-model [logo]=\"logo\" [visualConfiguration]=\"_visualConfiguration\">\n  <section>\n    <h1 class=\"page-title\">Veuillez saisir vos identifiants de connexion</h1>\n    <form [action]=\"formAction\" method=\"post\" id=\"ls-login-form\" ngNoForm (submit)=\"preventFormSubmit($event)\">\n\n      <div *ngIf=\"showError\" class=\"alert alert-danger\">\n        <i class=\"fa fa-exclamation-triangle\"></i>\n        Identifiant ou mot de passe erron\u00E9\n      </div>\n\n      <div *ngIf=\"successMessage\" class=\"alert alert-success\">\n        <i class=\"fa fa-check\"></i>\n        {{successMessage}}\n      </div>\n\n      <div *ngIf=\"passwordReset\" class=\"alert alert-success\">\n        <i class=\"fa fa-check\"></i>\n        Vous pouvez desormais vous connecter avec votre identifiant et votre nouveau mot de passe\n      </div>\n\n      <div class=\"login-input-row\">\n        <label [attr.for]=\"usernameInputName\">\n          Identifiant\n        </label>\n        <div class=\"form-group input-group-front-icon\">\n                <span>\n                  <i class=\"fa fa-user\"></i>\n                </span>\n          <input [(ngModel)]=\"username\" [attr.name]=\"usernameInputName\" [attr.id]=\"usernameInputName\" class=\"form-control\" required>\n        </div>\n      </div>\n\n      <div class=\"login-input-row\">\n        <label [attr.for]=\"passwordInputName\">\n          Mot de passe\n        </label>\n        <div>\n          <ls-password [(ngModel)]=\"password\" [name]=\"passwordInputName\" [attr.id]=\"passwordInputName\" required></ls-password>\n        </div>\n      </div>\n\n      <div *ngIf=\"showRememberMe\" class=\"login-input-row\">\n        <div class=\"form-check\">\n          <input [(ngModel)]=\"rememberMe\" [attr.name]=\"rememberMeInputName\" [attr.id]=\"rememberMeInputName\" class=\"form-check-input\"\n                 type=\"checkbox\">\n          <label class=\"form-check-label\" [attr.for]=\"rememberMeInputName\">Se souvenir de moi</label>\n        </div>\n      </div>\n\n      <ng-content></ng-content>\n\n      <div class=\"float-right\">\n        <span (click)=\"askForResetPassword()\" class=\"btn btn-link forgot-passwd-lnk\">\n          Mot de passe oubli\u00E9 ?\n        </span>\n\n        <button (click)=\"submitForm()\" class=\"btn btn-primary\" form=\"ls-login-form\" type=\"submit\" [class.disabled]=\"submitted\">\n          <i *ngIf=\"!submitted\" class=\"fa fa-sign-in fa-sign-in-alt fa-fw\"></i>\n          <i *ngIf=\"submitted\" class=\"fa fa-spinner fa-spin fa-fw\"></i>\n          Se connecter\n        </button>\n      </div>\n    </form>\n  </section>\n</ls-login-model>\n",
                    styles: [".page-title{font-size:1rem;font-weight:400;padding-top:3rem;padding-bottom:1.5rem;text-align:center}.alert{text-align:center}.forgot-passwd-lnk{cursor:pointer;margin-right:1rem}.float-right{padding-top:1rem}.login-input-row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.login-input-row>label{width:33%;margin-right:1rem}.login-input-row>div{display:inline-block;width:67%}.login-input-row>.form-check{width:100%;padding-left:calc(33% + 35px)}"]
                }] }
    ];
    /** @nocollapse */
    LoginFormComponent.ctorParameters = function () { return [
        { type: DomSanitizer }
    ]; };
    LoginFormComponent.propDecorators = {
        showRememberMe: [{ type: Input }],
        usernameInputName: [{ type: Input }],
        passwordInputName: [{ type: Input }],
        rememberMeInputName: [{ type: Input }],
        passwordReset: [{ type: Input }],
        successMessage: [{ type: Input }],
        forgotPassword: [{ type: Output }]
    };
    return LoginFormComponent;
}(LoginPageModelClass));
export { LoginFormComponent };
if (false) {
    /** @type {?} */
    LoginFormComponent.prototype.username;
    /** @type {?} */
    LoginFormComponent.prototype.password;
    /** @type {?} */
    LoginFormComponent.prototype.rememberMe;
    /** @type {?} */
    LoginFormComponent.prototype.showRememberMe;
    /** @type {?} */
    LoginFormComponent.prototype.usernameInputName;
    /** @type {?} */
    LoginFormComponent.prototype.passwordInputName;
    /** @type {?} */
    LoginFormComponent.prototype.rememberMeInputName;
    /** @type {?} */
    LoginFormComponent.prototype.passwordReset;
    /** @type {?} */
    LoginFormComponent.prototype.successMessage;
    /** @type {?} */
    LoginFormComponent.prototype.forgotPassword;
    /** @type {?} */
    LoginFormComponent.prototype._DomSanitizationService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4tZm9ybS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbGlicmljaWVsL2xzLWNvbXBvc2FudHMvIiwic291cmNlcyI6WyJsaWIvcGFnZXMvbG9naW4vbG9naW4tZm9ybS9sb2dpbi1mb3JtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3JFLE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLHFDQUFxQyxDQUFDO0FBQ3hFLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUV2RDtJQUt3Qyw4Q0FBbUI7SUFlekQsNEJBQW1CLHVCQUFxQztRQUF4RCxZQUNFLGtCQUFNLHVCQUF1QixDQUFDLFNBQy9CO1FBRmtCLDZCQUF1QixHQUF2Qix1QkFBdUIsQ0FBYztRQVQvQyxvQkFBYyxHQUFHLEtBQUssQ0FBQztRQUN2Qix1QkFBaUIsR0FBRyxVQUFVLENBQUM7UUFDL0IsdUJBQWlCLEdBQUcsVUFBVSxDQUFDO1FBQy9CLHlCQUFtQixHQUFHLFlBQVksQ0FBQztRQUNuQyxtQkFBYSxHQUFHLEtBQUssQ0FBQztRQUN0QixvQkFBYyxHQUFHLEVBQUUsQ0FBQztRQUU3QixvQkFBYyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDOztJQUl2RCxDQUFDOzs7O0lBRUQsZ0RBQW1COzs7SUFBbkI7UUFDRSxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzdCLENBQUM7Ozs7O0lBRUQsOENBQWlCOzs7O0lBQWpCLFVBQWtCLEtBQUs7UUFDckIsaUJBQU0saUJBQWlCLFlBQUMsS0FBSyxDQUFDLENBQUM7SUFDakMsQ0FBQzs7OztJQUVELHVDQUFVOzs7SUFBVjtRQUNFLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDO1lBQ2YsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO1lBQ3ZCLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUTtZQUN2QixVQUFVLEVBQUUsSUFBSSxDQUFDLFVBQVU7U0FDNUIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7Z0JBdENGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsZUFBZTtvQkFDekIsbW5GQUEwQzs7aUJBRTNDOzs7O2dCQU5PLFlBQVk7OztpQ0FhakIsS0FBSztvQ0FDTCxLQUFLO29DQUNMLEtBQUs7c0NBQ0wsS0FBSztnQ0FDTCxLQUFLO2lDQUNMLEtBQUs7aUNBQ0wsTUFBTTs7SUFzQlQseUJBQUM7Q0FBQSxBQXZDRCxDQUt3QyxtQkFBbUIsR0FrQzFEO1NBbENZLGtCQUFrQjs7O0lBRTdCLHNDQUFpQjs7SUFDakIsc0NBQWlCOztJQUNqQix3Q0FBb0I7O0lBRXBCLDRDQUFnQzs7SUFDaEMsK0NBQXdDOztJQUN4QywrQ0FBd0M7O0lBQ3hDLGlEQUE0Qzs7SUFDNUMsMkNBQStCOztJQUMvQiw0Q0FBNkI7O0lBQzdCLDRDQUN1RDs7SUFFM0MscURBQTRDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0xvZ2luUGFnZU1vZGVsQ2xhc3N9IGZyb20gJy4uL2xvZ2luLW1vZGVsL0xvZ2luUGFnZU1vZGVsLmNsYXNzJztcbmltcG9ydCB7RG9tU2FuaXRpemVyfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbHMtbG9naW4tZm9ybScsXG4gIHRlbXBsYXRlVXJsOiAnLi9sb2dpbi1mb3JtLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbG9naW4tZm9ybS5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIExvZ2luRm9ybUNvbXBvbmVudCBleHRlbmRzIExvZ2luUGFnZU1vZGVsQ2xhc3Mge1xuXG4gIHVzZXJuYW1lOiBzdHJpbmc7XG4gIHBhc3N3b3JkOiBzdHJpbmc7XG4gIHJlbWVtYmVyTWU6IGJvb2xlYW47XG5cbiAgQElucHV0KCkgc2hvd1JlbWVtYmVyTWUgPSBmYWxzZTtcbiAgQElucHV0KCkgdXNlcm5hbWVJbnB1dE5hbWUgPSAndXNlcm5hbWUnO1xuICBASW5wdXQoKSBwYXNzd29yZElucHV0TmFtZSA9ICdwYXNzd29yZCc7XG4gIEBJbnB1dCgpIHJlbWVtYmVyTWVJbnB1dE5hbWUgPSAncmVtZW1iZXJtZSc7XG4gIEBJbnB1dCgpIHBhc3N3b3JkUmVzZXQgPSBmYWxzZTtcbiAgQElucHV0KCkgc3VjY2Vzc01lc3NhZ2UgPSAnJztcbiAgQE91dHB1dCgpXG4gIGZvcmdvdFBhc3N3b3JkOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgX0RvbVNhbml0aXphdGlvblNlcnZpY2U6IERvbVNhbml0aXplcikge1xuICAgIHN1cGVyKF9Eb21TYW5pdGl6YXRpb25TZXJ2aWNlKTtcbiAgfVxuXG4gIGFza0ZvclJlc2V0UGFzc3dvcmQoKSB7XG4gICAgdGhpcy5mb3Jnb3RQYXNzd29yZC5lbWl0KCk7XG4gIH1cblxuICBwcmV2ZW50Rm9ybVN1Ym1pdChldmVudCkge1xuICAgIHN1cGVyLnByZXZlbnRGb3JtU3VibWl0KGV2ZW50KTtcbiAgfVxuXG4gIHN1Ym1pdEZvcm0oKSB7XG4gICAgdGhpcy5zdWJtaXQuZW1pdCh7XG4gICAgICB1c2VybmFtZTogdGhpcy51c2VybmFtZSxcbiAgICAgIHBhc3N3b3JkOiB0aGlzLnBhc3N3b3JkLFxuICAgICAgcmVtZW1iZXJNZTogdGhpcy5yZW1lbWJlck1lXG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==