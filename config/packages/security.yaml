security:
  role_hierarchy:
    ROLE_SUPERADMIN: [ROLE_MANAGE_STRUCTURES, ROLE_MANAGE_USERS, ROLE_MANAGE_TYPES, ROLE_MANAGE_EMAIL_TEMPLATES,
                      ROLE_MANAGE_PARTIES, ROLE_MANAGE_PREFERENCES, ROLE_MANAGE_THEMES, ROLE_MANAGE_SITTINGS,
                      ROLE_MANAGE_CONNECTORS]
    ROLE_GROUP_ADMIN: [ROLE_MANAGE_STRUCTURES, ROLE_MANAGE_USERS, ROLE_MANAGE_TYPES, ROLE_MANAGE_EMAIL_TEMPLATES,
                       ROLE_MANAGE_PARTIES,ROLE_MANAGE_PREFERENCES, ROLE_MANAGE_THEMES, ROLE_MANAGE_SITTINGS, ROLE_MANAGE_CONNECTORS]
    ROLE_STRUCTURE_ADMIN: [ROLE_MANAGE_USERS, ROLE_MANAGE_TYPES, ROLE_MANAGE_EMAIL_TEMPLATES, ROLE_MANAGE_PARTIES,
                           ROLE_MANAGE_PREFERENCES, ROLE_MANAGE_THEMES, ROLE_MANAGE_SITTINGS, ROLE_MANAGE_CONNECTORS]
    ROLE_SECRETARY: [ROLE_MANAGE_SITTINGS, ROLE_MANAGE_PREFERENCES]

    ROLE_API_STRUCTURE_ADMIN: [ROLE_API]

  enable_authenticator_manager: true

  password_hashers:
    App\Entity\User:
      algorithm: argon2i



  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: username

    app_connector_provider:
      entity:
        class: App\Entity\ApiUser
        property: token

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    api:
      pattern: ^/api/v2
      provider: app_connector_provider
      custom_authenticators:
        - App\Security\TokenAuthenticator

    main:
      lazy: true
      provider: app_user_provider

      custom_authenticators:
        - App\Security\LoginFormAuthenticator

     # entry_point: App\Security\LoginFormAuthenticator

      logout:
        path: app_logout
        target: app_login

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
  # - { path: ^/admin, roles: ROLE_ADMIN }
  # - { path: ^/profile, roles: ROLE_USER }
