/**
 * @fileoverview added by tsickle
 * Generated from: lib/pages/login/reset-password/reset-password.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { LoginPageModelClass } from '../login-model/LoginPageModel.class';
import { DomSanitizer } from '@angular/platform-browser';
export class ResetPasswordComponent extends LoginPageModelClass {
    /**
     * @param {?} _DomSanitizationService
     */
    constructor(_DomSanitizationService) {
        super(_DomSanitizationService);
        this._DomSanitizationService = _DomSanitizationService;
        this.samePassword = true;
        this.passwordInputName = 'password';
        this.passwordConfirmInputName = 'passwordconfirm';
    }
    /**
     * @param {?} event
     * @return {?}
     */
    preventFormSubmit(event) {
        super.preventFormSubmit(event);
    }
    /**
     * @return {?}
     */
    submitForm() {
        if (this.newpassword === this.newpasswordconfirm) {
            this.submit.emit({ password: this.newpassword });
        }
        else {
            this.samePassword = false;
        }
    }
}
ResetPasswordComponent.decorators = [
    { type: Component, args: [{
                selector: 'ls-reset-password',
                template: "<ls-login-model [visualConfiguration]=\"_visualConfiguration\" [logo]=\"logo\">\n  <section id=\"reset-page\">\n    <h1 class=\"page-title\">Veuillez saisir un nouveau mot de passe</h1>\n    <form ngNoForm action=\"\" id=\"reset-form\" method=\"post\" [action]=\"formAction\" (submit)=\"preventFormSubmit($event)\">\n\n      <div class=\"alert alert-danger\" *ngIf=\"!samePassword\">\n        <i class=\"fa fa-exclamation-triangle\"></i>\n        Les deux mots de passe ne sont pas identiques\n      </div>\n\n      <div>\n        <label [attr.for]=\"passwordInputName\">\n          Nouveau mot de passe\n        </label>\n        <div>\n          <ls-password [showIcon]=\"false\" [(ngModel)]=\"newpassword\" [name]=\"passwordInputName\" [attr.id]=\"passwordInputName\" required></ls-password>\n        </div>\n      </div>\n\n      <div>\n        <label [attr.for]=\"passwordConfirmInputName\">\n          Confirmation du nouveau mot de passe\n        </label>\n        <div>\n          <ls-password [showIcon]=\"false\" [attr.id]=\"passwordConfirmInputName\" [(ngModel)]=\"newpasswordconfirm\" [name]=\"passwordConfirmInputName\" required></ls-password>\n        </div>\n      </div>\n\n      <ng-content></ng-content>\n\n      <div class=\"float-right\">\n        <button type=\"submit\" (click)=\"submitForm()\" class=\"btn btn-primary\" [class.disabled]=\"submitted\">\n          <i *ngIf=\"!submitted\" class=\"fa fa-save fa-fw\"></i>\n          <i *ngIf=\"submitted\" class=\"fa fa-spinner fa-spin fa-fw\"></i>\n          Enregistrer\n        </button>\n      </div>\n    </form>\n  </section>\n</ls-login-model>\n",
                styles: ["span.btn{cursor:pointer}#reset-form .alert-soft-warning,.page-title{text-align:center}.page-title{font-size:1rem;font-weight:400;padding-bottom:1.5rem;padding-top:3rem}.login-input-row{-ms-flex-align:center;-webkit-box-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex}.login-input-row>label{margin-right:1rem;width:33%}.login-input-row>div{display:inline-block;width:67%}.login-input-row>.form-check{padding-left:calc(33% + 35px);width:100%}.floating-message{left:10%;position:absolute;right:10%;top:5%}.floating-message div{-ms-flex-align:center;-ms-flex-pack:center;-webkit-box-align:center;-webkit-box-pack:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;justify-content:center;min-height:4rem}.floating-message div i{padding-right:20px}.ls-login-footer{height:40px;width:100%}"]
            }] }
];
/** @nocollapse */
ResetPasswordComponent.ctorParameters = () => [
    { type: DomSanitizer }
];
ResetPasswordComponent.propDecorators = {
    passwordInputName: [{ type: Input }],
    passwordConfirmInputName: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    ResetPasswordComponent.prototype.samePassword;
    /** @type {?} */
    ResetPasswordComponent.prototype.newpassword;
    /** @type {?} */
    ResetPasswordComponent.prototype.newpasswordconfirm;
    /** @type {?} */
    ResetPasswordComponent.prototype.passwordInputName;
    /** @type {?} */
    ResetPasswordComponent.prototype.passwordConfirmInputName;
    /** @type {?} */
    ResetPasswordComponent.prototype._DomSanitizationService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzZXQtcGFzc3dvcmQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Ii9idWlsZHMvb3V0aWxzL2NoYXJ0ZWdyYXBoaXF1ZS9saWJyYWlyaWUtYW5ndWxhci9saWIvc3JjLyIsInNvdXJjZXMiOlsibGliL3BhZ2VzL2xvZ2luL3Jlc2V0LXBhc3N3b3JkL3Jlc2V0LXBhc3N3b3JkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQWdCLEtBQUssRUFBUyxNQUFNLGVBQWUsQ0FBQztBQUNyRSxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSxxQ0FBcUMsQ0FBQztBQUN4RSxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFPdkQsTUFBTSxPQUFPLHNCQUF1QixTQUFRLG1CQUFtQjs7OztJQVM3RCxZQUFtQix1QkFBcUM7UUFDdEQsS0FBSyxDQUFDLHVCQUF1QixDQUFDLENBQUM7UUFEZCw0QkFBdUIsR0FBdkIsdUJBQXVCLENBQWM7UUFQeEQsaUJBQVksR0FBRyxJQUFJLENBQUM7UUFJWCxzQkFBaUIsR0FBRyxVQUFVLENBQUM7UUFDL0IsNkJBQXdCLEdBQUcsaUJBQWlCLENBQUM7SUFJdEQsQ0FBQzs7Ozs7SUFFRCxpQkFBaUIsQ0FBQyxLQUFLO1FBQ3JCLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNqQyxDQUFDOzs7O0lBRUQsVUFBVTtRQUNSLElBQUksSUFBSSxDQUFDLFdBQVcsS0FBSyxJQUFJLENBQUMsa0JBQWtCLEVBQUU7WUFDaEQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBQyxDQUFDLENBQUM7U0FDaEQ7YUFBTTtZQUNMLElBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO1NBQzNCO0lBQ0gsQ0FBQzs7O1lBNUJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsbUJBQW1CO2dCQUM3QixrbURBQThDOzthQUUvQzs7OztZQU5PLFlBQVk7OztnQ0FhakIsS0FBSzt1Q0FDTCxLQUFLOzs7O0lBTE4sOENBQW9COztJQUNwQiw2Q0FBb0I7O0lBQ3BCLG9EQUEyQjs7SUFFM0IsbURBQXdDOztJQUN4QywwREFBc0Q7O0lBRTFDLHlEQUE0QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtMb2dpblBhZ2VNb2RlbENsYXNzfSBmcm9tICcuLi9sb2dpbi1tb2RlbC9Mb2dpblBhZ2VNb2RlbC5jbGFzcyc7XG5pbXBvcnQge0RvbVNhbml0aXplcn0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2xzLXJlc2V0LXBhc3N3b3JkJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3Jlc2V0LXBhc3N3b3JkLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vcmVzZXQtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBSZXNldFBhc3N3b3JkQ29tcG9uZW50IGV4dGVuZHMgTG9naW5QYWdlTW9kZWxDbGFzcyB7XG5cbiAgc2FtZVBhc3N3b3JkID0gdHJ1ZTtcbiAgbmV3cGFzc3dvcmQ6IHN0cmluZztcbiAgbmV3cGFzc3dvcmRjb25maXJtOiBzdHJpbmc7XG5cbiAgQElucHV0KCkgcGFzc3dvcmRJbnB1dE5hbWUgPSAncGFzc3dvcmQnO1xuICBASW5wdXQoKSBwYXNzd29yZENvbmZpcm1JbnB1dE5hbWUgPSAncGFzc3dvcmRjb25maXJtJztcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgX0RvbVNhbml0aXphdGlvblNlcnZpY2U6IERvbVNhbml0aXplcikge1xuICAgIHN1cGVyKF9Eb21TYW5pdGl6YXRpb25TZXJ2aWNlKTtcbiAgfVxuXG4gIHByZXZlbnRGb3JtU3VibWl0KGV2ZW50KSB7XG4gICAgc3VwZXIucHJldmVudEZvcm1TdWJtaXQoZXZlbnQpO1xuICB9XG5cbiAgc3VibWl0Rm9ybSgpIHtcbiAgICBpZiAodGhpcy5uZXdwYXNzd29yZCA9PT0gdGhpcy5uZXdwYXNzd29yZGNvbmZpcm0pIHtcbiAgICAgIHRoaXMuc3VibWl0LmVtaXQoe3Bhc3N3b3JkOiB0aGlzLm5ld3Bhc3N3b3JkfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc2FtZVBhc3N3b3JkID0gZmFsc2U7XG4gICAgfVxuICB9XG59XG4iXX0=