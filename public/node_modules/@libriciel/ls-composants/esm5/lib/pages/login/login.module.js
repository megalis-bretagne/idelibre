/**
 * @fileoverview added by tsickle
 * Generated from: lib/pages/login/login.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { FormsModule } from '@angular/forms';
import { ForgotPasswordComponent } from './forgot-password/forgot-password.component';
import { ForgotPasswordSuccessComponent } from './forgot-password-success/forgot-password-success.component';
import { LoginConfigComponent } from './login-config/login-config.component';
import { LoginFormComponent } from './login-form/login-form.component';
import { ResetPasswordComponent } from './reset-password/reset-password.component';
import { LsUiComponentsModule } from '../../component/ui-components.module';
import { LoginModelComponent } from './login-model/login-model.component';
import { LoginComponent } from './login/login.component';
var LsLoginModule = /** @class */ (function () {
    function LsLoginModule() {
    }
    // This is for Components with contents
    LsLoginModule.angularComponents = {
        // pages
        'ls-lib-login-config': LoginConfigComponent,
        'ls-lib-login-form': LoginFormComponent,
        'ls-lib-forgot-password': ForgotPasswordComponent,
        'ls-lib-forgot-password-success': ForgotPasswordSuccessComponent,
        'ls-lib-reset-password': ResetPasswordComponent,
        'ls-lib-login': LoginComponent,
        'ls-lib-login-model': LoginModelComponent
    };
    LsLoginModule.decorators = [
        { type: NgModule, args: [{
                    entryComponents: [
                        LoginModelComponent,
                        LoginConfigComponent,
                        LoginFormComponent,
                        ForgotPasswordComponent,
                        ForgotPasswordSuccessComponent,
                        ResetPasswordComponent,
                        LoginComponent
                    ],
                    declarations: [
                        LoginModelComponent,
                        ForgotPasswordComponent,
                        ForgotPasswordSuccessComponent,
                        LoginConfigComponent,
                        LoginFormComponent,
                        ResetPasswordComponent,
                        LoginComponent
                    ],
                    imports: [
                        BrowserModule,
                        BrowserAnimationsModule,
                        FormsModule,
                        LsUiComponentsModule
                    ],
                    exports: [
                        LoginModelComponent,
                        ForgotPasswordComponent,
                        ForgotPasswordSuccessComponent,
                        LoginConfigComponent,
                        LoginFormComponent,
                        ResetPasswordComponent,
                        LoginComponent
                    ]
                },] }
    ];
    /** @nocollapse */
    LsLoginModule.ctorParameters = function () { return []; };
    return LsLoginModule;
}());
export { LsLoginModule };
if (false) {
    /** @type {?} */
    LsLoginModule.angularComponents;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGxpYnJpY2llbC9scy1jb21wb3NhbnRzLyIsInNvdXJjZXMiOlsibGliL3BhZ2VzL2xvZ2luL2xvZ2luLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDdkMsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBQ3hELE9BQU8sRUFBQyx1QkFBdUIsRUFBQyxNQUFNLHNDQUFzQyxDQUFDO0FBQzdFLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUMzQyxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSw2Q0FBNkMsQ0FBQztBQUNwRixPQUFPLEVBQUMsOEJBQThCLEVBQUMsTUFBTSw2REFBNkQsQ0FBQztBQUMzRyxPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSx1Q0FBdUMsQ0FBQztBQUMzRSxPQUFPLEVBQUMsa0JBQWtCLEVBQUMsTUFBTSxtQ0FBbUMsQ0FBQztBQUNyRSxPQUFPLEVBQUMsc0JBQXNCLEVBQUMsTUFBTSwyQ0FBMkMsQ0FBQztBQUNqRixPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSxzQ0FBc0MsQ0FBQztBQUMxRSxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSxxQ0FBcUMsQ0FBQztBQUN4RSxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0seUJBQXlCLENBQUM7QUFHdkQ7SUFpREU7SUFDQSxDQUFDOztJQVphLCtCQUFpQixHQUFHOztRQUVoQyxxQkFBcUIsRUFBRSxvQkFBb0I7UUFDM0MsbUJBQW1CLEVBQUUsa0JBQWtCO1FBQ3ZDLHdCQUF3QixFQUFFLHVCQUF1QjtRQUNqRCxnQ0FBZ0MsRUFBRSw4QkFBOEI7UUFDaEUsdUJBQXVCLEVBQUUsc0JBQXNCO1FBQy9DLGNBQWMsRUFBRSxjQUFjO1FBQzlCLG9CQUFvQixFQUFFLG1CQUFtQjtLQUMxQyxDQUFDOztnQkEvQ0gsUUFBUSxTQUFDO29CQUNSLGVBQWUsRUFBRTt3QkFDZixtQkFBbUI7d0JBQ25CLG9CQUFvQjt3QkFDcEIsa0JBQWtCO3dCQUNsQix1QkFBdUI7d0JBQ3ZCLDhCQUE4Qjt3QkFDOUIsc0JBQXNCO3dCQUN0QixjQUFjO3FCQUNmO29CQUNELFlBQVksRUFBRTt3QkFDWixtQkFBbUI7d0JBQ25CLHVCQUF1Qjt3QkFDdkIsOEJBQThCO3dCQUM5QixvQkFBb0I7d0JBQ3BCLGtCQUFrQjt3QkFDbEIsc0JBQXNCO3dCQUN0QixjQUFjO3FCQUNmO29CQUNELE9BQU8sRUFBRTt3QkFDUCxhQUFhO3dCQUNiLHVCQUF1Qjt3QkFDdkIsV0FBVzt3QkFDWCxvQkFBb0I7cUJBQ3JCO29CQUNELE9BQU8sRUFBRTt3QkFDUCxtQkFBbUI7d0JBQ25CLHVCQUF1Qjt3QkFDdkIsOEJBQThCO3dCQUM5QixvQkFBb0I7d0JBQ3BCLGtCQUFrQjt3QkFDbEIsc0JBQXNCO3dCQUN0QixjQUFjO3FCQUNmO2lCQUNGOzs7O0lBaUJELG9CQUFDO0NBQUEsQUFuREQsSUFtREM7U0FoQlksYUFBYTs7O0lBR3hCLGdDQVNFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtOZ01vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0Jyb3dzZXJNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuaW1wb3J0IHtCcm93c2VyQW5pbWF0aW9uc01vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlci9hbmltYXRpb25zJztcbmltcG9ydCB7Rm9ybXNNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7Rm9yZ290UGFzc3dvcmRDb21wb25lbnR9IGZyb20gJy4vZm9yZ290LXBhc3N3b3JkL2ZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQnO1xuaW1wb3J0IHtGb3Jnb3RQYXNzd29yZFN1Y2Nlc3NDb21wb25lbnR9IGZyb20gJy4vZm9yZ290LXBhc3N3b3JkLXN1Y2Nlc3MvZm9yZ290LXBhc3N3b3JkLXN1Y2Nlc3MuY29tcG9uZW50JztcbmltcG9ydCB7TG9naW5Db25maWdDb21wb25lbnR9IGZyb20gJy4vbG9naW4tY29uZmlnL2xvZ2luLWNvbmZpZy5jb21wb25lbnQnO1xuaW1wb3J0IHtMb2dpbkZvcm1Db21wb25lbnR9IGZyb20gJy4vbG9naW4tZm9ybS9sb2dpbi1mb3JtLmNvbXBvbmVudCc7XG5pbXBvcnQge1Jlc2V0UGFzc3dvcmRDb21wb25lbnR9IGZyb20gJy4vcmVzZXQtcGFzc3dvcmQvcmVzZXQtcGFzc3dvcmQuY29tcG9uZW50JztcbmltcG9ydCB7THNVaUNvbXBvbmVudHNNb2R1bGV9IGZyb20gJy4uLy4uL2NvbXBvbmVudC91aS1jb21wb25lbnRzLm1vZHVsZSc7XG5pbXBvcnQge0xvZ2luTW9kZWxDb21wb25lbnR9IGZyb20gJy4vbG9naW4tbW9kZWwvbG9naW4tbW9kZWwuY29tcG9uZW50JztcbmltcG9ydCB7TG9naW5Db21wb25lbnR9IGZyb20gJy4vbG9naW4vbG9naW4uY29tcG9uZW50JztcblxuXG5ATmdNb2R1bGUoe1xuICBlbnRyeUNvbXBvbmVudHM6IFtcbiAgICBMb2dpbk1vZGVsQ29tcG9uZW50LFxuICAgIExvZ2luQ29uZmlnQ29tcG9uZW50LFxuICAgIExvZ2luRm9ybUNvbXBvbmVudCxcbiAgICBGb3Jnb3RQYXNzd29yZENvbXBvbmVudCxcbiAgICBGb3Jnb3RQYXNzd29yZFN1Y2Nlc3NDb21wb25lbnQsXG4gICAgUmVzZXRQYXNzd29yZENvbXBvbmVudCxcbiAgICBMb2dpbkNvbXBvbmVudFxuICBdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBMb2dpbk1vZGVsQ29tcG9uZW50LFxuICAgIEZvcmdvdFBhc3N3b3JkQ29tcG9uZW50LFxuICAgIEZvcmdvdFBhc3N3b3JkU3VjY2Vzc0NvbXBvbmVudCxcbiAgICBMb2dpbkNvbmZpZ0NvbXBvbmVudCxcbiAgICBMb2dpbkZvcm1Db21wb25lbnQsXG4gICAgUmVzZXRQYXNzd29yZENvbXBvbmVudCxcbiAgICBMb2dpbkNvbXBvbmVudFxuICBdLFxuICBpbXBvcnRzOiBbXG4gICAgQnJvd3Nlck1vZHVsZSxcbiAgICBCcm93c2VyQW5pbWF0aW9uc01vZHVsZSxcbiAgICBGb3Jtc01vZHVsZSxcbiAgICBMc1VpQ29tcG9uZW50c01vZHVsZVxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgTG9naW5Nb2RlbENvbXBvbmVudCxcbiAgICBGb3Jnb3RQYXNzd29yZENvbXBvbmVudCxcbiAgICBGb3Jnb3RQYXNzd29yZFN1Y2Nlc3NDb21wb25lbnQsXG4gICAgTG9naW5Db25maWdDb21wb25lbnQsXG4gICAgTG9naW5Gb3JtQ29tcG9uZW50LFxuICAgIFJlc2V0UGFzc3dvcmRDb21wb25lbnQsXG4gICAgTG9naW5Db21wb25lbnRcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBMc0xvZ2luTW9kdWxlIHtcblxuICAvLyBUaGlzIGlzIGZvciBDb21wb25lbnRzIHdpdGggY29udGVudHNcbiAgcHVibGljIHN0YXRpYyBhbmd1bGFyQ29tcG9uZW50cyA9IHtcbiAgICAvLyBwYWdlc1xuICAgICdscy1saWItbG9naW4tY29uZmlnJzogTG9naW5Db25maWdDb21wb25lbnQsXG4gICAgJ2xzLWxpYi1sb2dpbi1mb3JtJzogTG9naW5Gb3JtQ29tcG9uZW50LFxuICAgICdscy1saWItZm9yZ290LXBhc3N3b3JkJzogRm9yZ290UGFzc3dvcmRDb21wb25lbnQsXG4gICAgJ2xzLWxpYi1mb3Jnb3QtcGFzc3dvcmQtc3VjY2Vzcyc6IEZvcmdvdFBhc3N3b3JkU3VjY2Vzc0NvbXBvbmVudCxcbiAgICAnbHMtbGliLXJlc2V0LXBhc3N3b3JkJzogUmVzZXRQYXNzd29yZENvbXBvbmVudCxcbiAgICAnbHMtbGliLWxvZ2luJzogTG9naW5Db21wb25lbnQsXG4gICAgJ2xzLWxpYi1sb2dpbi1tb2RlbCc6IExvZ2luTW9kZWxDb21wb25lbnRcbiAgfTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgfVxufVxuIl19