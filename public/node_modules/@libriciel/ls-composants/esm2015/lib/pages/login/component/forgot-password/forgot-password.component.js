/**
 * @fileoverview added by tsickle
 * Generated from: lib/pages/login/component/forgot-password/forgot-password.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { LoginPageModelClass } from '../login-model/LoginPageModel.class';
import { DomSanitizer } from '@angular/platform-browser';
import { CommonIcons } from '../../../../icons/common-icons';
import { CommonMessages } from '../../../../i18n/common-messages';
import { LoginMessages } from '../../i18n/login-messages';
export class ForgotPasswordComponent extends LoginPageModelClass {
    /**
     * @param {?} _DomSanitizationService
     */
    constructor(_DomSanitizationService) {
        super(_DomSanitizationService);
        this._DomSanitizationService = _DomSanitizationService;
        this.commonIcons = CommonIcons;
        this.commonMessages = CommonMessages;
        this.loginMessages = LoginMessages;
        this.oneFieldForgot = false;
        this.usernameormailInputName = 'usernameormail';
        this.usernameInputName = 'username';
        this.emailInputName = 'email';
        this.backToLogin = new EventEmitter();
    }
    /**
     * @return {?}
     */
    backToLoginPage() {
        this.backToLogin.emit();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    preventFormSubmit(event) {
        super.preventFormSubmit(event);
    }
    /**
     * @return {?}
     */
    submitForm() {
        this.submit.emit({
            username: this.username,
            email: this.email,
            usernameormail: this.usernameormail
        });
    }
}
ForgotPasswordComponent.decorators = [
    { type: Component, args: [{
                selector: 'ls-forgot-password',
                template: "<ls-login-model [logo]=\"logo\" [visualConfiguration]=\"_visualConfiguration\">\n  <section id=\"forgot-page\">\n    <h1 class=\"page-title\">Mot de passe oubli\u00E9 ?</h1>\n    <form [action]=\"formAction\" id=\"ls-forgot-form\" method=\"post\" ngNoForm (submit)=\"preventFormSubmit($event)\">\n\n      <div *ngIf=\"!oneFieldForgot\" class=\"usernameormail\">\n        <label [attr.for]=\"usernameInputName\">\n          Identifiant\n        </label>\n        <input [attr.name]=\"usernameInputName\" [attr.id]=\"usernameInputName\" [(ngModel)]=\"username\" class=\"form-control\"\n               placeholder=\"Mon identifiant\"\n               type=\"text\" required>\n      </div>\n      <div *ngIf=\"!oneFieldForgot\" class=\"usernameormail\">\n        <label [attr.for]=\"emailInputName\">\n          Adresse mail\n        </label>\n        <input [attr.id]=\"emailInputName\" [attr.name]=\"emailInputName\" [(ngModel)]=\"email\" class=\"form-control\"\n               placeholder=\"adresse@mail.com\" type=\"text\" required>\n      </div>\n\n\n      <div *ngIf=\"oneFieldForgot\" class=\"usernameormail\">\n        <label [attr.for]=\"usernameormailInputName\">\n          Saisissez votre nom d'utilisateur ou votre adresse mail\n        </label>\n        <input [attr.name]=\"usernameormailInputName\" [attr.id]=\"usernameormailInputName\" [(ngModel)]=\"usernameormail\"\n               class=\"form-control\"\n               placeholder=\"Nom d'utilisateur ou adresse mail\"\n               type=\"text\" required>\n      </div>\n\n      <div class=\"alert alert-info\">\n        <div class=\"fa fa-lg fa-info-circle\"></div>\n        <div>\n          Si vos informations sont correctes, un e-mail vous sera envoy\u00E9.<br>\n          Vous pourrez ainsi cr\u00E9er un nouveau mot de passe.\n        </div>\n      </div>\n\n      <ng-content></ng-content>\n\n      <div class=\"float-left\">\n        <ls-button-go-back (click)=\"backToLoginPage()\" [title]=\"loginMessages.BACK_TO_CONNEXION_PAGE\"></ls-button-go-back>\n      </div>\n\n      <div class=\"float-right\">\n        <ls-button (click)=\"submitForm()\" [icon]=\"commonIcons.SUBMIT_ICON\"\n                   [processing]=\"submitted\"\n                   [title]=\"commonMessages.SUBMIT\"\n                   form=\"ls-forgot-form\"\n                   type=\"submit\">\n        </ls-button>\n      </div>\n    </form>\n  </section>\n</ls-login-model>\n",
                styles: [".alert{-ms-flex-align:center;-webkit-box-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex}.alert .fa{width:2rem}#ls-forgot-form>*{margin-bottom:1rem}span.btn{cursor:pointer}.page-title{font-size:1rem;font-weight:400;padding-bottom:1.5rem;padding-top:3rem;text-align:center}"]
            }] }
];
/** @nocollapse */
ForgotPasswordComponent.ctorParameters = () => [
    { type: DomSanitizer }
];
ForgotPasswordComponent.propDecorators = {
    oneFieldForgot: [{ type: Input }],
    usernameormailInputName: [{ type: Input }],
    usernameInputName: [{ type: Input }],
    emailInputName: [{ type: Input }],
    backToLogin: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    ForgotPasswordComponent.prototype.username;
    /** @type {?} */
    ForgotPasswordComponent.prototype.email;
    /** @type {?} */
    ForgotPasswordComponent.prototype.usernameormail;
    /** @type {?} */
    ForgotPasswordComponent.prototype.commonIcons;
    /** @type {?} */
    ForgotPasswordComponent.prototype.commonMessages;
    /** @type {?} */
    ForgotPasswordComponent.prototype.loginMessages;
    /** @type {?} */
    ForgotPasswordComponent.prototype.oneFieldForgot;
    /** @type {?} */
    ForgotPasswordComponent.prototype.usernameormailInputName;
    /** @type {?} */
    ForgotPasswordComponent.prototype.usernameInputName;
    /** @type {?} */
    ForgotPasswordComponent.prototype.emailInputName;
    /** @type {?} */
    ForgotPasswordComponent.prototype.backToLogin;
    /** @type {?} */
    ForgotPasswordComponent.prototype._DomSanitizationService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9yZ290LXBhc3N3b3JkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIvYnVpbGRzL291dGlscy9jaGFydGVncmFwaGlxdWUvbGlicmFpcmllLWFuZ3VsYXIvbGliL3NyYy8iLCJzb3VyY2VzIjpbImxpYi9wYWdlcy9sb2dpbi9jb21wb25lbnQvZm9yZ290LXBhc3N3b3JkL2ZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDN0QsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQU8xRCxNQUFNLE9BQU8sdUJBQXdCLFNBQVEsbUJBQW1COzs7O0lBa0I5RCxZQUFtQix1QkFBcUM7UUFDdEQsS0FBSyxDQUFDLHVCQUF1QixDQUFDLENBQUM7UUFEZCw0QkFBdUIsR0FBdkIsdUJBQXVCLENBQWM7UUFaeEQsZ0JBQVcsR0FBRyxXQUFXLENBQUM7UUFDMUIsbUJBQWMsR0FBRyxjQUFjLENBQUM7UUFDaEMsa0JBQWEsR0FBRyxhQUFhLENBQUM7UUFFckIsbUJBQWMsR0FBRyxLQUFLLENBQUM7UUFDdkIsNEJBQXVCLEdBQUcsZ0JBQWdCLENBQUM7UUFDM0Msc0JBQWlCLEdBQUcsVUFBVSxDQUFDO1FBQy9CLG1CQUFjLEdBQUcsT0FBTyxDQUFDO1FBR2xDLGdCQUFXLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7SUFJcEQsQ0FBQzs7OztJQUVELGVBQWU7UUFDYixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzFCLENBQUM7Ozs7O0lBRUQsaUJBQWlCLENBQUMsS0FBSztRQUNyQixLQUFLLENBQUMsaUJBQWlCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDakMsQ0FBQzs7OztJQUVELFVBQVU7UUFDUixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQztZQUNmLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUTtZQUN2QixLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7WUFDakIsY0FBYyxFQUFFLElBQUksQ0FBQyxjQUFjO1NBQ3BDLENBQUMsQ0FBQztJQUNMLENBQUM7OztZQXpDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtnQkFDOUIscTRFQUErQzs7YUFFaEQ7Ozs7WUFUUSxZQUFZOzs7NkJBb0JsQixLQUFLO3NDQUNMLEtBQUs7Z0NBQ0wsS0FBSzs2QkFDTCxLQUFLOzBCQUVMLE1BQU07Ozs7SUFiUCwyQ0FBaUI7O0lBQ2pCLHdDQUFjOztJQUNkLGlEQUF1Qjs7SUFFdkIsOENBQTBCOztJQUMxQixpREFBZ0M7O0lBQ2hDLGdEQUE4Qjs7SUFFOUIsaURBQWdDOztJQUNoQywwREFBb0Q7O0lBQ3BELG9EQUF3Qzs7SUFDeEMsaURBQWtDOztJQUVsQyw4Q0FDb0Q7O0lBRXhDLDBEQUE0QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMb2dpblBhZ2VNb2RlbENsYXNzIH0gZnJvbSAnLi4vbG9naW4tbW9kZWwvTG9naW5QYWdlTW9kZWwuY2xhc3MnO1xuaW1wb3J0IHsgRG9tU2FuaXRpemVyIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5pbXBvcnQgeyBDb21tb25JY29ucyB9IGZyb20gJy4uLy4uLy4uLy4uL2ljb25zL2NvbW1vbi1pY29ucyc7XG5pbXBvcnQgeyBDb21tb25NZXNzYWdlcyB9IGZyb20gJy4uLy4uLy4uLy4uL2kxOG4vY29tbW9uLW1lc3NhZ2VzJztcbmltcG9ydCB7IExvZ2luTWVzc2FnZXMgfSBmcm9tICcuLi8uLi9pMThuL2xvZ2luLW1lc3NhZ2VzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbHMtZm9yZ290LXBhc3N3b3JkJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2ZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2ZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIEZvcmdvdFBhc3N3b3JkQ29tcG9uZW50IGV4dGVuZHMgTG9naW5QYWdlTW9kZWxDbGFzcyB7XG5cbiAgdXNlcm5hbWU6IHN0cmluZztcbiAgZW1haWw6IHN0cmluZztcbiAgdXNlcm5hbWVvcm1haWw6IHN0cmluZztcblxuICBjb21tb25JY29ucyA9IENvbW1vbkljb25zO1xuICBjb21tb25NZXNzYWdlcyA9IENvbW1vbk1lc3NhZ2VzO1xuICBsb2dpbk1lc3NhZ2VzID0gTG9naW5NZXNzYWdlcztcblxuICBASW5wdXQoKSBvbmVGaWVsZEZvcmdvdCA9IGZhbHNlO1xuICBASW5wdXQoKSB1c2VybmFtZW9ybWFpbElucHV0TmFtZSA9ICd1c2VybmFtZW9ybWFpbCc7XG4gIEBJbnB1dCgpIHVzZXJuYW1lSW5wdXROYW1lID0gJ3VzZXJuYW1lJztcbiAgQElucHV0KCkgZW1haWxJbnB1dE5hbWUgPSAnZW1haWwnO1xuXG4gIEBPdXRwdXQoKVxuICBiYWNrVG9Mb2dpbjogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgY29uc3RydWN0b3IocHVibGljIF9Eb21TYW5pdGl6YXRpb25TZXJ2aWNlOiBEb21TYW5pdGl6ZXIpIHtcbiAgICBzdXBlcihfRG9tU2FuaXRpemF0aW9uU2VydmljZSk7XG4gIH1cblxuICBiYWNrVG9Mb2dpblBhZ2UoKSB7XG4gICAgdGhpcy5iYWNrVG9Mb2dpbi5lbWl0KCk7XG4gIH1cblxuICBwcmV2ZW50Rm9ybVN1Ym1pdChldmVudCkge1xuICAgIHN1cGVyLnByZXZlbnRGb3JtU3VibWl0KGV2ZW50KTtcbiAgfVxuXG4gIHN1Ym1pdEZvcm0oKSB7XG4gICAgdGhpcy5zdWJtaXQuZW1pdCh7XG4gICAgICB1c2VybmFtZTogdGhpcy51c2VybmFtZSxcbiAgICAgIGVtYWlsOiB0aGlzLmVtYWlsLFxuICAgICAgdXNlcm5hbWVvcm1haWw6IHRoaXMudXNlcm5hbWVvcm1haWxcbiAgICB9KTtcbiAgfVxufVxuIl19