/**
 * @fileoverview added by tsickle
 * Generated from: workflows/ls-workflow-model-viewer/ls-workflow-model-viewer.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ContentChild, Input } from '@angular/core';
import { WorkflowModel } from '../../shared/model/workflows/workflow-model';
import { StepState } from '../../shared/model/workflows/step-state';
export class LsWorkflowModelViewerComponent {
    // messages = CircuitDisplayMessages;
    constructor() {
        this.isInstance = false;
        this.isOver = false;
        this.isRejected = false;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (!this.circuit) {
            console.error('Missing input circuit data');
            this.circuit = new WorkflowModel();
        }
        if (!this.messages) {
            throw new Error('Missing localised messages for LsWorkflowViewerComponent!');
        }
        if (!this.getStepIconClassFct) {
            throw new Error('Missing getStepIconClassFct for LsWorkflowViewerComponent!');
        }
        if (!this.getStepTooltipFct) {
            throw new Error('Missing getStepTooltipFct for LsWorkflowViewerComponent!');
        }
    }
    /**
     * @return {?}
     */
    ngOnChanges() {
        console.debug('LsWorkflowViewerComponent::ngOnChanges, ', this);
        if (this.isInstance) {
            console.debug('LsWorkflowViewerComponent::ngOnChanges - circuit is an instance ');
            /** @type {?} */
            const workflow = (/** @type {?} */ (this.circuit));
            this.activeStep = workflow.currentStepIdx;
            this.isOver = workflow.isOver;
            this.isRejected = workflow.rejected;
        }
    }
    /**
     * @param {?} step
     * @return {?}
     */
    getStepIconClass(step) {
        return this.getStepIconClassFct(step);
    }
    /**
     * @param {?} step
     * @return {?}
     */
    getStepTooltip(step) {
        return this.getStepTooltipFct(step);
    }
    /**
     * @param {?} stepIdx
     * @return {?}
     */
    isActiveStep(stepIdx) {
        return !this.isRejected && !this.isOver && stepIdx === this.activeStep;
    }
    /**
     * @param {?} step
     * @return {?}
     */
    isPassed(step) {
        return this.isInstance && ((step.state === StepState.VALIDATED) || (step.state === StepState.REJECTED));
    }
    /**
     * @param {?} step
     * @param {?} validator
     * @return {?}
     */
    isActualValidator(step, validator) {
        return this.isInstance && (step.validatedBy.some((/**
         * @param {?} elem
         * @return {?}
         */
        (elem) => elem.id === validator.id)));
    }
    /**
     * @return {?}
     */
    isCircuitOver() {
        return this.isOver && !this.isRejected;
    }
    /**
     * @return {?}
     */
    getCircuitEndAdditionalClasses() {
        if (this.getCircuitEndAdditionalClassesFct) {
            return this.getCircuitEndAdditionalClassesFct();
        }
        return '';
    }
    /**
     * @param {?} step
     * @param {?} validator
     * @return {?}
     */
    getValidatorClasses(step, validator) {
        if (this.isActualValidator(step, validator)) {
            if (step.state === StepState.REJECTED) {
                return this.messages.REJECTED_BY_ICON_CLASS;
            }
            else {
                return this.messages.VALIDATED_BY_ICON_CLASS;
            }
        }
        return '';
    }
}
LsWorkflowModelViewerComponent.decorators = [
    { type: Component, args: [{
                selector: 'ls-workflow-model-viewer',
                template: "<div class=\"ls-workflow-display\">\n  <div class=\"ls-workflow-canevas\">\n    <div class=\"circuit-start\">\n      <div class=\"ls-workflow-endpoint-content\">\n        <span class=\"ls-workflow-endpoint-icn fa fa fa-2x\" [ngClass]=\"messages.CIRCUIT_START_ICON\"></span>\n        <span class=\"ls-step-bounds-txt\" [innerText]=\"messages.FIRST_STEP_TXT\"></span>\n      </div>\n    </div>\n    <div class=\"steps-container\">\n      <div *ngFor=\"let step of circuit.steps; index as i\" >\n        <div class=\"ls-workflow-display-step-container\">\n          <div  class=\"ls-workflow-step\" [ngClass]=\"isActiveStep(i) ? 'wa-active-step wa-white-icn' : ''\">\n            <div class=\"ls-step-top-line\">\n              <div class=\"step-number\">{{i + 1}}.</div>\n              <div class=\"step-name\">{{step.name}}</div>\n              <div [ngClass]=\"getStepIconClass(step)\" class=\"step-icn fa\" ngbTooltip=\"{{getStepTooltip(step)}}\"></div>\n            </div>\n            <div class=\"ls-display-step-separator\"></div>\n            <div class=\"ls-step-validator-list\" [ngClass]=\"isInstance ? 'wa-circuit-instance' : ''\">\n              <ng-container *ngIf=\"isPassed(step)\">\n                <div *ngFor=\"let validator of step.validators\">\n                  <ng-template\n                    [ngTemplateOutlet]=\"passedStepTemplateRef\"\n                    [ngTemplateOutletContext]=\"{step: step, validator: validator}\">\n                  </ng-template>\n                </div>\n              </ng-container>\n              <ng-container *ngIf=\" ! isPassed(step)\">\n                <div *ngFor=\"let validator of step.validators\">\n                  <ng-template\n                    [ngTemplateOutlet]=\"pendingStepTemplateRef\"\n                    [ngTemplateOutletContext]=\"{step: step, validator: validator}\">\n                  </ng-template>\n                </div>\n              </ng-container>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"ls-workflow-end\">\n      <div class=\"ls-workflow-endpoint-content\" [ngClass]=\"getCircuitEndAdditionalClasses()\">\n        <span class=\"ls-workflow-endpoint-icn fa fa-2x\" [ngClass]=\"messages.CIRCUIT_END_ICON\"></span>\n        <span class=\"ls-step-bounds-txt\" [innerText]=\"messages.LAST_STEP_TXT\"></span>\n      </div>\n    </div>\n  </div>\n</div>\n",
                styles: ["@charset \"UTF-8\";body{background-color:var(--ls-grey-50)}.active-btn{color:#42a1e8}.ls-workflow-canevas{-ms-flex-align:center;-ms-flex-direction:column;-ms-flex-pack:start;-ms-grid-column:1;-webkit-box-align:center;-webkit-box-direction:normal;-webkit-box-orient:vertical;-webkit-box-pack:start;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;flex-direction:column;grid-column:1;height:100%;justify-content:flex-start}.ls-workflow-step{-webkit-box-shadow:0 0 .25rem rgba(0,0,0,.15);background-color:#fff;border:none;box-shadow:0 0 .25rem rgba(0,0,0,.15);min-height:6rem;width:var(--ls-workflow-step-width,20rem)}.ls-workflow-step .ls-step-top-line{-ms-flex-align:center;-ms-flex-direction:row;-ms-flex-pack:justify;-webkit-box-align:center;-webkit-box-direction:normal;-webkit-box-orient:horizontal;-webkit-box-pack:justify;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;flex-direction:row;font-weight:700;justify-content:space-between;padding:.5rem}.ls-workflow-step .ls-display-step-separator{border-bottom:1px solid #d3d3d3;width:100%}.ls-workflow-step .ls-step-validator-list{color:#5b5b5b;padding:.5rem .5rem .5rem 1.5rem}.ls-workflow-step.selected{-webkit-box-shadow:0 .5rem .25rem rgba(0,0,0,.3);box-shadow:0 .5rem .25rem rgba(0,0,0,.3)}.ls-workflow-step .step-icn{height:1.7rem;width:1.7rem}.ls-workflow-endpoint-content{margin:auto;text-align:center}.ls-workflow-endpoint-content .ls-step-bounds-txt{color:var(--primary);font-weight:700}.ls-workflow-endpoint-content .ls-workflow-endpoint-icn{color:var(--primary)}.ls-workflow-endpoint-content.not-active .ls-step-bounds-txt,.ls-workflow-endpoint-content.not-active .ls-workflow-endpoint-icn{color:#5b5b5b}.ls-workflow-endpoint-content .ls-step-validator-list{text-align:left}.ls-actual-validator{font-weight:700}.ls-actual-validator:before{color:var(--primary);content:\"\uF00C\";font-family:FontAwesome;font-size:1em;left:.5em;position:absolute}.ls-rejector{font-weight:700}.ls-rejector:before{color:var(--danger);content:\"\uF00D\";font-family:FontAwesome;font-size:1em;left:.5em;position:absolute}.wa-comment-icon{color:var(--primary);font-size:1em;margin-right:.5em}.ls-workflow-display .ls-workflow-step{margin:1rem auto;padding-left:0;padding-right:0}.ls-workflow-display .ls-workflow-step .ls-step-validator-list{padding:1rem 1rem 1rem .5rem}.ls-workflow-display .ls-workflow-step .ls-step-validator-list.ls-workflow-instance{padding-left:2rem}.ls-workflow-display .ls-workflow-endpoint-content{-ms-flex-direction:row;-webkit-box-direction:normal;-webkit-box-orient:horizontal;display:-webkit-box;display:-ms-flexbox;display:flex;flex-direction:row}.ls-workflow-display .ls-workflow-endpoint-content .ls-step-bounds-txt{margin-left:.5rem}.ls-workflow-display .ls-step-top-line{-ms-flex-pack:start;-webkit-box-pack:start;justify-content:flex-start;padding-left:.5rem}.ls-workflow-display .ls-step-top-line .step-name{-ms-flex:1;-webkit-box-flex:1;flex:1;margin-left:.7rem}.ls-workflow-display .ls-display-step-separator{border-bottom:1px solid #d3d3d3;width:100%}.ls-workflow-display .ls-workflow-display-step-container{position:relative}.ls-workflow-display .ls-active-step .ls-step-top-line{background-color:var(--primary);color:#fff;margin:0}.ls-workflow-display .ls-active-step .ls-step-top-line .step-icn{color:#fff}.ls-workflow-display .ls-active-step:before{color:var(--primary);content:\"\uF061\";font-family:FontAwesome;font-size:2em;left:-1em;position:absolute}.ls-workflow-display .ls-active-step.end-step:before{font-size:1.2em}.ls-workflow-end{position:relative}"]
            }] }
];
/** @nocollapse */
LsWorkflowModelViewerComponent.ctorParameters = () => [];
LsWorkflowModelViewerComponent.propDecorators = {
    passedStepTemplateRef: [{ type: ContentChild, args: ['passedStepContent',] }],
    pendingStepTemplateRef: [{ type: ContentChild, args: ['pendingStepContent',] }],
    circuit: [{ type: Input }],
    activeStep: [{ type: Input }],
    messages: [{ type: Input }],
    getStepIconClassFct: [{ type: Input }],
    getStepTooltipFct: [{ type: Input }],
    getCircuitEndAdditionalClassesFct: [{ type: Input }],
    isInstance: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    LsWorkflowModelViewerComponent.prototype.passedStepTemplateRef;
    /** @type {?} */
    LsWorkflowModelViewerComponent.prototype.pendingStepTemplateRef;
    /** @type {?} */
    LsWorkflowModelViewerComponent.prototype.circuit;
    /** @type {?} */
    LsWorkflowModelViewerComponent.prototype.activeStep;
    /** @type {?} */
    LsWorkflowModelViewerComponent.prototype.messages;
    /** @type {?} */
    LsWorkflowModelViewerComponent.prototype.getStepIconClassFct;
    /** @type {?} */
    LsWorkflowModelViewerComponent.prototype.getStepTooltipFct;
    /** @type {?} */
    LsWorkflowModelViewerComponent.prototype.getCircuitEndAdditionalClassesFct;
    /** @type {?} */
    LsWorkflowModelViewerComponent.prototype.isInstance;
    /** @type {?} */
    LsWorkflowModelViewerComponent.prototype.isOver;
    /** @type {?} */
    LsWorkflowModelViewerComponent.prototype.isRejected;
}
//# sourceMappingURL=data:application/json;base64,