# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  version: '%env(VERSION)%'
  document_files_directory: '%env(DOCUMENT_FILES_DIRECTORY)%'
  document_zip_directory: '%env(DOCUMENT_ZIP_DIRECTORY)%'
  document_full_pdf_directory: '%env(DOCUMENT_FULL_PDF_DIRECTORY)%'
  token_directory: '%env(TOKEN_DIRECTORY)%'
  email_from: '%env(EMAIL_FROM)%'
  email_alias: '%env(EMAIL_ALIAS)%'

  max_batch_email: 50

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Sidebar\Listener\SidebarListener:
      tags:
        - {name: kernel.event_listener, event: kernel.controller, method: onKernelRequest}

    Mailjet\Client:
      arguments:
        $key: '%env(MAILJET_KEY)%'
        $secret: '%env(MAILJET_SECRET)%'
        $call: true
        $settings: { 'version': 'v3.1' }

    App\Service\Email\EmailServiceInterface:
      factory: ['@App\Service\Email\EmailServiceFactory', 'chooseImplementation']

    Libriciel\LshorodatageApiWrapper\LsHorodatage:
      calls:
        - setUrl: ['http://lshorodatage:3000']


    Libriciel\LshorodatageApiWrapper\LshorodatageInterface:
      factory: ['@App\Service\Timestamp\LshorodatageFactory', 'chooseImplementation']
