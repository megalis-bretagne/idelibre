/**
 * @fileoverview added by tsickle
 * Generated from: lib/pages/login/login.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { FormsModule } from '@angular/forms';
import { ForgotPasswordComponent } from './forgot-password/forgot-password.component';
import { ForgotPasswordSuccessComponent } from './forgot-password-success/forgot-password-success.component';
import { LoginConfigComponent } from './login-config/login-config.component';
import { LoginFormComponent } from './login-form/login-form.component';
import { ResetPasswordComponent } from './reset-password/reset-password.component';
import { LsUiComponentsModule } from '../../component/ui-components.module';
import { LoginModelComponent } from './login-model/login-model.component';
import { LoginComponent } from './login/login.component';
export class LsLoginModule {
    constructor() {
    }
}
// This is for Components with contents
LsLoginModule.angularComponents = {
    // pages
    'ls-lib-login-config': LoginConfigComponent,
    'ls-lib-login-form': LoginFormComponent,
    'ls-lib-forgot-password': ForgotPasswordComponent,
    'ls-lib-forgot-password-success': ForgotPasswordSuccessComponent,
    'ls-lib-reset-password': ResetPasswordComponent,
    'ls-lib-login': LoginComponent,
    'ls-lib-login-model': LoginModelComponent
};
LsLoginModule.decorators = [
    { type: NgModule, args: [{
                entryComponents: [
                    LoginModelComponent,
                    LoginConfigComponent,
                    LoginFormComponent,
                    ForgotPasswordComponent,
                    ForgotPasswordSuccessComponent,
                    ResetPasswordComponent,
                    LoginComponent
                ],
                declarations: [
                    LoginModelComponent,
                    ForgotPasswordComponent,
                    ForgotPasswordSuccessComponent,
                    LoginConfigComponent,
                    LoginFormComponent,
                    ResetPasswordComponent,
                    LoginComponent
                ],
                imports: [
                    BrowserModule,
                    BrowserAnimationsModule,
                    FormsModule,
                    LsUiComponentsModule
                ],
                exports: [
                    LoginModelComponent,
                    ForgotPasswordComponent,
                    ForgotPasswordSuccessComponent,
                    LoginConfigComponent,
                    LoginFormComponent,
                    ResetPasswordComponent,
                    LoginComponent
                ]
            },] }
];
/** @nocollapse */
LsLoginModule.ctorParameters = () => [];
if (false) {
    /** @type {?} */
    LsLoginModule.angularComponents;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Ii9idWlsZHMvb3V0aWxzL2NoYXJ0ZWdyYXBoaXF1ZS9saWJyYWlyaWUtYW5ndWxhci9saWIvc3JjLyIsInNvdXJjZXMiOlsibGliL3BhZ2VzL2xvZ2luL2xvZ2luLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDdkMsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBQ3hELE9BQU8sRUFBQyx1QkFBdUIsRUFBQyxNQUFNLHNDQUFzQyxDQUFDO0FBQzdFLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUMzQyxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSw2Q0FBNkMsQ0FBQztBQUNwRixPQUFPLEVBQUMsOEJBQThCLEVBQUMsTUFBTSw2REFBNkQsQ0FBQztBQUMzRyxPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSx1Q0FBdUMsQ0FBQztBQUMzRSxPQUFPLEVBQUMsa0JBQWtCLEVBQUMsTUFBTSxtQ0FBbUMsQ0FBQztBQUNyRSxPQUFPLEVBQUMsc0JBQXNCLEVBQUMsTUFBTSwyQ0FBMkMsQ0FBQztBQUNqRixPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSxzQ0FBc0MsQ0FBQztBQUMxRSxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSxxQ0FBcUMsQ0FBQztBQUN4RSxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0seUJBQXlCLENBQUM7QUFzQ3ZELE1BQU0sT0FBTyxhQUFhO0lBY3hCO0lBQ0EsQ0FBQzs7O0FBWmEsK0JBQWlCLEdBQUc7O0lBRWhDLHFCQUFxQixFQUFFLG9CQUFvQjtJQUMzQyxtQkFBbUIsRUFBRSxrQkFBa0I7SUFDdkMsd0JBQXdCLEVBQUUsdUJBQXVCO0lBQ2pELGdDQUFnQyxFQUFFLDhCQUE4QjtJQUNoRSx1QkFBdUIsRUFBRSxzQkFBc0I7SUFDL0MsY0FBYyxFQUFFLGNBQWM7SUFDOUIsb0JBQW9CLEVBQUUsbUJBQW1CO0NBQzFDLENBQUM7O1lBL0NILFFBQVEsU0FBQztnQkFDUixlQUFlLEVBQUU7b0JBQ2YsbUJBQW1CO29CQUNuQixvQkFBb0I7b0JBQ3BCLGtCQUFrQjtvQkFDbEIsdUJBQXVCO29CQUN2Qiw4QkFBOEI7b0JBQzlCLHNCQUFzQjtvQkFDdEIsY0FBYztpQkFDZjtnQkFDRCxZQUFZLEVBQUU7b0JBQ1osbUJBQW1CO29CQUNuQix1QkFBdUI7b0JBQ3ZCLDhCQUE4QjtvQkFDOUIsb0JBQW9CO29CQUNwQixrQkFBa0I7b0JBQ2xCLHNCQUFzQjtvQkFDdEIsY0FBYztpQkFDZjtnQkFDRCxPQUFPLEVBQUU7b0JBQ1AsYUFBYTtvQkFDYix1QkFBdUI7b0JBQ3ZCLFdBQVc7b0JBQ1gsb0JBQW9CO2lCQUNyQjtnQkFDRCxPQUFPLEVBQUU7b0JBQ1AsbUJBQW1CO29CQUNuQix1QkFBdUI7b0JBQ3ZCLDhCQUE4QjtvQkFDOUIsb0JBQW9CO29CQUNwQixrQkFBa0I7b0JBQ2xCLHNCQUFzQjtvQkFDdEIsY0FBYztpQkFDZjthQUNGOzs7Ozs7SUFJQyxnQ0FTRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TmdNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtCcm93c2VyTW9kdWxlfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcbmltcG9ydCB7QnJvd3NlckFuaW1hdGlvbnNNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXIvYW5pbWF0aW9ucyc7XG5pbXBvcnQge0Zvcm1zTW9kdWxlfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQge0ZvcmdvdFBhc3N3b3JkQ29tcG9uZW50fSBmcm9tICcuL2ZvcmdvdC1wYXNzd29yZC9mb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50JztcbmltcG9ydCB7Rm9yZ290UGFzc3dvcmRTdWNjZXNzQ29tcG9uZW50fSBmcm9tICcuL2ZvcmdvdC1wYXNzd29yZC1zdWNjZXNzL2ZvcmdvdC1wYXNzd29yZC1zdWNjZXNzLmNvbXBvbmVudCc7XG5pbXBvcnQge0xvZ2luQ29uZmlnQ29tcG9uZW50fSBmcm9tICcuL2xvZ2luLWNvbmZpZy9sb2dpbi1jb25maWcuY29tcG9uZW50JztcbmltcG9ydCB7TG9naW5Gb3JtQ29tcG9uZW50fSBmcm9tICcuL2xvZ2luLWZvcm0vbG9naW4tZm9ybS5jb21wb25lbnQnO1xuaW1wb3J0IHtSZXNldFBhc3N3b3JkQ29tcG9uZW50fSBmcm9tICcuL3Jlc2V0LXBhc3N3b3JkL3Jlc2V0LXBhc3N3b3JkLmNvbXBvbmVudCc7XG5pbXBvcnQge0xzVWlDb21wb25lbnRzTW9kdWxlfSBmcm9tICcuLi8uLi9jb21wb25lbnQvdWktY29tcG9uZW50cy5tb2R1bGUnO1xuaW1wb3J0IHtMb2dpbk1vZGVsQ29tcG9uZW50fSBmcm9tICcuL2xvZ2luLW1vZGVsL2xvZ2luLW1vZGVsLmNvbXBvbmVudCc7XG5pbXBvcnQge0xvZ2luQ29tcG9uZW50fSBmcm9tICcuL2xvZ2luL2xvZ2luLmNvbXBvbmVudCc7XG5cblxuQE5nTW9kdWxlKHtcbiAgZW50cnlDb21wb25lbnRzOiBbXG4gICAgTG9naW5Nb2RlbENvbXBvbmVudCxcbiAgICBMb2dpbkNvbmZpZ0NvbXBvbmVudCxcbiAgICBMb2dpbkZvcm1Db21wb25lbnQsXG4gICAgRm9yZ290UGFzc3dvcmRDb21wb25lbnQsXG4gICAgRm9yZ290UGFzc3dvcmRTdWNjZXNzQ29tcG9uZW50LFxuICAgIFJlc2V0UGFzc3dvcmRDb21wb25lbnQsXG4gICAgTG9naW5Db21wb25lbnRcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgTG9naW5Nb2RlbENvbXBvbmVudCxcbiAgICBGb3Jnb3RQYXNzd29yZENvbXBvbmVudCxcbiAgICBGb3Jnb3RQYXNzd29yZFN1Y2Nlc3NDb21wb25lbnQsXG4gICAgTG9naW5Db25maWdDb21wb25lbnQsXG4gICAgTG9naW5Gb3JtQ29tcG9uZW50LFxuICAgIFJlc2V0UGFzc3dvcmRDb21wb25lbnQsXG4gICAgTG9naW5Db21wb25lbnRcbiAgXSxcbiAgaW1wb3J0czogW1xuICAgIEJyb3dzZXJNb2R1bGUsXG4gICAgQnJvd3NlckFuaW1hdGlvbnNNb2R1bGUsXG4gICAgRm9ybXNNb2R1bGUsXG4gICAgTHNVaUNvbXBvbmVudHNNb2R1bGVcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIExvZ2luTW9kZWxDb21wb25lbnQsXG4gICAgRm9yZ290UGFzc3dvcmRDb21wb25lbnQsXG4gICAgRm9yZ290UGFzc3dvcmRTdWNjZXNzQ29tcG9uZW50LFxuICAgIExvZ2luQ29uZmlnQ29tcG9uZW50LFxuICAgIExvZ2luRm9ybUNvbXBvbmVudCxcbiAgICBSZXNldFBhc3N3b3JkQ29tcG9uZW50LFxuICAgIExvZ2luQ29tcG9uZW50XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgTHNMb2dpbk1vZHVsZSB7XG5cbiAgLy8gVGhpcyBpcyBmb3IgQ29tcG9uZW50cyB3aXRoIGNvbnRlbnRzXG4gIHB1YmxpYyBzdGF0aWMgYW5ndWxhckNvbXBvbmVudHMgPSB7XG4gICAgLy8gcGFnZXNcbiAgICAnbHMtbGliLWxvZ2luLWNvbmZpZyc6IExvZ2luQ29uZmlnQ29tcG9uZW50LFxuICAgICdscy1saWItbG9naW4tZm9ybSc6IExvZ2luRm9ybUNvbXBvbmVudCxcbiAgICAnbHMtbGliLWZvcmdvdC1wYXNzd29yZCc6IEZvcmdvdFBhc3N3b3JkQ29tcG9uZW50LFxuICAgICdscy1saWItZm9yZ290LXBhc3N3b3JkLXN1Y2Nlc3MnOiBGb3Jnb3RQYXNzd29yZFN1Y2Nlc3NDb21wb25lbnQsXG4gICAgJ2xzLWxpYi1yZXNldC1wYXNzd29yZCc6IFJlc2V0UGFzc3dvcmRDb21wb25lbnQsXG4gICAgJ2xzLWxpYi1sb2dpbic6IExvZ2luQ29tcG9uZW50LFxuICAgICdscy1saWItbG9naW4tbW9kZWwnOiBMb2dpbk1vZGVsQ29tcG9uZW50XG4gIH07XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gIH1cbn1cbiJdfQ==