{% extends 'base.html.twig' %}
{% import 'macro/_forms.html.twig' as macro %}

{% block stylesheets %}
    <link rel="stylesheet" , href="{{ asset('assets/inputFile.css') }}">
{% endblock %}


{% block body %}
    <div class="col-10 offset-1">
        {{ apy_breadcrumb_trail_render(breadcrumb) }}
    </div>

    <div class="mt-3 col-10 offset-1">
        <h1>Gerer les projets</h1>

        <div class="mt-4">
            {{ macro.backButton('sitting_index') }}
        </div>


    </div>


    <div class="col-10 offset-1 mt-4" id="app">


        <label class="custom-file-upload btn btn-primary" title="Ajouter des projets">
            <input type="file" accept=".pdf,.PDF" multiple @change="addProject($event)">
            <span class="fa fa-folder-open"></span> Ajouter des projets
        </label>

        <div class="mt-4"></div>
        <draggable v-model="projects">

            <div v-for="(project, index) in projects">
                <div class="alert alert-secondary">
                    {# firstLine #}
                    <div class="row">
                        <div class="col-1">
                            <span class="badge badge-primary" style="font-size: 1.5em">${index + 1}</span>
                        </div>

                        <div class="col-5">
                            <textarea v-model="project.name" class="form-control"> </textarea>
                        </div>

                        <div class="col-5">
                            <b>${project.file.name}</b>
                        </div>

                        <div class="col-1">
                            <button class="btn btn-outline-danger borderless float-right"
                                    v-on:click="removeProject(index)">
                                <span class="fa fa-trash-alt" title="Supprimer"></span>
                            </button>
                        </div>

                    </div>
                    {# second line #}
                    <div class="row mt-3">
                        <div class="col-2">
                            <label class="custom-file-upload btn btn-outline-primary" title="Ajouter des annexes">
                                <input type="file" multiple @change="addAnnexes($event, project)">
                                <span class="fa fa-folder-open"></span> annexes
                            </label>
                        </div>

                        <div class="col-4">
                            <select v-model="project.rapporteurId" class="form-control">
                                <option v-for="rapporteur in rapporteurs" v-bind:value="rapporteur.id">
                                    ${ rapporteur.firstName } ${ rapporteur.lastName }
                                </option>
                            </select>
                        </div>
                        <div class="col-6">
                            <select v-model="project.themeId" class="form-control">
                                <option v-for="theme in themes" v-bind:value="theme.id">
                                    ${ theme.levelName }
                                </option>
                            </select>
                        </div>
                    </div>

                    {# annexes#}

                    <draggable v-model="project.annexes" class="mt-1">
                        <div class="col-10 offset-1" v-for="(annex, index) in project.annexes">
                            <div class="row">
                                <span class="">${index + 1}</span>
                                <div class="col-10">${annex.file.name}</div>
                                <div class="col-1">
                                    <button class="btn btn-outline-danger borderless"
                                            @click="deleteAnnex(project.annexes, index)">
                                        <span class="fa fa-trash-alt" title="Supprimer"></span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </draggable>

                </div>
            </div>
        </draggable>

        <div class="float-right" v-if="projects.length > 0">
            <a href="{{ path('sitting_index') }}" class="btn btn-outline-dark">
                <span class="fa fa-times"></span> Annuler</a>

            <button class="btn btn-primary" @click="save()">
                <span class="fa fa-save"></span>
                Enregistrer
            </button>
        </div>

    </div>

{% endblock %}


{% block javascripts %}
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="//cdn.jsdelivr.net/npm/sortablejs@1.8.4/Sortable.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/Vue.Draggable/2.20.0/vuedraggable.umd.min.js"></script>

    <script>
        let app = new Vue({
            delimiters: ['${', '}'],
            el: "#app",
            data: {
                projects: [],
                themes: [],

                rapporteurs: [
                    {firstName: 'Thomas', lastName: 'Durant', id: 1},
                    {firstName: 'Arnaud', lastName: 'Auzolat', id: 2},
                    {firstName: 'Maxime', lastName: 'Bertrand', id: 3},
                    {firstName: 'Estelle', lastName: 'Martin', id: 4},
                ],
            },

            methods: {
                addProject(event) {
                    for (let i = 0; i < event.target.files.length; i++) {
                        let file = event.target.files[i];
                        let project = {
                            name: getPrettyNameFromFileName(file.name),
                            file: file,
                            annexes: []
                        };
                        this.projects.push(project);
                    }
                },

                removeProject(index) {
                    this.projects.splice(index, 1);
                },
                addAnnexes(event, project) {
                    for (let i = 0; i < event.target.files.length; i++) {
                        let file = event.target.files[i];
                        let annex = {
                            file: file,
                        };
                        project.annexes.push(annex);
                    }
                },
                deleteAnnex(annexes, index) {
                    annexes.splice(index, 1);
                },

                save() {
                    formatData();
                },


                http() {
                    axios
                        .get('https://api/themes')
                        .then(response => (console.log(response)));
                }
            },
            mounted() {
                Promise.all([
                    axios.get('/api/themes'),
                    axios.get('/api/actors'),
                ]).then( (response) => {
                    this.themes = setThemeLevelName(response[0].data);
                    this.rapporteurs = response[1].data
                });
            }
        });

        function formatData() {
            console.log('ooooo');
        }

        function getPrettyNameFromFileName(fileName) {
            return fileName.replace(/\.[^/.]+$/, "").replace(/_/g, " ");
        }

        function setThemeLevelName(themes) {
            for (let i = 0; i < themes.length; i++) {
                themes[i].levelName = '';
                for (let j = 1; j < themes[i].lvl; j++) {
                    themes[i].levelName += '--'
                }
                themes[i].levelName += themes[i].name;
            }
            return themes;
        }

    </script>

{% endblock %}
