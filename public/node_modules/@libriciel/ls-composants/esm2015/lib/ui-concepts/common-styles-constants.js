/**
 * @fileoverview added by tsickle
 * Generated from: lib/ui-concepts/common-styles-constants.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
export class CommonStylesConstants {
    /**
     * @param {?} style
     * @return {?}
     */
    static getStyleClass(style) {
        return `ls-${style.toString()}`;
    }
    /**
     * @param {?} style
     * @return {?}
     */
    static getButtonStyleClass(style) {
        return `btn-${style.toString()}`;
    }
    /**
     * @param {?} style
     * @return {?}
     */
    static getButtonOutlineStyleClass(style) {
        return `btn-outline-${style.toString()}`;
    }
    /**
     * @return {?}
     */
    static getButtonLinkStyleClass() {
        return `btn-link`;
    }
    /**
     * @return {?}
     */
    static getButtonMenuItemStyleClass() {
        return `menu-item ${CommonStylesConstants.getButtonLinkStyleClass()}`;
    }
    /**
     * @param {?} style
     * @return {?}
     */
    static getOnHoverStyleClass(style) {
        return this.getStyleClass(style) + '-on-hover';
    }
    // static getSuccessStyleClass(): string {
    //   return this.getStyleClass(Style.SUCCESS);
    // }
    // static getWarningStyleClass(): string {
    //   return this.getStyleClass(Style.WARNING);
    // }
    //
    // static getErrorStyleClass(): string {
    //   return this.getStyleClass(Style.DANGER);
    // }
    /**
     * @param {?} style
     * @return {?}
     */
    static getPanelStyleClass(style) {
        return 'ls-panel ' + this.getStyleClass(style) + '-panel';
    }
    /**
     * @return {?}
     */
    static getButtonSmallSizeClass() {
        return 'fa-sm';
    }
    /**
     * @return {?}
     */
    static getButtonLargeSizeClass() {
        return 'fa-lg';
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLXN0eWxlcy1jb25zdGFudHMuanMiLCJzb3VyY2VSb290IjoiL2J1aWxkcy9vdXRpbHMvY2hhcnRlZ3JhcGhpcXVlL2xpYnJhaXJpZS1hbmd1bGFyL2xpYi9zcmMvIiwic291cmNlcyI6WyJsaWIvdWktY29uY2VwdHMvY29tbW9uLXN0eWxlcy1jb25zdGFudHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFFQSxNQUFNLE9BQU8scUJBQXFCOzs7OztJQUVoQyxNQUFNLENBQUMsYUFBYSxDQUFDLEtBQVk7UUFDL0IsT0FBTyxNQUFNLEtBQUssQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDO0lBQ2xDLENBQUM7Ozs7O0lBRUQsTUFBTSxDQUFDLG1CQUFtQixDQUFDLEtBQVk7UUFDckMsT0FBTyxPQUFPLEtBQUssQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDO0lBQ25DLENBQUM7Ozs7O0lBRUQsTUFBTSxDQUFDLDBCQUEwQixDQUFDLEtBQVk7UUFDNUMsT0FBTyxlQUFlLEtBQUssQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDO0lBQzNDLENBQUM7Ozs7SUFFRCxNQUFNLENBQUMsdUJBQXVCO1FBQzVCLE9BQU8sVUFBVSxDQUFDO0lBQ3BCLENBQUM7Ozs7SUFFRCxNQUFNLENBQUMsMkJBQTJCO1FBQ2hDLE9BQU8sYUFBYSxxQkFBcUIsQ0FBQyx1QkFBdUIsRUFBRSxFQUFFLENBQUM7SUFDeEUsQ0FBQzs7Ozs7SUFFRCxNQUFNLENBQUMsb0JBQW9CLENBQUMsS0FBWTtRQUN0QyxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLEdBQUcsV0FBVyxDQUFDO0lBQ2pELENBQUM7Ozs7Ozs7Ozs7Ozs7OztJQWNELE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxLQUFZO1FBQ3BDLE9BQU8sV0FBVyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLEdBQUcsUUFBUSxDQUFDO0lBQzVELENBQUM7Ozs7SUFFRCxNQUFNLENBQUMsdUJBQXVCO1FBQzVCLE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7Ozs7SUFFRCxNQUFNLENBQUMsdUJBQXVCO1FBQzVCLE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0eWxlIH0gZnJvbSAnLi9zdHlsZSc7XG5cbmV4cG9ydCBjbGFzcyBDb21tb25TdHlsZXNDb25zdGFudHMge1xuXG4gIHN0YXRpYyBnZXRTdHlsZUNsYXNzKHN0eWxlOiBTdHlsZSk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGBscy0ke3N0eWxlLnRvU3RyaW5nKCl9YDtcbiAgfVxuXG4gIHN0YXRpYyBnZXRCdXR0b25TdHlsZUNsYXNzKHN0eWxlOiBTdHlsZSk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGBidG4tJHtzdHlsZS50b1N0cmluZygpfWA7XG4gIH1cblxuICBzdGF0aWMgZ2V0QnV0dG9uT3V0bGluZVN0eWxlQ2xhc3Moc3R5bGU6IFN0eWxlKTogc3RyaW5nIHtcbiAgICByZXR1cm4gYGJ0bi1vdXRsaW5lLSR7c3R5bGUudG9TdHJpbmcoKX1gO1xuICB9XG5cbiAgc3RhdGljIGdldEJ1dHRvbkxpbmtTdHlsZUNsYXNzKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGBidG4tbGlua2A7XG4gIH1cblxuICBzdGF0aWMgZ2V0QnV0dG9uTWVudUl0ZW1TdHlsZUNsYXNzKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGBtZW51LWl0ZW0gJHtDb21tb25TdHlsZXNDb25zdGFudHMuZ2V0QnV0dG9uTGlua1N0eWxlQ2xhc3MoKX1gO1xuICB9XG5cbiAgc3RhdGljIGdldE9uSG92ZXJTdHlsZUNsYXNzKHN0eWxlOiBTdHlsZSk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0U3R5bGVDbGFzcyhzdHlsZSkgKyAnLW9uLWhvdmVyJztcbiAgfVxuXG4gIC8vIHN0YXRpYyBnZXRTdWNjZXNzU3R5bGVDbGFzcygpOiBzdHJpbmcge1xuICAvLyAgIHJldHVybiB0aGlzLmdldFN0eWxlQ2xhc3MoU3R5bGUuU1VDQ0VTUyk7XG4gIC8vIH1cblxuICAvLyBzdGF0aWMgZ2V0V2FybmluZ1N0eWxlQ2xhc3MoKTogc3RyaW5nIHtcbiAgLy8gICByZXR1cm4gdGhpcy5nZXRTdHlsZUNsYXNzKFN0eWxlLldBUk5JTkcpO1xuICAvLyB9XG4gIC8vXG4gIC8vIHN0YXRpYyBnZXRFcnJvclN0eWxlQ2xhc3MoKTogc3RyaW5nIHtcbiAgLy8gICByZXR1cm4gdGhpcy5nZXRTdHlsZUNsYXNzKFN0eWxlLkRBTkdFUik7XG4gIC8vIH1cblxuICBzdGF0aWMgZ2V0UGFuZWxTdHlsZUNsYXNzKHN0eWxlOiBTdHlsZSk6IHN0cmluZyB7XG4gICAgcmV0dXJuICdscy1wYW5lbCAnICsgdGhpcy5nZXRTdHlsZUNsYXNzKHN0eWxlKSArICctcGFuZWwnO1xuICB9XG5cbiAgc3RhdGljIGdldEJ1dHRvblNtYWxsU2l6ZUNsYXNzKCkge1xuICAgIHJldHVybiAnZmEtc20nO1xuICB9XG5cbiAgc3RhdGljIGdldEJ1dHRvbkxhcmdlU2l6ZUNsYXNzKCkge1xuICAgIHJldHVybiAnZmEtbGcnO1xuICB9XG59XG4iXX0=