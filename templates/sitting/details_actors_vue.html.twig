{% extends 'base.html.twig' %}
{% import 'macro/_forms.html.twig' as macro %}
{% import 'macro/_sitting_tabs.html.twig' as macroTab %}

{% block body %}
    <div class="col-10 offset-1">
        {{ apy_breadcrumb_trail_render(breadcrumb) }}
    </div>

    <div class="col-10 offset-1">
        {{ macroTab.showTabs('actors', sitting) }}
    </div>

    <div class="mt-3 col-10 offset-1">
        <h1>Détail des utilisateurs</h1>

        <div class="mt-4">
            {{ macro.backButton('sitting_index') }}
        </div>


        <div v-cloak class="col-10 offset-1 form-white mt-4" id="app">
            <h2>Acteurs : convocation et présence</h2>

            <table class="table table-striped mt-5 bg-white">
                <thead>
                <tr class="d-flex">
                    <th class="col-3">Nom</th>
                    <th class="col-2">Envoyée</th>
                    <th class="col-2">Reçue</th>
                    <th class="col-2">Présence</th>
                    <th class="col-3">Mandataire</th>
                </tr>
                </thead>
                <tbody>

                    <tr class="d-flex" v-for="convocation in convocations">
                        <td class="col-3">
                            ${convocation.actor.firstName} ${convocation.actor.lastName}
                        </td>
                        <td v-if="convocation.sentTimestamp" class="col-2"> ${convocation.sentTimestamp.createAt   }}}</td>
                        <td v-else class="col-2">
                            <button v-on:click="sendConvocation(convocation.id)" class="btn btn-outline-primary borderless" title="Envoyer"> <span class="fa fa-paper-plane"></span></button>
                        </td>

                        <td v-if="convocation.receivedTimestamp" class="col-2"> oui (mettre date)</td>
                        <td class="col-2"></td>
                        <td class="col-3"></td>

                    </tr>




                </tbody>

            </table>
        </div>

    </div>


{% endblock %}


{% block javascripts %}
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <script>

        let app = new Vue({
            delimiters: ['${', '}'],
            el: "#app",
            data: {
                convocations: [],
            },

            methods: {
                sendConvocation(convocationId) {
                    axios.post(`/api/convocations/${convocationId}/send`).then(response => {
                        console.log(response);
                    });
                },

                removeProject(index) {
                    this.projects.splice(index, 1);
                },
                addAnnexes(event, project) {
                    for (let i = 0; i < event.target.files.length; i++) {
                        let file = event.target.files[i];
                        let annex = {
                            file: file,
                            linkedFileKey: null,
                            fileName: file.name,
                            id: null
                        };
                        project.annexes.push(annex);
                    }
                },
                deleteAnnex(annexes, index) {
                    annexes.splice(index, 1);
                },

                save() {
                    let formData = new FormData();
                    addProjectAndAnnexeFiles(this.projects, formData);
                    setProjectsRank(this.projects);
                    formData.append('projects', JSON.stringify(this.projects));

                    axios.post(`/api/projects/${getSittingId()}`, formData).then(response => {
                        console.log(response);
                    });
                },


            },
            mounted() {
                axios.get(`/api/convocations/${getSittingId()}`).then(convocations => {
                    this.convocations = convocations.data;
                })

            }
        });

        function getSittingId() {
            return window.location.pathname.split('/')[3];
        }

    </script>
{% endblock %}
