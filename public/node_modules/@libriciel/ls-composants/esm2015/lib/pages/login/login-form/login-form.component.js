/**
 * @fileoverview added by tsickle
 * Generated from: lib/pages/login/login-form/login-form.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { LoginPageModelClass } from '../login-model/LoginPageModel.class';
import { DomSanitizer } from '@angular/platform-browser';
export class LoginFormComponent extends LoginPageModelClass {
    /**
     * @param {?} _DomSanitizationService
     */
    constructor(_DomSanitizationService) {
        super(_DomSanitizationService);
        this._DomSanitizationService = _DomSanitizationService;
        this.showRememberMe = false;
        this.usernameInputName = 'username';
        this.passwordInputName = 'password';
        this.rememberMeInputName = 'rememberme';
        this.passwordReset = false;
        this.successMessage = '';
        this.forgotPassword = new EventEmitter();
    }
    /**
     * @return {?}
     */
    askForResetPassword() {
        this.forgotPassword.emit();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    preventFormSubmit(event) {
        super.preventFormSubmit(event);
    }
    /**
     * @return {?}
     */
    submitForm() {
        this.submit.emit({
            username: this.username,
            password: this.password,
            rememberMe: this.rememberMe
        });
    }
}
LoginFormComponent.decorators = [
    { type: Component, args: [{
                selector: 'ls-login-form',
                template: "<ls-login-model [logo]=\"logo\" [visualConfiguration]=\"_visualConfiguration\">\n  <section>\n    <h1 class=\"page-title\">Veuillez saisir vos identifiants de connexion</h1>\n    <form [action]=\"formAction\" method=\"post\" id=\"ls-login-form\" ngNoForm (submit)=\"preventFormSubmit($event)\">\n\n      <div *ngIf=\"showError\" class=\"alert alert-danger\">\n        <i class=\"fa fa-exclamation-triangle\"></i>\n        Identifiant ou mot de passe erron\u00E9\n      </div>\n\n      <div *ngIf=\"successMessage\" class=\"alert alert-success\">\n        <i class=\"fa fa-check\"></i>\n        {{successMessage}}\n      </div>\n\n      <div *ngIf=\"passwordReset\" class=\"alert alert-success\">\n        <i class=\"fa fa-check\"></i>\n        Vous pouvez desormais vous connecter avec votre identifiant et votre nouveau mot de passe\n      </div>\n\n      <div class=\"login-input-row\">\n        <label [attr.for]=\"usernameInputName\">\n          Identifiant\n        </label>\n        <div class=\"form-group input-group-front-icon\">\n                <span>\n                  <i class=\"fa fa-user\"></i>\n                </span>\n          <input [(ngModel)]=\"username\" [attr.name]=\"usernameInputName\" [attr.id]=\"usernameInputName\" class=\"form-control\" required>\n        </div>\n      </div>\n\n      <div class=\"login-input-row\">\n        <label [attr.for]=\"passwordInputName\">\n          Mot de passe\n        </label>\n        <div>\n          <ls-password [(ngModel)]=\"password\" [name]=\"passwordInputName\" [attr.id]=\"passwordInputName\" required></ls-password>\n        </div>\n      </div>\n\n      <div *ngIf=\"showRememberMe\" class=\"login-input-row\">\n        <div class=\"form-check\">\n          <input [(ngModel)]=\"rememberMe\" [attr.name]=\"rememberMeInputName\" [attr.id]=\"rememberMeInputName\" class=\"form-check-input\"\n                 type=\"checkbox\">\n          <label class=\"form-check-label\" [attr.for]=\"rememberMeInputName\">Se souvenir de moi</label>\n        </div>\n      </div>\n\n      <ng-content></ng-content>\n\n      <div class=\"float-right\">\n        <span (click)=\"askForResetPassword()\" class=\"btn btn-link forgot-passwd-lnk\">\n          Mot de passe oubli\u00E9 ?\n        </span>\n\n        <button (click)=\"submitForm()\" class=\"btn btn-primary\" form=\"ls-login-form\" type=\"submit\" [class.disabled]=\"submitted\">\n          <i *ngIf=\"!submitted\" class=\"fa fa-sign-in fa-sign-in-alt fa-fw\"></i>\n          <i *ngIf=\"submitted\" class=\"fa fa-spinner fa-spin fa-fw\"></i>\n          Se connecter\n        </button>\n      </div>\n    </form>\n  </section>\n</ls-login-model>\n",
                styles: [".page-title{font-size:1rem;font-weight:400;padding-top:3rem;padding-bottom:1.5rem;text-align:center}.alert{text-align:center}.forgot-passwd-lnk{cursor:pointer;margin-right:1rem}.float-right{padding-top:1rem}.login-input-row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.login-input-row>label{width:33%;margin-right:1rem}.login-input-row>div{display:inline-block;width:67%}.login-input-row>.form-check{width:100%;padding-left:calc(33% + 35px)}"]
            }] }
];
/** @nocollapse */
LoginFormComponent.ctorParameters = () => [
    { type: DomSanitizer }
];
LoginFormComponent.propDecorators = {
    showRememberMe: [{ type: Input }],
    usernameInputName: [{ type: Input }],
    passwordInputName: [{ type: Input }],
    rememberMeInputName: [{ type: Input }],
    passwordReset: [{ type: Input }],
    successMessage: [{ type: Input }],
    forgotPassword: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    LoginFormComponent.prototype.username;
    /** @type {?} */
    LoginFormComponent.prototype.password;
    /** @type {?} */
    LoginFormComponent.prototype.rememberMe;
    /** @type {?} */
    LoginFormComponent.prototype.showRememberMe;
    /** @type {?} */
    LoginFormComponent.prototype.usernameInputName;
    /** @type {?} */
    LoginFormComponent.prototype.passwordInputName;
    /** @type {?} */
    LoginFormComponent.prototype.rememberMeInputName;
    /** @type {?} */
    LoginFormComponent.prototype.passwordReset;
    /** @type {?} */
    LoginFormComponent.prototype.successMessage;
    /** @type {?} */
    LoginFormComponent.prototype.forgotPassword;
    /** @type {?} */
    LoginFormComponent.prototype._DomSanitizationService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4tZm9ybS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbGlicmljaWVsL2xzLWNvbXBvc2FudHMvIiwic291cmNlcyI6WyJsaWIvcGFnZXMvbG9naW4vbG9naW4tZm9ybS9sb2dpbi1mb3JtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDckUsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0scUNBQXFDLENBQUM7QUFDeEUsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBT3ZELE1BQU0sT0FBTyxrQkFBbUIsU0FBUSxtQkFBbUI7Ozs7SUFlekQsWUFBbUIsdUJBQXFDO1FBQ3RELEtBQUssQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO1FBRGQsNEJBQXVCLEdBQXZCLHVCQUF1QixDQUFjO1FBVC9DLG1CQUFjLEdBQUcsS0FBSyxDQUFDO1FBQ3ZCLHNCQUFpQixHQUFHLFVBQVUsQ0FBQztRQUMvQixzQkFBaUIsR0FBRyxVQUFVLENBQUM7UUFDL0Isd0JBQW1CLEdBQUcsWUFBWSxDQUFDO1FBQ25DLGtCQUFhLEdBQUcsS0FBSyxDQUFDO1FBQ3RCLG1CQUFjLEdBQUcsRUFBRSxDQUFDO1FBRTdCLG1CQUFjLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7SUFJdkQsQ0FBQzs7OztJQUVELG1CQUFtQjtRQUNqQixJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzdCLENBQUM7Ozs7O0lBRUQsaUJBQWlCLENBQUMsS0FBSztRQUNyQixLQUFLLENBQUMsaUJBQWlCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDakMsQ0FBQzs7OztJQUVELFVBQVU7UUFDUixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQztZQUNmLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUTtZQUN2QixRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVE7WUFDdkIsVUFBVSxFQUFFLElBQUksQ0FBQyxVQUFVO1NBQzVCLENBQUMsQ0FBQztJQUNMLENBQUM7OztZQXRDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGVBQWU7Z0JBQ3pCLG1uRkFBMEM7O2FBRTNDOzs7O1lBTk8sWUFBWTs7OzZCQWFqQixLQUFLO2dDQUNMLEtBQUs7Z0NBQ0wsS0FBSztrQ0FDTCxLQUFLOzRCQUNMLEtBQUs7NkJBQ0wsS0FBSzs2QkFDTCxNQUFNOzs7O0lBVlAsc0NBQWlCOztJQUNqQixzQ0FBaUI7O0lBQ2pCLHdDQUFvQjs7SUFFcEIsNENBQWdDOztJQUNoQywrQ0FBd0M7O0lBQ3hDLCtDQUF3Qzs7SUFDeEMsaURBQTRDOztJQUM1QywyQ0FBK0I7O0lBQy9CLDRDQUE2Qjs7SUFDN0IsNENBQ3VEOztJQUUzQyxxREFBNEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7TG9naW5QYWdlTW9kZWxDbGFzc30gZnJvbSAnLi4vbG9naW4tbW9kZWwvTG9naW5QYWdlTW9kZWwuY2xhc3MnO1xuaW1wb3J0IHtEb21TYW5pdGl6ZXJ9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdscy1sb2dpbi1mb3JtJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xvZ2luLWZvcm0uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9sb2dpbi1mb3JtLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgTG9naW5Gb3JtQ29tcG9uZW50IGV4dGVuZHMgTG9naW5QYWdlTW9kZWxDbGFzcyB7XG5cbiAgdXNlcm5hbWU6IHN0cmluZztcbiAgcGFzc3dvcmQ6IHN0cmluZztcbiAgcmVtZW1iZXJNZTogYm9vbGVhbjtcblxuICBASW5wdXQoKSBzaG93UmVtZW1iZXJNZSA9IGZhbHNlO1xuICBASW5wdXQoKSB1c2VybmFtZUlucHV0TmFtZSA9ICd1c2VybmFtZSc7XG4gIEBJbnB1dCgpIHBhc3N3b3JkSW5wdXROYW1lID0gJ3Bhc3N3b3JkJztcbiAgQElucHV0KCkgcmVtZW1iZXJNZUlucHV0TmFtZSA9ICdyZW1lbWJlcm1lJztcbiAgQElucHV0KCkgcGFzc3dvcmRSZXNldCA9IGZhbHNlO1xuICBASW5wdXQoKSBzdWNjZXNzTWVzc2FnZSA9ICcnO1xuICBAT3V0cHV0KClcbiAgZm9yZ290UGFzc3dvcmQ6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBfRG9tU2FuaXRpemF0aW9uU2VydmljZTogRG9tU2FuaXRpemVyKSB7XG4gICAgc3VwZXIoX0RvbVNhbml0aXphdGlvblNlcnZpY2UpO1xuICB9XG5cbiAgYXNrRm9yUmVzZXRQYXNzd29yZCgpIHtcbiAgICB0aGlzLmZvcmdvdFBhc3N3b3JkLmVtaXQoKTtcbiAgfVxuXG4gIHByZXZlbnRGb3JtU3VibWl0KGV2ZW50KSB7XG4gICAgc3VwZXIucHJldmVudEZvcm1TdWJtaXQoZXZlbnQpO1xuICB9XG5cbiAgc3VibWl0Rm9ybSgpIHtcbiAgICB0aGlzLnN1Ym1pdC5lbWl0KHtcbiAgICAgIHVzZXJuYW1lOiB0aGlzLnVzZXJuYW1lLFxuICAgICAgcGFzc3dvcmQ6IHRoaXMucGFzc3dvcmQsXG4gICAgICByZW1lbWJlck1lOiB0aGlzLnJlbWVtYmVyTWVcbiAgICB9KTtcbiAgfVxufVxuIl19