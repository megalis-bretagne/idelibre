/**
 * @fileoverview added by tsickle
 * Generated from: lib/model/action-item.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { of } from 'rxjs';
import { Style } from '../ui-concepts/style';
/**
 * @template T
 */
export class ActionItem {
    /**
     * @param {?} object
     */
    constructor(object) {
        this.name = object.name;
        this.longName = object.longName ? object.longName : object.name;
        this.icon = object.icon;
        this.style = object.style ? object.style : Style.NORMAL;
        this.actuator = object.actuator;
        this.actionValidator = object.actionValidator;
        this.enabled = object.enabled;
    }
    /**
     * @return {?}
     */
    initializeItem() {
        /** @type {?} */
        const self = this;
        this.icon = this.icon && this.icon !== '' ? this.icon : 'fa fa-cogs';
        this.enabled = true;
        this.actionValidator = this.actionValidator
            ? this.actionValidator
            : new class {
                constructor() {
                    this.isActionValid = (/**
                     * @return {?}
                     */
                    () => true);
                }
            }();
        this.actuator = this.actuator
            ? this.actuator
            : new class {
                /**
                 * @param {?} elements
                 * @return {?}
                 */
                action(elements) {
                    // tslint:disable-next-line:no-console
                    console.debug(self.name + ' clicked on elements ' + elements.map((/**
                     * @param {?} value
                     * @return {?}
                     */
                    value => value ? value.id : '' + '')).join(','));
                    return of({});
                }
            }();
    }
}
if (false) {
    /** @type {?} */
    ActionItem.prototype.name;
    /** @type {?} */
    ActionItem.prototype.longName;
    /** @type {?} */
    ActionItem.prototype.icon;
    /** @type {?} */
    ActionItem.prototype.style;
    /** @type {?} */
    ActionItem.prototype.actuator;
    /** @type {?} */
    ActionItem.prototype.actionValidator;
    /** @type {?} */
    ActionItem.prototype.enabled;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9uLWl0ZW0uanMiLCJzb3VyY2VSb290IjoiL2J1aWxkcy9vdXRpbHMvY2hhcnRlZ3JhcGhpcXVlL2xpYnJhaXJpZS1hbmd1bGFyL2xpYi9zcmMvIiwic291cmNlcyI6WyJsaWIvbW9kZWwvYWN0aW9uLWl0ZW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQWMsRUFBRSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBR3RDLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7OztBQUk3QyxNQUFNLE9BQU8sVUFBVTs7OztJQVNyQixZQUFZLE1BVVg7UUFDQyxJQUFJLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUM7UUFDeEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDO1FBQ2hFLElBQUksQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQztRQUN4QixJQUFJLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUM7UUFDeEQsSUFBSSxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDO1FBQ2hDLElBQUksQ0FBQyxlQUFlLEdBQUcsTUFBTSxDQUFDLGVBQWUsQ0FBQztRQUM5QyxJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUM7SUFDaEMsQ0FBQzs7OztJQUVELGNBQWM7O2NBQ04sSUFBSSxHQUFHLElBQUk7UUFDakIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUM7UUFDckUsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDcEIsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsZUFBZTtZQUN6QyxDQUFDLENBQUMsSUFBSSxDQUFDLGVBQWU7WUFDdEIsQ0FBQyxDQUFDLElBQUk7Z0JBQUE7b0JBQ0osa0JBQWE7OztvQkFBRyxHQUFZLEVBQUUsQ0FBQyxJQUFJLEVBQUM7Z0JBQ3RDLENBQUM7YUFBQSxFQUFFLENBQUM7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRO1lBQzNCLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUTtZQUNmLENBQUMsQ0FBQyxJQUFJOzs7OztnQkFDSixNQUFNLENBQUMsUUFBYTtvQkFDbEIsc0NBQXNDO29CQUN0QyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsdUJBQXVCLEdBQUcsUUFBUSxDQUFDLEdBQUc7Ozs7b0JBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztvQkFDakgsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7Z0JBQ2hCLENBQUM7YUFDRixFQUFFLENBQUM7SUFDUixDQUFDO0NBQ0Y7OztJQS9DQywwQkFBYTs7SUFDYiw4QkFBa0I7O0lBQ2xCLDBCQUFjOztJQUNkLDJCQUFjOztJQUNkLDhCQUF1Qjs7SUFDdkIscUNBQWdDOztJQUNoQyw2QkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYnNlcnZhYmxlLCBvZiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgSGFzSWQgfSBmcm9tICcuL2hhcy1pZCc7XG5pbXBvcnQgeyBBY3Rpb25SZXN1bHQgfSBmcm9tICcuL2FjdHVhdG9yL2FjdGlvbi1yZXN1bHQnO1xuaW1wb3J0IHsgU3R5bGUgfSBmcm9tICcuLi91aS1jb25jZXB0cy9zdHlsZSc7XG5pbXBvcnQgeyBJQWN0dWF0b3IgfSBmcm9tICcuL2FjdHVhdG9yL2ktYWN0dWF0b3InO1xuaW1wb3J0IHsgSVZhbGlkYXRvciB9IGZyb20gJy4vdmFsaWRhdG9yL2ktdmFsaWRhdG9yJztcblxuZXhwb3J0IGNsYXNzIEFjdGlvbkl0ZW08VCBleHRlbmRzIEhhc0lkPiB7XG4gIG5hbWU6IHN0cmluZztcbiAgbG9uZ05hbWU/OiBzdHJpbmc7XG4gIGljb24/OiBzdHJpbmc7XG4gIHN0eWxlPzogU3R5bGU7XG4gIGFjdHVhdG9yOiBJQWN0dWF0b3I8VD47XG4gIGFjdGlvblZhbGlkYXRvcj86IElWYWxpZGF0b3I8VD47XG4gIGVuYWJsZWQ/OiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKG9iamVjdDoge1xuICAgIG5hbWU6IHN0cmluZztcbiAgICBsb25nTmFtZT86IHN0cmluZztcbiAgICBpY29uPzogc3RyaW5nO1xuICAgIGljb25fc3RhY2tlZD86IHN0cmluZztcbiAgICBzdHlsZT86IFN0eWxlO1xuICAgIGFjdHVhdG9yPzogSUFjdHVhdG9yPFQ+O1xuICAgIGVuYWJsZWQ/OiBib29sZWFuO1xuICAgIGZ1bGxCdXR0b24/OiBib29sZWFuO1xuICAgIGFjdGlvblZhbGlkYXRvcj86IElWYWxpZGF0b3I8VD47XG4gIH0pIHtcbiAgICB0aGlzLm5hbWUgPSBvYmplY3QubmFtZTtcbiAgICB0aGlzLmxvbmdOYW1lID0gb2JqZWN0LmxvbmdOYW1lID8gb2JqZWN0LmxvbmdOYW1lIDogb2JqZWN0Lm5hbWU7XG4gICAgdGhpcy5pY29uID0gb2JqZWN0Lmljb247XG4gICAgdGhpcy5zdHlsZSA9IG9iamVjdC5zdHlsZSA/IG9iamVjdC5zdHlsZSA6IFN0eWxlLk5PUk1BTDtcbiAgICB0aGlzLmFjdHVhdG9yID0gb2JqZWN0LmFjdHVhdG9yO1xuICAgIHRoaXMuYWN0aW9uVmFsaWRhdG9yID0gb2JqZWN0LmFjdGlvblZhbGlkYXRvcjtcbiAgICB0aGlzLmVuYWJsZWQgPSBvYmplY3QuZW5hYmxlZDtcbiAgfVxuXG4gIGluaXRpYWxpemVJdGVtKCkge1xuICAgIGNvbnN0IHNlbGYgPSB0aGlzO1xuICAgIHRoaXMuaWNvbiA9IHRoaXMuaWNvbiAmJiB0aGlzLmljb24gIT09ICcnID8gdGhpcy5pY29uIDogJ2ZhIGZhLWNvZ3MnO1xuICAgIHRoaXMuZW5hYmxlZCA9IHRydWU7XG4gICAgdGhpcy5hY3Rpb25WYWxpZGF0b3IgPSB0aGlzLmFjdGlvblZhbGlkYXRvclxuICAgICAgPyB0aGlzLmFjdGlvblZhbGlkYXRvclxuICAgICAgOiBuZXcgY2xhc3MgaW1wbGVtZW50cyBJVmFsaWRhdG9yPFQ+IHtcbiAgICAgICAgaXNBY3Rpb25WYWxpZCA9ICgpOiBib29sZWFuID0+IHRydWU7XG4gICAgICB9KCk7XG4gICAgdGhpcy5hY3R1YXRvciA9IHRoaXMuYWN0dWF0b3JcbiAgICAgID8gdGhpcy5hY3R1YXRvclxuICAgICAgOiBuZXcgY2xhc3MgaW1wbGVtZW50cyBJQWN0dWF0b3I8VD4ge1xuICAgICAgICBhY3Rpb24oZWxlbWVudHM6IFRbXSk6IE9ic2VydmFibGU8QWN0aW9uUmVzdWx0PiB7XG4gICAgICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWNvbnNvbGVcbiAgICAgICAgICBjb25zb2xlLmRlYnVnKHNlbGYubmFtZSArICcgY2xpY2tlZCBvbiBlbGVtZW50cyAnICsgZWxlbWVudHMubWFwKHZhbHVlID0+IHZhbHVlID8gdmFsdWUuaWQgOiAnJyArICcnKS5qb2luKCcsJykpO1xuICAgICAgICAgIHJldHVybiBvZih7fSk7XG4gICAgICAgIH1cbiAgICAgIH0oKTtcbiAgfVxufVxuIl19