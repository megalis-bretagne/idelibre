/**
 * @fileoverview added by tsickle
 * Generated from: lib/pages/login/forgot-password/forgot-password.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { LoginPageModelClass } from '../login-model/LoginPageModel.class';
import { DomSanitizer } from '@angular/platform-browser';
var ForgotPasswordComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ForgotPasswordComponent, _super);
    function ForgotPasswordComponent(_DomSanitizationService) {
        var _this = _super.call(this, _DomSanitizationService) || this;
        _this._DomSanitizationService = _DomSanitizationService;
        _this.oneFieldForgot = false;
        _this.usernameormailInputName = 'usernameormail';
        _this.usernameInputName = 'username';
        _this.emailInputName = 'email';
        _this.backToLogin = new EventEmitter();
        return _this;
    }
    /**
     * @return {?}
     */
    ForgotPasswordComponent.prototype.backToLoginPage = /**
     * @return {?}
     */
    function () {
        this.backToLogin.emit();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ForgotPasswordComponent.prototype.preventFormSubmit = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        _super.prototype.preventFormSubmit.call(this, event);
    };
    /**
     * @return {?}
     */
    ForgotPasswordComponent.prototype.submitForm = /**
     * @return {?}
     */
    function () {
        this.submit.emit({
            username: this.username,
            email: this.email,
            usernameormail: this.usernameormail
        });
    };
    ForgotPasswordComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ls-forgot-password',
                    template: "<ls-login-model [logo]=\"logo\" [visualConfiguration]=\"_visualConfiguration\">\n  <section id=\"forgot-page\">\n    <h1 class=\"page-title\">Mot de passe oubli\u00E9 ?</h1>\n    <form [action]=\"formAction\" id=\"ls-forgot-form\" method=\"post\" ngNoForm (submit)=\"preventFormSubmit($event)\">\n\n      <div *ngIf=\"!oneFieldForgot\" class=\"usernameormail\">\n        <label [attr.for]=\"usernameInputName\">\n          Identifiant\n        </label>\n        <input [attr.name]=\"usernameInputName\" [attr.id]=\"usernameInputName\" [(ngModel)]=\"username\" class=\"form-control\" placeholder=\"Mon identifiant\"\n               type=\"text\" required>\n      </div>\n      <div *ngIf=\"!oneFieldForgot\" class=\"usernameormail\">\n        <label [attr.for]=\"emailInputName\">\n          Adresse mail\n        </label>\n        <input [attr.id]=\"emailInputName\" [attr.name]=\"emailInputName\" [(ngModel)]=\"email\" class=\"form-control\" placeholder=\"adresse@mail.com\" type=\"text\" required>\n      </div>\n\n\n      <div *ngIf=\"oneFieldForgot\" class=\"usernameormail\">\n        <label [attr.for]=\"usernameormailInputName\">\n          Saisissez votre nom d'utilisateur ou votre adresse mail\n        </label>\n        <input [attr.name]=\"usernameormailInputName\"  [attr.id]=\"usernameormailInputName\" [(ngModel)]=\"usernameormail\" class=\"form-control\"\n               placeholder=\"Nom d'utilisateur ou adresse mail\"\n               type=\"text\" required>\n      </div>\n\n      <div class=\"alert alert-info\">\n        <div class=\"fa fa-lg fa-info-circle\"></div>\n        <div>\n          Si vos informations sont correctes, un e-mail vous sera envoy\u00E9.<br>\n          Vous pourrez ainsi cr\u00E9er un nouveau mot de passe.\n        </div>\n      </div>\n\n      <ng-content></ng-content>\n\n      <div class=\"float-left\">\n        <span (click)=\"backToLoginPage()\" class=\"btn btn-link forgot-passwd-lnk\">\n          <i class=\"fa fa-angle-double-left\"></i>\n          Revenir \u00E0 l'\u00E9cran de connexion\n        </span>\n      </div>\n\n\n      <div class=\"float-right\">\n        <button class=\"btn btn-primary\" (click)=\"submitForm()\" type=\"submit\" form=\"ls-forgot-form\" [class.disabled]=\"submitted\">\n          <i *ngIf=\"!submitted\" class=\"fa fa-paper-plane fa-fw\"></i>\n          <i *ngIf=\"submitted\" class=\"fa fa-spinner fa-spin fa-fw\"></i>\n          Soumettre\n        </button>\n      </div>\n    </form>\n  </section>\n</ls-login-model>\n",
                    styles: [".alert{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.alert .fa{width:2rem}#ls-forgot-form>*{margin-bottom:1rem}span.btn{cursor:pointer}.page-title{font-size:1rem;font-weight:400;padding-top:3rem;padding-bottom:1.5rem;text-align:center}"]
                }] }
    ];
    /** @nocollapse */
    ForgotPasswordComponent.ctorParameters = function () { return [
        { type: DomSanitizer }
    ]; };
    ForgotPasswordComponent.propDecorators = {
        oneFieldForgot: [{ type: Input }],
        usernameormailInputName: [{ type: Input }],
        usernameInputName: [{ type: Input }],
        emailInputName: [{ type: Input }],
        backToLogin: [{ type: Output }]
    };
    return ForgotPasswordComponent;
}(LoginPageModelClass));
export { ForgotPasswordComponent };
if (false) {
    /** @type {?} */
    ForgotPasswordComponent.prototype.username;
    /** @type {?} */
    ForgotPasswordComponent.prototype.email;
    /** @type {?} */
    ForgotPasswordComponent.prototype.usernameormail;
    /** @type {?} */
    ForgotPasswordComponent.prototype.oneFieldForgot;
    /** @type {?} */
    ForgotPasswordComponent.prototype.usernameormailInputName;
    /** @type {?} */
    ForgotPasswordComponent.prototype.usernameInputName;
    /** @type {?} */
    ForgotPasswordComponent.prototype.emailInputName;
    /** @type {?} */
    ForgotPasswordComponent.prototype.backToLogin;
    /** @type {?} */
    ForgotPasswordComponent.prototype._DomSanitizationService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9yZ290LXBhc3N3b3JkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BsaWJyaWNpZWwvbHMtY29tcG9zYW50cy8iLCJzb3VyY2VzIjpbImxpYi9wYWdlcy9sb2dpbi9mb3Jnb3QtcGFzc3dvcmQvZm9yZ290LXBhc3N3b3JkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3JFLE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLHFDQUFxQyxDQUFDO0FBQ3hFLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUV2RDtJQUs2QyxtREFBbUI7SUFjOUQsaUNBQW1CLHVCQUFxQztRQUF4RCxZQUNFLGtCQUFNLHVCQUF1QixDQUFDLFNBQy9CO1FBRmtCLDZCQUF1QixHQUF2Qix1QkFBdUIsQ0FBYztRQVIvQyxvQkFBYyxHQUFHLEtBQUssQ0FBQztRQUN2Qiw2QkFBdUIsR0FBRyxnQkFBZ0IsQ0FBQztRQUMzQyx1QkFBaUIsR0FBRyxVQUFVLENBQUM7UUFDL0Isb0JBQWMsR0FBRyxPQUFPLENBQUM7UUFHbEMsaUJBQVcsR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQzs7SUFJcEQsQ0FBQzs7OztJQUVELGlEQUFlOzs7SUFBZjtRQUNFLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDMUIsQ0FBQzs7Ozs7SUFFRCxtREFBaUI7Ozs7SUFBakIsVUFBa0IsS0FBSztRQUNyQixpQkFBTSxpQkFBaUIsWUFBQyxLQUFLLENBQUMsQ0FBQztJQUNqQyxDQUFDOzs7O0lBRUQsNENBQVU7OztJQUFWO1FBQ0UsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUM7WUFDZixRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVE7WUFDdkIsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLO1lBQ2pCLGNBQWMsRUFBRSxJQUFJLENBQUMsY0FBYztTQUNwQyxDQUFDLENBQUM7SUFDTCxDQUFDOztnQkFyQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLHc5RUFBK0M7O2lCQUVoRDs7OztnQkFOTyxZQUFZOzs7aUNBYWpCLEtBQUs7MENBQ0wsS0FBSztvQ0FDTCxLQUFLO2lDQUNMLEtBQUs7OEJBRUwsTUFBTTs7SUFzQlQsOEJBQUM7Q0FBQSxBQXRDRCxDQUs2QyxtQkFBbUIsR0FpQy9EO1NBakNZLHVCQUF1Qjs7O0lBRWxDLDJDQUFpQjs7SUFDakIsd0NBQWM7O0lBQ2QsaURBQXVCOztJQUV2QixpREFBZ0M7O0lBQ2hDLDBEQUFvRDs7SUFDcEQsb0RBQXdDOztJQUN4QyxpREFBa0M7O0lBRWxDLDhDQUNvRDs7SUFFeEMsMERBQTRDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0xvZ2luUGFnZU1vZGVsQ2xhc3N9IGZyb20gJy4uL2xvZ2luLW1vZGVsL0xvZ2luUGFnZU1vZGVsLmNsYXNzJztcbmltcG9ydCB7RG9tU2FuaXRpemVyfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbHMtZm9yZ290LXBhc3N3b3JkJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2ZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2ZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIEZvcmdvdFBhc3N3b3JkQ29tcG9uZW50IGV4dGVuZHMgTG9naW5QYWdlTW9kZWxDbGFzcyB7XG5cbiAgdXNlcm5hbWU6IHN0cmluZztcbiAgZW1haWw6IHN0cmluZztcbiAgdXNlcm5hbWVvcm1haWw6IHN0cmluZztcblxuICBASW5wdXQoKSBvbmVGaWVsZEZvcmdvdCA9IGZhbHNlO1xuICBASW5wdXQoKSB1c2VybmFtZW9ybWFpbElucHV0TmFtZSA9ICd1c2VybmFtZW9ybWFpbCc7XG4gIEBJbnB1dCgpIHVzZXJuYW1lSW5wdXROYW1lID0gJ3VzZXJuYW1lJztcbiAgQElucHV0KCkgZW1haWxJbnB1dE5hbWUgPSAnZW1haWwnO1xuXG4gIEBPdXRwdXQoKVxuICBiYWNrVG9Mb2dpbjogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgY29uc3RydWN0b3IocHVibGljIF9Eb21TYW5pdGl6YXRpb25TZXJ2aWNlOiBEb21TYW5pdGl6ZXIpIHtcbiAgICBzdXBlcihfRG9tU2FuaXRpemF0aW9uU2VydmljZSk7XG4gIH1cblxuICBiYWNrVG9Mb2dpblBhZ2UoKSB7XG4gICAgdGhpcy5iYWNrVG9Mb2dpbi5lbWl0KCk7XG4gIH1cblxuICBwcmV2ZW50Rm9ybVN1Ym1pdChldmVudCkge1xuICAgIHN1cGVyLnByZXZlbnRGb3JtU3VibWl0KGV2ZW50KTtcbiAgfVxuXG4gIHN1Ym1pdEZvcm0oKSB7XG4gICAgdGhpcy5zdWJtaXQuZW1pdCh7XG4gICAgICB1c2VybmFtZTogdGhpcy51c2VybmFtZSxcbiAgICAgIGVtYWlsOiB0aGlzLmVtYWlsLFxuICAgICAgdXNlcm5hbWVvcm1haWw6IHRoaXMudXNlcm5hbWVvcm1haWxcbiAgICB9KTtcbiAgfVxufVxuIl19