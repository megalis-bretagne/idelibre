import type { TemplateRef } from '@angular/core';
import { OnChanges, OnInit } from '@angular/core';
import { StepInstance } from '../../shared/model/workflows/step-instance';
import { WorkflowActor } from '../../shared/model/workflows/workflow-actor';
import { StepModel } from '../../shared/model/workflows/step-model';
import { WorkflowInstance } from '../../shared/model/workflows/workflow-instance';
import { WorkflowInstanceLocalizedMessages, WorkflowInstanceOptions } from '../../shared/model/workflows/workflow-instance-option';
export declare class LsWorkflowInstanceViewerComponent implements OnInit, OnChanges {
    passedStepTemplateRef: TemplateRef<any>;
    pendingStepTemplateRef: TemplateRef<any>;
    workflowData: WorkflowInstance;
    activeStep: number;
    messages: WorkflowInstanceLocalizedMessages;
    getStepIconClassFct: (step: StepModel) => string;
    getStepTooltipFct: (step: StepModel) => string;
    getCircuitEndAdditionalClassesFct: () => string | [];
    reducedMode: boolean;
    isOver: boolean;
    isRejected: boolean;
    constructor();
    _options: WorkflowInstanceOptions;
    get options(): WorkflowInstanceOptions;
    set options(value: WorkflowInstanceOptions);
    get localizedMessages(): WorkflowInstanceLocalizedMessages;
    set localizedMessages(value: WorkflowInstanceLocalizedMessages);
    ngOnInit(): void;
    ngOnChanges(): void;
    getStepIconClass(step: StepModel): string;
    getStepTooltip(step: StepModel): string;
    isActiveStep(stepIdx: number): boolean;
    isPassed(step: StepInstance): boolean;
    isActualValidator(step: StepInstance, validator: WorkflowActor): boolean;
    isCircuitOver(): boolean;
    getCircuitEndAdditionalClasses(): string[];
    getAdditionalValidatorListClasses(): void;
    getStepAdditionalClasses(step: StepInstance, stepIdx: number): string[];
    getValidatorClasses(step: StepInstance, validator: WorkflowActor): string;
}
