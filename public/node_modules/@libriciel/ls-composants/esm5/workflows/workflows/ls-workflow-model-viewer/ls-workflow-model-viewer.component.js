/**
 * @fileoverview added by tsickle
 * Generated from: workflows/ls-workflow-model-viewer/ls-workflow-model-viewer.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ContentChild, Input, TemplateRef } from '@angular/core';
import { WorkflowModel } from '../../shared/model/workflows/workflow-model';
import { StepState } from '../../shared/model/workflows/step-state';
var LsWorkflowModelViewerComponent = /** @class */ (function () {
    // messages = CircuitDisplayMessages;
    function LsWorkflowModelViewerComponent() {
        this.isInstance = false;
        this.isOver = false;
        this.isRejected = false;
    }
    /**
     * @return {?}
     */
    LsWorkflowModelViewerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (!this.circuit) {
            console.error('Missing input circuit data');
            this.circuit = new WorkflowModel();
        }
        if (!this.messages) {
            throw new Error('Missing localised messages for LsWorkflowViewerComponent!');
        }
        if (!this.getStepIconClassFct) {
            throw new Error('Missing getStepIconClassFct for LsWorkflowViewerComponent!');
        }
        if (!this.getStepTooltipFct) {
            throw new Error('Missing getStepTooltipFct for LsWorkflowViewerComponent!');
        }
    };
    /**
     * @return {?}
     */
    LsWorkflowModelViewerComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        console.debug('LsWorkflowViewerComponent::ngOnChanges, ', this);
        if (this.isInstance) {
            console.debug('LsWorkflowViewerComponent::ngOnChanges - circuit is an instance ');
            /** @type {?} */
            var workflow = (/** @type {?} */ (this.circuit));
            this.activeStep = workflow.currentStepIdx;
            this.isOver = workflow.isOver;
            this.isRejected = workflow.rejected;
        }
    };
    /**
     * @param {?} step
     * @return {?}
     */
    LsWorkflowModelViewerComponent.prototype.getStepIconClass = /**
     * @param {?} step
     * @return {?}
     */
    function (step) {
        return this.getStepIconClassFct(step);
    };
    /**
     * @param {?} step
     * @return {?}
     */
    LsWorkflowModelViewerComponent.prototype.getStepTooltip = /**
     * @param {?} step
     * @return {?}
     */
    function (step) {
        return this.getStepTooltipFct(step);
    };
    /**
     * @param {?} stepIdx
     * @return {?}
     */
    LsWorkflowModelViewerComponent.prototype.isActiveStep = /**
     * @param {?} stepIdx
     * @return {?}
     */
    function (stepIdx) {
        return !this.isRejected && !this.isOver && stepIdx === this.activeStep;
    };
    /**
     * @param {?} step
     * @return {?}
     */
    LsWorkflowModelViewerComponent.prototype.isPassed = /**
     * @param {?} step
     * @return {?}
     */
    function (step) {
        return this.isInstance && ((step.state === StepState.VALIDATED) || (step.state === StepState.REJECTED));
    };
    /**
     * @param {?} step
     * @param {?} validator
     * @return {?}
     */
    LsWorkflowModelViewerComponent.prototype.isActualValidator = /**
     * @param {?} step
     * @param {?} validator
     * @return {?}
     */
    function (step, validator) {
        return this.isInstance && (step.validatedBy.some((/**
         * @param {?} elem
         * @return {?}
         */
        function (elem) { return elem.id === validator.id; })));
    };
    /**
     * @return {?}
     */
    LsWorkflowModelViewerComponent.prototype.isCircuitOver = /**
     * @return {?}
     */
    function () {
        return this.isOver && !this.isRejected;
    };
    /**
     * @return {?}
     */
    LsWorkflowModelViewerComponent.prototype.getCircuitEndAdditionalClasses = /**
     * @return {?}
     */
    function () {
        if (this.getCircuitEndAdditionalClassesFct) {
            return this.getCircuitEndAdditionalClassesFct();
        }
        return '';
    };
    /**
     * @param {?} step
     * @param {?} validator
     * @return {?}
     */
    LsWorkflowModelViewerComponent.prototype.getValidatorClasses = /**
     * @param {?} step
     * @param {?} validator
     * @return {?}
     */
    function (step, validator) {
        if (this.isActualValidator(step, validator)) {
            if (step.state === StepState.REJECTED) {
                return this.messages.REJECTED_BY_ICON_CLASS;
            }
            else {
                return this.messages.VALIDATED_BY_ICON_CLASS;
            }
        }
        return '';
    };
    LsWorkflowModelViewerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ls-workflow-model-viewer',
                    template: "<div class=\"ls-workflow-display\">\n  <div class=\"ls-workflow-canevas\">\n    <div class=\"circuit-start\">\n      <div class=\"ls-workflow-endpoint-content\">\n        <span class=\"ls-workflow-endpoint-icn fa fa fa-2x\" [ngClass]=\"messages.CIRCUIT_START_ICON\"></span>\n        <span class=\"ls-step-bounds-txt\" [innerText]=\"messages.FIRST_STEP_TXT\"></span>\n      </div>\n    </div>\n    <div class=\"steps-container\">\n      <div *ngFor=\"let step of circuit.steps; index as i\" >\n        <div class=\"ls-workflow-display-step-container\">\n          <div  class=\"ls-workflow-step\" [ngClass]=\"isActiveStep(i) ? 'wa-active-step wa-white-icn' : ''\">\n            <div class=\"ls-step-top-line\">\n              <div class=\"step-number\">{{i + 1}}.</div>\n              <div class=\"step-name\">{{step.name}}</div>\n              <div [ngClass]=\"getStepIconClass(step)\" class=\"step-icn fa\" ngbTooltip=\"{{getStepTooltip(step)}}\"></div>\n            </div>\n            <div class=\"ls-display-step-separator\"></div>\n            <div class=\"ls-step-validator-list\" [ngClass]=\"isInstance ? 'wa-circuit-instance' : ''\">\n              <ng-container *ngIf=\"isPassed(step)\">\n                <div *ngFor=\"let validator of step.validators\">\n                  <ng-template\n                    [ngTemplateOutlet]=\"passedStepTemplateRef\"\n                    [ngTemplateOutletContext]=\"{step: step, validator: validator}\">\n                  </ng-template>\n                </div>\n              </ng-container>\n              <ng-container *ngIf=\" ! isPassed(step)\">\n                <div *ngFor=\"let validator of step.validators\">\n                  <ng-template\n                    [ngTemplateOutlet]=\"pendingStepTemplateRef\"\n                    [ngTemplateOutletContext]=\"{step: step, validator: validator}\">\n                  </ng-template>\n                </div>\n              </ng-container>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"ls-workflow-end\">\n      <div class=\"ls-workflow-endpoint-content\" [ngClass]=\"getCircuitEndAdditionalClasses()\">\n        <span class=\"ls-workflow-endpoint-icn fa fa-2x\" [ngClass]=\"messages.CIRCUIT_END_ICON\"></span>\n        <span class=\"ls-step-bounds-txt\" [innerText]=\"messages.LAST_STEP_TXT\"></span>\n      </div>\n    </div>\n  </div>\n</div>\n",
                    styles: ["body{background-color:var(--ls-grey-50)}.active-btn{color:#42a1e8}.ls-workflow-canevas{-ms-grid-column:1;grid-column:1;height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.ls-workflow-step{background-color:#fff;-webkit-box-shadow:0 0 .25rem rgba(0,0,0,.15);box-shadow:0 0 .25rem rgba(0,0,0,.15);border:none;width:var(--ls-workflow-step-width,20rem);min-height:6rem}.ls-workflow-step .ls-step-top-line{padding:.5rem;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-weight:700}.ls-workflow-step .ls-display-step-separator{width:100%;border-bottom:1px solid #d3d3d3}.ls-workflow-step .ls-step-validator-list{padding:.5rem .5rem .5rem 1.5rem;color:#5b5b5b}.ls-workflow-step.selected{-webkit-box-shadow:0 .5rem .25rem rgba(0,0,0,.3);box-shadow:0 .5rem .25rem rgba(0,0,0,.3)}.ls-workflow-step .step-icn{width:1.7rem;height:1.7rem}.ls-workflow-endpoint-content{margin:auto;text-align:center}.ls-workflow-endpoint-content .ls-step-bounds-txt{color:var(--primary);font-weight:700}.ls-workflow-endpoint-content .ls-workflow-endpoint-icn{color:var(--primary)}.ls-workflow-endpoint-content.not-active .ls-step-bounds-txt,.ls-workflow-endpoint-content.not-active .ls-workflow-endpoint-icn{color:#5b5b5b}.ls-workflow-endpoint-content .ls-step-validator-list{text-align:left}.ls-actual-validator{font-weight:700}.ls-actual-validator::before{content:'\\f00c';font-family:FontAwesome;color:var(--primary);font-size:1em;position:absolute;left:.5em}.ls-rejector{font-weight:700}.ls-rejector::before{content:'\\f00d';font-family:FontAwesome;color:var(--danger);font-size:1em;position:absolute;left:.5em}.wa-comment-icon{color:var(--primary);font-size:1em;margin-right:.5em}.ls-workflow-display .ls-workflow-step{padding-left:0;padding-right:0;margin:1rem auto}.ls-workflow-display .ls-workflow-step .ls-step-validator-list{padding:1rem 1rem 1rem .5rem}.ls-workflow-display .ls-workflow-step .ls-step-validator-list.ls-workflow-instance{padding-left:2rem}.ls-workflow-display .ls-workflow-endpoint-content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.ls-workflow-display .ls-workflow-endpoint-content .ls-step-bounds-txt{margin-left:.5rem}.ls-workflow-display .ls-step-top-line{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;padding-left:.5rem}.ls-workflow-display .ls-step-top-line .step-name{-webkit-box-flex:1;-ms-flex:1;flex:1;margin-left:.7rem}.ls-workflow-display .ls-display-step-separator{width:100%;border-bottom:1px solid #d3d3d3}.ls-workflow-display .ls-workflow-display-step-container{position:relative}.ls-workflow-display .ls-active-step .ls-step-top-line{background-color:var(--primary);color:#fff;margin:0}.ls-workflow-display .ls-active-step .ls-step-top-line .step-icn{color:#fff}.ls-workflow-display .ls-active-step::before{content:'\\f061';font-family:FontAwesome;color:var(--primary);font-size:2em;position:absolute;left:-1em}.ls-workflow-display .ls-active-step.end-step::before{font-size:1.2em}.ls-workflow-end{position:relative}"]
                }] }
    ];
    /** @nocollapse */
    LsWorkflowModelViewerComponent.ctorParameters = function () { return []; };
    LsWorkflowModelViewerComponent.propDecorators = {
        passedStepTemplateRef: [{ type: ContentChild, args: ['passedStepContent',] }],
        pendingStepTemplateRef: [{ type: ContentChild, args: ['pendingStepContent',] }],
        circuit: [{ type: Input }],
        activeStep: [{ type: Input }],
        messages: [{ type: Input }],
        getStepIconClassFct: [{ type: Input }],
        getStepTooltipFct: [{ type: Input }],
        getCircuitEndAdditionalClassesFct: [{ type: Input }],
        isInstance: [{ type: Input }]
    };
    return LsWorkflowModelViewerComponent;
}());
export { LsWorkflowModelViewerComponent };
if (false) {
    /** @type {?} */
    LsWorkflowModelViewerComponent.prototype.passedStepTemplateRef;
    /** @type {?} */
    LsWorkflowModelViewerComponent.prototype.pendingStepTemplateRef;
    /** @type {?} */
    LsWorkflowModelViewerComponent.prototype.circuit;
    /** @type {?} */
    LsWorkflowModelViewerComponent.prototype.activeStep;
    /** @type {?} */
    LsWorkflowModelViewerComponent.prototype.messages;
    /** @type {?} */
    LsWorkflowModelViewerComponent.prototype.getStepIconClassFct;
    /** @type {?} */
    LsWorkflowModelViewerComponent.prototype.getStepTooltipFct;
    /** @type {?} */
    LsWorkflowModelViewerComponent.prototype.getCircuitEndAdditionalClassesFct;
    /** @type {?} */
    LsWorkflowModelViewerComponent.prototype.isInstance;
    /** @type {?} */
    LsWorkflowModelViewerComponent.prototype.isOver;
    /** @type {?} */
    LsWorkflowModelViewerComponent.prototype.isRejected;
}
//# sourceMappingURL=data:application/json;base64,