# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  version: '%env(VERSION)%'
  product_name: '%env(PRODUCT_NAME)%'
  product_editor: '%env(PRODUCT_EDITOR)%'

  document_files_directory: '/data/workspace/'
  document_full_zip_directory: '/data/zip/'
  document_full_pdf_directory: '/data/pdf/'
  token_directory: '/data/token/'

  email_from: '%env(EMAIL_FROM)%'
  email_alias: '%env(EMAIL_ALIAS)%'

  url_client: '%env(URL)%/idelibre_client'

  max_batch_email: 50
  max_email_attachment_file_size: 512000

  nodejs_passphrase: '%env(PASSPHRASE)%'
  nodejs_notification_url: 'http://node-idelibre:3000/notifications'

  nodejs_host: 'http://node-idelibre:3000'
  nginx_host: 'https://nginx-idelibre'

  legacy_salt: '%env(SALT)%'

  env(HIDE_LEFT_BANNER_LOGIN): false
  hide_left_banner_login: '%env(bool:HIDE_LEFT_BANNER_LOGIN)%'

  env(WKHTMLTOPDF_PATH): /usr/bin/wkhtmltopdf
  env(WKHTMLTOIMAGE_PATH): /usr/bin/wkhtmltoimage

  minimumEntropyForUserWithRoleHigh: '%env(ENTROPY_ADMIN)%'
  limit_line_table: '20'

  maximum_size_pdf_zip_generation: '%env(int:MAXIMUM_SIZE_PDF_ZIP_GENERATION)%'

  csv_max_size: "5M"
  csv_mime_types_authorized: [
    'text/csv',  # .csv
    'text/plain'
  ]

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'
      - '../src/Tests/'

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  App\Sidebar\Listener\SidebarListener:
    tags:
      - { name: kernel.event_listener, event: kernel.controller, method: onKernelRequest }

  Mailjet\Client:
    arguments:
      $key: '%env(MAILJET_KEY)%'
      $secret: '%env(MAILJET_SECRET)%'
      $call: true
      $settings: { 'version': 'v3.1' }

  App\Service\Email\EmailServiceInterface:
    factory: [ '@App\Service\Email\EmailServiceFactory', 'chooseImplementation' ]

  App\Service\ClientNotifier\ClientNotifierInterface:
    factory: [ '@App\Service\ClientNotifier\ClientNotifierFactory', 'chooseImplementation' ]

  Libriciel\LshorodatageApiWrapper\LsHorodatage:
    calls:
      - setUrl: [ 'http://lshorodatage:3000' ]


  Libriciel\LshorodatageApiWrapper\LshorodatageInterface:
    factory: [ '@App\Service\Timestamp\LshorodatageFactory', 'chooseImplementation' ]

  Libriciel\ComelusApiWrapper\ComelusWrapper:

  Libriciel\LsMessageWrapper\LsMessageWrapper:

  App\EventListener\PartySaveNotifier:
    tags:
      - name: 'doctrine.orm.entity_listener'
        event: 'preFlush'
        entity: 'App\Entity\Party'

  App\ArgumentResolver\DataArgumentResolver:
    tags:
      - { name: controller.argument_value_resolver, priority: 50 }
