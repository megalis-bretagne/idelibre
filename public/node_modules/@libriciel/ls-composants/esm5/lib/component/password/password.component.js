/**
 * @fileoverview added by tsickle
 * Generated from: lib/component/password/password.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, forwardRef, Input, Renderer2, ViewChild } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
var PasswordComponent = /** @class */ (function () {
    function PasswordComponent(element, renderer2) {
        this.element = element;
        this.renderer2 = renderer2;
        this.showIcon = true;
        this.trim = false;
        this.isShown = false;
        this.onChange = (/**
         * @return {?}
         */
        function () {
            // tslint:disable-next-line:semicolon
        });
        this.onTouched = (/**
         * @return {?}
         */
        function () {
            // tslint:disable-next-line:semicolon
        });
    }
    Object.defineProperty(PasswordComponent.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this._value;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this.trim) {
                this._value = value.trim();
            }
            else {
                this._value = value;
            }
            this.onChange(this._value);
            this.onTouched();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    PasswordComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var id = this.element.nativeElement.getAttribute('id');
        this.renderer2.removeAttribute(this.element.nativeElement, 'id');
        this.renderer2.setAttribute(this.input.nativeElement, 'id', id);
    };
    /**
     * @return {?}
     */
    PasswordComponent.prototype.togglePassword = /**
     * @return {?}
     */
    function () {
        this.isShown = !this.isShown;
    };
    /**
     * @return {?}
     */
    PasswordComponent.prototype.onChangeSelection = /**
     * @return {?}
     */
    function () {
        this.onChange(this._value);
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    PasswordComponent.prototype.registerOnChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onChange = fn;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    PasswordComponent.prototype.registerOnTouched = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onTouched = fn;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    PasswordComponent.prototype.writeValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (value) {
            this.value = value;
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PasswordComponent.prototype.trimValue = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.trim) {
            event.target.value = event.target.value.trim();
        }
    };
    PasswordComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ls-password',
                    template: "<div class=\"form-group input-group-front-icon\" [class.input-group-front-icon]=\"showIcon\">\n  <span *ngIf=\"showIcon\">\n    <i class=\"fa fa-lock\"></i>\n  </span>\n  <input #input [attr.name]=\"name\" [(ngModel)]=\"value\" (ngModelChange)=\"onChangeSelection()\" [required]=\"required\"\n         class=\"form-control\" [type]=\"isShown ? 'text' : 'password'\" (keyup)=\"trimValue($event)\">\n\n  <span class=\"input-icon\" (click)=\"togglePassword()\">\n    <i class=\"fa\" [ngClass]=\"isShown ? 'fa-eye-slash' : 'fa-eye'\"></i>\n  </span>\n</div>\n\n\n\n\n\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return PasswordComponent; })),
                            multi: true
                        }
                    ],
                    styles: [".input-icon{position:absolute;top:0;right:0;background-color:transparent;color:var(--ls-grey-500);cursor:pointer;height:99%;width:40px;border-radius:5px 0 0 5px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.input-icon:hover{color:var(--ls-grey-700)}.input-group-end-icon,:host.input-group-end-icon{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex}.input-group-end-icon input,:host.input-group-end-icon input{padding-right:36px}input.ls-action-input{cursor:pointer}.input-group.input-group-end-icon .input-icon,:host.input-group.input-group-end-icon .input-icon{z-index:3}.form-group{position:relative}input::-ms-clear,input::-ms-reveal{display:none}"]
                }] }
    ];
    /** @nocollapse */
    PasswordComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    PasswordComponent.propDecorators = {
        showIcon: [{ type: Input }],
        required: [{ type: Input }],
        trim: [{ type: Input }],
        input: [{ type: ViewChild, args: ['input',] }],
        name: [{ type: Input }],
        _value: [{ type: Input }]
    };
    return PasswordComponent;
}());
export { PasswordComponent };
if (false) {
    /** @type {?} */
    PasswordComponent.prototype.showIcon;
    /** @type {?} */
    PasswordComponent.prototype.required;
    /** @type {?} */
    PasswordComponent.prototype.trim;
    /** @type {?} */
    PasswordComponent.prototype.input;
    /** @type {?} */
    PasswordComponent.prototype.name;
    /** @type {?} */
    PasswordComponent.prototype.isShown;
    /** @type {?} */
    PasswordComponent.prototype._value;
    /** @type {?} */
    PasswordComponent.prototype.onChange;
    /** @type {?} */
    PasswordComponent.prototype.onTouched;
    /**
     * @type {?}
     * @private
     */
    PasswordComponent.prototype.element;
    /**
     * @type {?}
     * @private
     */
    PasswordComponent.prototype.renderer2;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFzc3dvcmQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGxpYnJpY2llbC9scy1jb21wb3NhbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudC9wYXNzd29yZC9wYXNzd29yZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQWlCLFNBQVMsRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlHLE9BQU8sRUFBd0IsaUJBQWlCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUV6RTtJQXFCRSwyQkFBb0IsT0FBbUIsRUFBVSxTQUFvQjtRQUFqRCxZQUFPLEdBQVAsT0FBTyxDQUFZO1FBQVUsY0FBUyxHQUFULFNBQVMsQ0FBVztRQVA1RCxhQUFRLEdBQUcsSUFBSSxDQUFDO1FBRWhCLFNBQUksR0FBRyxLQUFLLENBQUM7UUFHdEIsWUFBTyxHQUFHLEtBQUssQ0FBQztRQStCaEIsYUFBUTs7O1FBQVE7WUFDZCxxQ0FBcUM7UUFDdkMsQ0FBQyxFQUFDO1FBRUYsY0FBUzs7O1FBQVE7WUFDZixxQ0FBcUM7UUFDdkMsQ0FBQyxFQUFDO0lBbENGLENBQUM7SUFJRCxzQkFBSSxvQ0FBSzs7OztRQUFUO1lBQ0UsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3JCLENBQUM7Ozs7O1FBRUQsVUFBVSxLQUFLO1lBQ2IsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFO2dCQUNiLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO2FBQzVCO2lCQUFNO2dCQUNMLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO2FBQ3JCO1lBQ0QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDM0IsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ25CLENBQUM7OztPQVZBOzs7O0lBWUQsMkNBQWU7OztJQUFmOztZQUNRLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDO1FBQ3hELElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ2pFLElBQUksQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSxFQUFFLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNsRSxDQUFDOzs7O0lBRUQsMENBQWM7OztJQUFkO1FBQ0UsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDL0IsQ0FBQzs7OztJQVdELDZDQUFpQjs7O0lBQWpCO1FBQ0UsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDN0IsQ0FBQzs7Ozs7SUFFRCw0Q0FBZ0I7Ozs7SUFBaEIsVUFBaUIsRUFBRTtRQUNqQixJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztJQUNyQixDQUFDOzs7OztJQUVELDZDQUFpQjs7OztJQUFqQixVQUFrQixFQUFFO1FBQ2xCLElBQUksQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDO0lBQ3RCLENBQUM7Ozs7O0lBRUQsc0NBQVU7Ozs7SUFBVixVQUFXLEtBQUs7UUFDZCxJQUFJLEtBQUssRUFBRTtZQUNULElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1NBQ3BCO0lBQ0gsQ0FBQzs7Ozs7SUFFRCxxQ0FBUzs7OztJQUFULFVBQVUsS0FBSztRQUNiLElBQUksSUFBSSxDQUFDLElBQUksRUFBRTtZQUNiLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO1NBQ2hEO0lBQ0gsQ0FBQzs7Z0JBakZGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsYUFBYTtvQkFDdkIsaWtCQUF3QztvQkFFeEMsU0FBUyxFQUFFO3dCQUNUOzRCQUNFLE9BQU8sRUFBRSxpQkFBaUI7NEJBQzFCLFdBQVcsRUFBRSxVQUFVOzs7NEJBQUMsY0FBTSxPQUFBLGlCQUFpQixFQUFqQixDQUFpQixFQUFDOzRCQUNoRCxLQUFLLEVBQUUsSUFBSTt5QkFDWjtxQkFDRjs7aUJBQ0Y7Ozs7Z0JBZGtDLFVBQVU7Z0JBQXFCLFNBQVM7OzsyQkFpQnhFLEtBQUs7MkJBQ0wsS0FBSzt1QkFDTCxLQUFLO3dCQUNMLFNBQVMsU0FBQyxPQUFPO3VCQUNqQixLQUFLO3lCQU1MLEtBQUs7O0lBMkRSLHdCQUFDO0NBQUEsQUFuRkQsSUFtRkM7U0F2RVksaUJBQWlCOzs7SUFFNUIscUNBQXlCOztJQUN6QixxQ0FBMkI7O0lBQzNCLGlDQUFzQjs7SUFDdEIsa0NBQTBCOztJQUMxQixpQ0FBYzs7SUFDZCxvQ0FBZ0I7O0lBS2hCLG1DQUFnQjs7SUEwQmhCLHFDQUVFOztJQUVGLHNDQUVFOzs7OztJQW5DVSxvQ0FBMkI7Ozs7O0lBQUUsc0NBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBmb3J3YXJkUmVmLCBJbnB1dCwgUmVuZGVyZXIyLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRyb2xWYWx1ZUFjY2Vzc29yLCBOR19WQUxVRV9BQ0NFU1NPUiB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbHMtcGFzc3dvcmQnLFxuICB0ZW1wbGF0ZVVybDogJy4vcGFzc3dvcmQuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9wYXNzd29yZC5jb21wb25lbnQuc2NzcyddLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcbiAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFBhc3N3b3JkQ29tcG9uZW50KSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfVxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBQYXNzd29yZENvbXBvbmVudCBpbXBsZW1lbnRzIENvbnRyb2xWYWx1ZUFjY2Vzc29yLCBBZnRlclZpZXdJbml0IHtcblxuICBASW5wdXQoKSBzaG93SWNvbiA9IHRydWU7XG4gIEBJbnB1dCgpIHJlcXVpcmVkOiBib29sZWFuO1xuICBASW5wdXQoKSB0cmltID0gZmFsc2U7XG4gIEBWaWV3Q2hpbGQoJ2lucHV0JykgaW5wdXQ7XG4gIEBJbnB1dCgpIG5hbWU7XG4gIGlzU2hvd24gPSBmYWxzZTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnQ6IEVsZW1lbnRSZWYsIHByaXZhdGUgcmVuZGVyZXIyOiBSZW5kZXJlcjIpIHtcbiAgfVxuXG4gIEBJbnB1dCgpIF92YWx1ZTtcblxuICBnZXQgdmFsdWUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3ZhbHVlO1xuICB9XG5cbiAgc2V0IHZhbHVlKHZhbHVlKSB7XG4gICAgaWYgKHRoaXMudHJpbSkge1xuICAgICAgdGhpcy5fdmFsdWUgPSB2YWx1ZS50cmltKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX3ZhbHVlID0gdmFsdWU7XG4gICAgfVxuICAgIHRoaXMub25DaGFuZ2UodGhpcy5fdmFsdWUpO1xuICAgIHRoaXMub25Ub3VjaGVkKCk7XG4gIH1cblxuICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XG4gICAgY29uc3QgaWQgPSB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2lkJyk7XG4gICAgdGhpcy5yZW5kZXJlcjIucmVtb3ZlQXR0cmlidXRlKHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LCAnaWQnKTtcbiAgICB0aGlzLnJlbmRlcmVyMi5zZXRBdHRyaWJ1dGUodGhpcy5pbnB1dC5uYXRpdmVFbGVtZW50LCAnaWQnLCBpZCk7XG4gIH1cblxuICB0b2dnbGVQYXNzd29yZCgpIHtcbiAgICB0aGlzLmlzU2hvd24gPSAhdGhpcy5pc1Nob3duO1xuICB9XG5cbiAgb25DaGFuZ2U6IGFueSA9ICgpID0+IHtcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6c2VtaWNvbG9uXG4gIH07XG5cbiAgb25Ub3VjaGVkOiBhbnkgPSAoKSA9PiB7XG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOnNlbWljb2xvblxuICB9O1xuXG5cbiAgb25DaGFuZ2VTZWxlY3Rpb24oKSB7XG4gICAgdGhpcy5vbkNoYW5nZSh0aGlzLl92YWx1ZSk7XG4gIH1cblxuICByZWdpc3Rlck9uQ2hhbmdlKGZuKSB7XG4gICAgdGhpcy5vbkNoYW5nZSA9IGZuO1xuICB9XG5cbiAgcmVnaXN0ZXJPblRvdWNoZWQoZm4pIHtcbiAgICB0aGlzLm9uVG91Y2hlZCA9IGZuO1xuICB9XG5cbiAgd3JpdGVWYWx1ZSh2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSkge1xuICAgICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICAgIH1cbiAgfVxuXG4gIHRyaW1WYWx1ZShldmVudCkge1xuICAgIGlmICh0aGlzLnRyaW0pIHtcbiAgICAgIGV2ZW50LnRhcmdldC52YWx1ZSA9IGV2ZW50LnRhcmdldC52YWx1ZS50cmltKCk7XG4gICAgfVxuICB9XG5cbn1cbiJdfQ==